/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 21:04:32 GMT 2021
 */

package MVC.Comparators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Comparators.DistanciaLojaComparator;
import MVC.Models.BaseModels.GPS;
import MVC.Models.BaseModels.Loja;
import MVC.Models.BaseModels.Transportadora;
import MVC.Models.BaseModels.TransportadoraMed;
import MVC.Models.BaseModels.User;
import MVC.Models.BaseModels.Utilizador;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DistanciaLojaComparator_ESTest extends DistanciaLojaComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Loja loja0 = new Loja();
      GPS gPS0 = loja0.getGPS();
      DistanciaLojaComparator distanciaLojaComparator0 = new DistanciaLojaComparator(gPS0);
      Utilizador utilizador0 = new Utilizador("MVC.Comparators.DistanciaLojaComparator", "MVC.Comparators.DistanciaLojaComparator", 0.0, 0);
      int int0 = distanciaLojaComparator0.compare((User) utilizador0, (User) loja0);
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Loja loja0 = new Loja("F  {b<>`", "F  {b<>`", 3155.135380238206, 3155.135380238206);
      GPS gPS0 = loja0.getGPS();
      DistanciaLojaComparator distanciaLojaComparator0 = new DistanciaLojaComparator(gPS0);
      int int0 = distanciaLojaComparator0.compare((User) loja0, (User) loja0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Loja loja0 = new Loja("F  {b<>`", "F  {b<>`", 3155.135380238206, 3155.135380238206);
      GPS gPS0 = loja0.getGPS();
      DistanciaLojaComparator distanciaLojaComparator0 = new DistanciaLojaComparator(gPS0);
      TransportadoraMed transportadoraMed0 = new TransportadoraMed();
      int int0 = distanciaLojaComparator0.compare((User) loja0, (User) transportadoraMed0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Loja loja0 = new Loja("F  {b<>`", "F  {b<>`", 3155.135380238206, 3155.135380238206);
      GPS gPS0 = loja0.getGPS();
      DistanciaLojaComparator distanciaLojaComparator0 = new DistanciaLojaComparator(gPS0);
      TransportadoraMed transportadoraMed0 = new TransportadoraMed();
      int int0 = distanciaLojaComparator0.compare((User) transportadoraMed0, (User) loja0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DistanciaLojaComparator distanciaLojaComparator0 = new DistanciaLojaComparator((GPS) null);
      Transportadora transportadora0 = new Transportadora("", "", 586.3510369, 1.0, "{uE7eTY>3]l!pJY", 1.0, 1.0, (-2418));
      // Undeclared exception!
      try { 
        distanciaLojaComparator0.compare((User) transportadora0, (User) transportadora0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Comparators.DistanciaLojaComparator", e);
      }
  }
}
