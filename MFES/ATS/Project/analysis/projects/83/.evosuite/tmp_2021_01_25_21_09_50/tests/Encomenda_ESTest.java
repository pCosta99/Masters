/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 21:16:46 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDateTime;
import java.time.Month;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Encomenda_ESTest extends Encomenda_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      
      encomenda0.setEntregue(false);
      encomenda0.setEntregue(false);
      encomenda0.setPreparada(true);
      double double0 = (-2606.698412885);
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("\"!KSZ6R3igb*$\"2", "a$H", (-2606.698412885), 1826.1);
      linhaEncomenda0.setCodigo("a$H");
      encomenda0.setCodigo_user((String) null);
      linhaEncomenda0.setDescricao("I{m'VXePOEs5%C");
      encomenda0.equals(linhaEncomenda0);
      long long0 = 3264L;
      System.setCurrentTimeMillis(3264L);
      encomenda0.toString();
      encomenda0.toString();
      encomenda0.setPeso((-2606.698412885));
      Encomenda encomenda1 = new Encomenda();
      // Undeclared exception!
      try { 
        encomenda0.equals(encomenda1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      Encomenda encomenda1 = encomenda0.clone();
      encomenda0.setPreparada(false);
      Map<String, LinhaEncomenda> map0 = encomenda1.getProdutos();
      encomenda1.setProdutos(map0);
      encomenda0.setComprador("<8 foOVciU+6[nDVf6a");
      Map<String, LinhaEncomenda> map1 = encomenda0.getProdutos();
      encomenda0.isEncomendaMedica();
      encomenda0.getCodigo();
      Map<String, LinhaEncomenda> map2 = encomenda1.getProdutos();
      encomenda0.setCodigo(" ");
      ZoneId zoneId0 = ZoneId.systemDefault();
      Clock clock0 = MockClock.tickMinutes(zoneId0);
      encomenda0.getProdutos();
      encomenda1.setEntregue(true);
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      encomenda0.setData(localDateTime0);
      encomenda0.getPeso();
      encomenda0.setVendedor("Produto: ");
      encomenda0.setEncomendaMedica(false);
      encomenda0.isEntregue();
      encomenda0.isPreparada();
      encomenda0.getData();
      encomenda1.getPeso();
      encomenda0.setProdutos(map2);
      encomenda0.setLevantada(false);
      encomenda0.isPreparada();
      encomenda0.setProdutos(map1);
      encomenda1.getProdutos();
      encomenda1.setPeso(0.0);
      Encomenda encomenda2 = encomenda0.clone();
      encomenda1.equals(encomenda2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertNotNull(encomenda0);
      
      encomenda0.setEntregue(true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      
      Encomenda encomenda1 = encomenda0.clone();
      encomenda0.setComprador("h_");
      encomenda1.setVendedor((String) null);
      encomenda1.equals(encomenda0);
      encomenda0.getComprador();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      Encomenda encomenda1 = new Encomenda(encomenda0);
      encomenda0.setEntregue(true);
      encomenda0.setVendedor("Saco de lixo 30l");
      Object object0 = new Object();
      encomenda0.equals(object0);
      Encomenda encomenda2 = encomenda1.clone();
      encomenda2.toString();
      encomenda2.setComprador((String) null);
      encomenda2.setCodigo_loja("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n");
      encomenda2.setPreparada(true);
      encomenda2.toString();
      System.setCurrentTimeMillis(691L);
      System.setCurrentTimeMillis((-1L));
      encomenda2.toString();
      Encomenda encomenda3 = encomenda2.clone();
      Encomenda encomenda4 = new Encomenda(encomenda0);
      encomenda0.equals(encomenda4);
      System.setCurrentTimeMillis(0L);
      encomenda2.toString();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      encomenda1.setData(localDateTime0);
      Map<String, LinhaEncomenda> map0 = encomenda1.getProdutos();
      encomenda3.getComprador();
      System.setCurrentTimeMillis((-1L));
      encomenda0.getProdutos();
      encomenda3.toString();
      Encomenda encomenda5 = new Encomenda("_uy9lBVv", (String) null, "C\u00F3digo: ", (-1563.81290499), "\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\nPeso: 0.0\nComprador: null\nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", "", map0, true, localDateTime0, true, false, true);
      encomenda1.equals(encomenda5);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      encomenda0.setVendedor("Comprador: ");
      encomenda0.setCodigo_user("C\u00F3digo da loja: ");
      encomenda0.setPeso(3879.640683632565);
      encomenda0.equals(encomenda0);
      encomenda0.getCodigo_user();
      encomenda0.getProdutos();
      encomenda0.setCodigo_loja("C\u00F3digo da loja: ");
      encomenda0.isEntregue();
      encomenda0.getCodigo_loja();
      encomenda0.setEntregue(false);
      encomenda0.setComprador("<#5YV1");
      encomenda0.isPreparada();
      encomenda0.setLevantada(true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      Object object0 = new Object();
      encomenda0.equals(object0);
      encomenda0.setCodigo_user("8<rsN(p@!!-bR");
      encomenda0.getComprador();
      encomenda0.equals(" ");
      encomenda0.setEntregue(false);
      encomenda0.equals(object0);
      encomenda0.setLevantada(false);
      encomenda0.getComprador();
      encomenda0.equals(object0);
      encomenda0.equals(" ");
      encomenda0.getComprador();
      Encomenda encomenda1 = encomenda0.clone();
      encomenda0.getComprador();
      Encomenda encomenda2 = new Encomenda();
      encomenda1.equals(encomenda2);
      encomenda0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      Map<String, LinhaEncomenda> map0 = encomenda1.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      assertNotNull(localDateTime0);
      
      encomenda1.setCodigo_user("Quantidade: ");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = new Encomenda("Desinfetante", "Desinfetante", "Desinfetante", 1127.569115, "mKB\";n7\"*#%o-~1Il/ ", "mKB\";n7\"*#%o-~1Il/ ", map0, true, localDateTime0, true, true, true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("Desinfetante", encomenda2.getCodigo_user());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getComprador());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      
      encomenda2.setCodigo_user("mKB\";n7\"*#%o-~1Il/ ");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getComprador());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      boolean boolean0 = encomenda2.isEntregue();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getComprador());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      LocalDateTime localDateTime1 = encomenda0.getData();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(localDateTime1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(localDateTime1.equals((Object)localDateTime0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(localDateTime1, localDateTime0);
      
      encomenda1.setPeso((-1802.63603));
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      encomenda2.setComprador("Desinfetante");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      Map<String, LinhaEncomenda> map1 = encomenda0.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertNotNull(map1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(map1.equals((Object)map0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(map1, map0);
      
      encomenda2.setLevantada(true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda2.setProdutos(map0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda0.setData(localDateTime0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(localDateTime0, localDateTime1);
      
      boolean boolean1 = encomenda0.isLevantada();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      encomenda0.setEncomendaMedica(true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      encomenda2.setPeso(1469.68822072);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1469.68822072, encomenda2.getPeso(), 0.01);
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda0.setVendedor("mKB\";n7\"*#%o-~1Il/ ");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      double double0 = encomenda2.getPeso();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1469.68822072, encomenda2.getPeso(), 0.01);
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertEquals(1469.68822072, double0, 0.01);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda2.setPeso(1127.569115);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda2.setCodigo("jTnE");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertEquals("jTnE", encomenda2.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      String string0 = encomenda2.getCodigo_user();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertEquals("jTnE", encomenda2.getCodigo());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda1.setPreparada(true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertTrue(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      encomenda1.setCodigo_user("Quantidade: ");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertTrue(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      double double1 = encomenda1.getPeso();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertTrue(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-1802.63603), double1, 0.01);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      Map<String, LinhaEncomenda> map2 = encomenda2.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals((-1802.63603), encomenda1.getPeso(), 0.01);
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertTrue(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isEntregue());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertTrue(encomenda2.isLevantada());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertEquals("jTnE", encomenda2.getCodigo());
      assertTrue(map2.isEmpty());
      assertEquals(0, map2.size());
      assertNotNull(map2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(map2.equals((Object)map1));
      assertTrue(map2.equals((Object)map0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(map2, map1);
      assertNotSame(map2, map0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertNotNull(encomenda0);
      
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertNotNull(linhaEncomenda0);
      
      boolean boolean0 = encomenda0.equals(linhaEncomenda0);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertFalse(boolean0);
      
      encomenda0.setPeso((-3016.2946225));
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      
      encomenda0.setCodigo_user("!V/iOd");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      
      encomenda0.setLevantada(true);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      
      encomenda0.setComprador("oseNt6_U>Xs");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertEquals("oseNt6_U>Xs", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      
      encomenda0.setLevantada(true);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertEquals("oseNt6_U>Xs", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      
      encomenda0.setCodigo("oseNt6_U>Xs");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertEquals("oseNt6_U>Xs", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      linhaEncomenda0.setQuantidade((-3016.2946225));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-3016.2946225), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      
      encomenda0.setCodigo_user("^Akv1-");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("^Akv1-", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertEquals("oseNt6_U>Xs", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      encomenda0.setLevantada(true);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("^Akv1-", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertEquals("oseNt6_U>Xs", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      encomenda0.setComprador("Encomenda");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("^Akv1-", encomenda0.getCodigo_user());
      assertEquals("Encomenda", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      encomenda0.setEncomendaMedica(false);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("^Akv1-", encomenda0.getCodigo_user());
      assertEquals("Encomenda", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      encomenda0.setCodigo_user("!V/iOd");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("Encomenda", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      encomenda0.setComprador("");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      encomenda0.setEntregue(true);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isLevantada());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      encomenda0.setEncomendaMedica(true);
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      linhaEncomenda0.setPreco((-3016.2946225));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertEquals((-3016.2946225), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-3016.2946225), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      
      encomenda0.setPreparada(false);
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      String string0 = encomenda0.getCodigo_loja();
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      assertNotNull(string0);
      assertEquals(" ", string0);
      
      LocalDateTime localDateTime0 = encomenda0.getData();
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      assertNotNull(localDateTime0);
      
      encomenda0.setLevantada(true);
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      encomenda0.setProdutos(map0);
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      
      boolean boolean1 = encomenda0.isEntregue();
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      encomenda0.setEntregue(false);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      
      Encomenda encomenda1 = encomenda0.clone();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals((-3016.2946225), encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("!V/iOd", encomenda0.getCodigo_user());
      assertEquals("oseNt6_U>Xs", encomenda0.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals((-3016.2946225), encomenda1.getPeso(), 0.01);
      assertEquals("oseNt6_U>Xs", encomenda1.getCodigo());
      assertEquals("!V/iOd", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertTrue(encomenda1.isLevantada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getComprador());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNotNull(encomenda0);
      
      encomenda0.setCodigo("Peso: ");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      assertNotNull(localDateTime0);
      
      encomenda0.setData(localDateTime0);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      encomenda1.setCodigo_loja("");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setComprador("Saco de lixo 30l");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda1.toString();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertEquals("\nEncomenda: \nC\u00F3digo: Peso: \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: \nPeso: 0.0\nComprador: Saco de lixo 30l\nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setLevantada(false);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      HashMap<String, LinhaEncomenda> hashMap0 = new HashMap<String, LinhaEncomenda>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda((String) null, "Saco de lixo 30l", (-1.0), (-1128.97506));
      assertNull(linhaEncomenda0.getCodigo());
      assertTrue(linhaEncomenda0.isMed());
      assertEquals((-1.0), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals((-1128.97506), linhaEncomenda0.getPreco(), 0.01);
      assertEquals("Saco de lixo 30l", linhaEncomenda0.getDescricao());
      assertNotNull(linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda1 = hashMap0.put("\nEncomenda: \nC\u00F3digo: Peso: \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: \nPeso: 0.0\nComprador: Saco de lixo 30l\nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", linhaEncomenda0);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertNull(linhaEncomenda0.getCodigo());
      assertTrue(linhaEncomenda0.isMed());
      assertEquals((-1.0), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals((-1128.97506), linhaEncomenda0.getPreco(), 0.01);
      assertEquals("Saco de lixo 30l", linhaEncomenda0.getDescricao());
      assertNull(linhaEncomenda1);
      
      encomenda1.setProdutos(hashMap0);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setPeso(0.0);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setVendedor("Saco de lixo de 50l");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals("Saco de lixo de 50l", encomenda1.getVendedor());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean0 = encomenda1.equals(encomenda0);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals("Saco de lixo de 50l", encomenda1.getVendedor());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean1 = encomenda0.isEntregue();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = encomenda1.equals(object0);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals("Saco de lixo de 50l", encomenda1.getVendedor());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda0.getCodigo();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("Peso: ", string1);
      assertNotSame(encomenda0, encomenda1);
      
      String string2 = encomenda1.getCodigo_loja();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals("Saco de lixo de 50l", encomenda1.getVendedor());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertNotNull(string2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean3 = encomenda1.equals("\nEncomenda: \nC\u00F3digo: Peso: \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: \nPeso: 0.0\nComprador: Saco de lixo 30l\nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("Peso: ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals("Saco de lixo de 50l", encomenda1.getVendedor());
      assertFalse(encomenda1.isPreparada());
      assertEquals("Peso: ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("Saco de lixo 30l", encomenda1.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertFalse(encomenda2.isEntregue());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertNotNull(encomenda2);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertTrue(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      String string0 = encomenda1.getCodigo();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertNotNull(string0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertEquals(" ", string0);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setPeso(1.0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(1.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setEntregue(false);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(1.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda1.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(1.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setPreparada(true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setProdutos(map0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(1.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setLevantada(false);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(1.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      LocalDateTime localDateTime0 = encomenda1.getData();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(1.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertNotNull(localDateTime0);
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda1.equals(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(1.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setPreparada(false);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(1.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda1.getComprador();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(1.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertNotNull(string1);
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertEquals(" ", string1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNotNull(encomenda0);
      
      encomenda0.setEntregue(true);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setPeso((-832.6182129));
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals((-832.6182129), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda1.equals(encomenda0);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals((-832.6182129), encomenda1.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda0.getComprador();
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertEquals(" ", string0);
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals((-832.6182129), encomenda1.getPeso(), 0.01);
      assertTrue(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals((-832.6182129), encomenda2.getPeso(), 0.01);
      assertEquals(" ", encomenda2.getVendedor());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, LinhaEncomenda> hashMap0 = new HashMap<String, LinhaEncomenda>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      Encomenda encomenda0 = new Encomenda("r%+&", "r%+&", "Pre\u00E7o: ", 0.0, "Pre\u00E7o: ", "", hashMap0, true, (LocalDateTime) null, true, true, true);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getVendedor());
      assertEquals("r%+&", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertEquals("r%+&", encomenda0.getCodigo());
      assertEquals("Pre\u00E7o: ", encomenda0.getComprador());
      assertEquals("Pre\u00E7o: ", encomenda0.getCodigo_loja());
      assertNotNull(encomenda0);
      
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("p3M~|h*", "dHaMT~Y", 1798.81027496, 1.0);
      assertEquals("dHaMT~Y", linhaEncomenda0.getDescricao());
      assertEquals(1798.81027496, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("p3M~|h*", linhaEncomenda0.getCodigo());
      assertNotNull(linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda1 = hashMap0.put("r%+&", linhaEncomenda0);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals("dHaMT~Y", linhaEncomenda0.getDescricao());
      assertEquals(1798.81027496, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("p3M~|h*", linhaEncomenda0.getCodigo());
      assertNull(linhaEncomenda1);
      
      encomenda0.setCodigo((String) null);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getVendedor());
      assertEquals("r%+&", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertEquals("Pre\u00E7o: ", encomenda0.getComprador());
      assertEquals("Pre\u00E7o: ", encomenda0.getCodigo_loja());
      assertNull(encomenda0.getCodigo());
      
      boolean boolean0 = encomenda0.isLevantada();
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getVendedor());
      assertEquals("r%+&", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertEquals("Pre\u00E7o: ", encomenda0.getComprador());
      assertEquals("Pre\u00E7o: ", encomenda0.getCodigo_loja());
      assertNull(encomenda0.getCodigo());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      encomenda1.setEncomendaMedica(false);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda0.equals(encomenda1);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setPreparada(true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean1 = encomenda1.equals(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      // Undeclared exception!
      try { 
        ZoneOffset.ofHoursMinutesSeconds(0, (-162), 0);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Zone offset minutes not in valid range: value -162 is not in the range -59 to 59
         //
         verifyException("java.time.ZoneOffset", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-1658L));
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertNotNull(encomenda0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = encomenda0.equals(object0);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(boolean0);
      
      boolean boolean1 = encomenda0.equals(object0);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Encomenda encomenda1 = encomenda0.clone();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda2.getComprador());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getVendedor());
      assertNotNull(encomenda2);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertTrue(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda2.setEncomendaMedica(false);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda2.getComprador());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      boolean boolean2 = encomenda1.equals(encomenda2);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda2.getComprador());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      boolean boolean3 = encomenda1.equals(object1);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(object1.equals((Object)object0));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(object1, object0);
      
      encomenda1.setEncomendaMedica(true);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      Map<String, LinhaEncomenda> map1 = encomenda2.getProdutos();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda2.getComprador());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getVendedor());
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertNotNull(map1);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(map1.equals((Object)map0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(map1, map0);
      
      Encomenda encomenda3 = encomenda1.clone();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getVendedor());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertFalse(encomenda3.isPreparada());
      assertFalse(encomenda3.isEntregue());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertNotNull(encomenda3);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      
      Map<String, LinhaEncomenda> map2 = encomenda0.getProdutos();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(map2.isEmpty());
      assertEquals(0, map2.size());
      assertNotNull(map2);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(map2.equals((Object)map1));
      assertTrue(map2.equals((Object)map0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(map2, map0);
      assertNotSame(map2, map1);
      
      String string0 = encomenda2.toString();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda2.getComprador());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getVendedor());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 1969-12-31T23:59:58.342\nProdutos: \n{}\n", string0);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      String string1 = encomenda3.toString();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getVendedor());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertFalse(encomenda3.isPreparada());
      assertFalse(encomenda3.isEntregue());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 1969-12-31T23:59:58.342\nProdutos: \n{}\n", string1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      
      String string2 = encomenda3.toString();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getVendedor());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertFalse(encomenda3.isPreparada());
      assertFalse(encomenda3.isEntregue());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertNotNull(string2);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertTrue(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 1969-12-31T23:59:58.342\nProdutos: \n{}\n", string2);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      
      String string3 = encomenda2.getComprador();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda2.getComprador());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getVendedor());
      assertNotNull(string3);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda3));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertTrue(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertEquals(" ", string3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      Map<String, LinhaEncomenda> map0 = encomenda1.getProdutos();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      assertNotNull(localDateTime0);
      
      encomenda1.setCodigo_user("Quantidade: ");
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = new Encomenda("Desinfetante", "Desinfetante", "Desinfetante", 1127.569115, "mKB\";n7\"*#%o-~1Il/ ", "mKB\";n7\"*#%o-~1Il/ ", map0, true, localDateTime0, true, true, true);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getComprador());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertEquals("Desinfetante", encomenda2.getCodigo_user());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      
      encomenda2.setCodigo_user("mKB\";n7\"*#%o-~1Il/ ");
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getComprador());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      boolean boolean0 = encomenda2.isEntregue();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getComprador());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      LocalDateTime localDateTime1 = encomenda0.getData();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(localDateTime1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(localDateTime1.equals((Object)localDateTime0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(localDateTime1, localDateTime0);
      
      encomenda2.setComprador("Desinfetante");
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      Map<String, LinhaEncomenda> map1 = encomenda0.getProdutos();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map1.size());
      assertTrue(map1.isEmpty());
      assertNotNull(map1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(map1.equals((Object)map0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(map1, map0);
      
      encomenda2.setLevantada(true);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda2.setProdutos(map0);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda0.setData(localDateTime0);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(localDateTime0, localDateTime1);
      
      boolean boolean1 = encomenda0.isLevantada();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      encomenda0.setEncomendaMedica(true);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      encomenda2.setPeso(1469.68822072);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertEquals(1469.68822072, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda0.setVendedor("mKB\";n7\"*#%o-~1Il/ ");
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      double double0 = encomenda2.getPeso();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertEquals(1469.68822072, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertEquals(1469.68822072, double0, 0.01);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda2.setPeso(1127.569115);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals("Desinfetante", encomenda2.getCodigo());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda2.setCodigo("jTnE");
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertEquals("jTnE", encomenda2.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      String string0 = encomenda2.getCodigo_user();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("Desinfetante", encomenda2.getComprador());
      assertTrue(encomenda2.isLevantada());
      assertTrue(encomenda2.isPreparada());
      assertEquals(1127.569115, encomenda2.getPeso(), 0.01);
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getVendedor());
      assertEquals("Desinfetante", encomenda2.getCodigo_loja());
      assertTrue(encomenda2.isEntregue());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda2.getCodigo_user());
      assertEquals("jTnE", encomenda2.getCodigo());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(map0.equals((Object)map1));
      assertTrue(localDateTime0.equals((Object)localDateTime1));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map0, map1);
      assertNotSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda1.setPreparada(true);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isPreparada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      encomenda1.setCodigo_user("Quantidade: ");
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isPreparada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      double double1 = encomenda1.getPeso();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals("mKB\";n7\"*#%o-~1Il/ ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("Quantidade: ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isPreparada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      Clock clock0 = MockClock.systemDefaultZone();
      assertNotNull(clock0);
      
      encomenda0.setLevantada(false);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      assertNotNull(localDateTime0);
      
      Encomenda encomenda1 = new Encomenda("-WL5ZUaroKgf[f9\"", "", "", 3543.4, "TKDc~jxW11uoC*", "", map0, false, localDateTime0, false, false, false);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertEquals("", encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertNotNull(encomenda1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      Encomenda encomenda2 = new Encomenda(encomenda1);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertEquals("", encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEncomendaMedica());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda2.getCodigo());
      assertEquals(3543.4, encomenda2.getPeso(), 0.01);
      assertEquals("TKDc~jxW11uoC*", encomenda2.getComprador());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      
      boolean boolean0 = encomenda2.equals((Object) null);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertEquals("", encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEncomendaMedica());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda2.getCodigo());
      assertEquals(3543.4, encomenda2.getPeso(), 0.01);
      assertEquals("TKDc~jxW11uoC*", encomenda2.getComprador());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda0.setPreparada(false);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      encomenda1.setVendedor((String) null);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      Encomenda encomenda3 = encomenda2.clone();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEncomendaMedica());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda2.getCodigo());
      assertEquals(3543.4, encomenda2.getPeso(), 0.01);
      assertEquals("TKDc~jxW11uoC*", encomenda2.getComprador());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals("", encomenda3.getVendedor());
      assertFalse(encomenda3.isEncomendaMedica());
      assertFalse(encomenda3.isLevantada());
      assertEquals("", encomenda3.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda3.getCodigo());
      assertFalse(encomenda3.isPreparada());
      assertEquals(3543.4, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isEntregue());
      assertEquals("", encomenda3.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda3.getComprador());
      assertNotNull(encomenda3);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda2);
      
      LocalDateTime localDateTime1 = encomenda2.getData();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEncomendaMedica());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda2.getCodigo());
      assertEquals(3543.4, encomenda2.getPeso(), 0.01);
      assertEquals("TKDc~jxW11uoC*", encomenda2.getComprador());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertNotNull(localDateTime1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(encomenda2.equals((Object)encomenda3));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertSame(localDateTime1, localDateTime0);
      
      boolean boolean1 = encomenda1.isEntregue();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      
      encomenda0.setData(localDateTime1);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEncomendaMedica());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda2.getCodigo());
      assertEquals(3543.4, encomenda2.getPeso(), 0.01);
      assertEquals("TKDc~jxW11uoC*", encomenda2.getComprador());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(encomenda2.equals((Object)encomenda3));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertSame(localDateTime1, localDateTime0);
      
      encomenda3.setCodigo((String) null);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEncomendaMedica());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda2.getCodigo());
      assertEquals(3543.4, encomenda2.getPeso(), 0.01);
      assertEquals("TKDc~jxW11uoC*", encomenda2.getComprador());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals("", encomenda3.getVendedor());
      assertFalse(encomenda3.isEncomendaMedica());
      assertFalse(encomenda3.isLevantada());
      assertNull(encomenda3.getCodigo());
      assertEquals("", encomenda3.getCodigo_user());
      assertFalse(encomenda3.isPreparada());
      assertEquals(3543.4, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isEntregue());
      assertEquals("", encomenda3.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda3.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda2);
      
      String string0 = encomenda2.getCodigo_user();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEncomendaMedica());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda2.getCodigo());
      assertEquals(3543.4, encomenda2.getPeso(), 0.01);
      assertEquals("TKDc~jxW11uoC*", encomenda2.getComprador());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertEquals("", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertSame(localDateTime0, localDateTime1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      
      encomenda0.setCodigo("");
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      
      encomenda0.setCodigo("Q$O \"@ya;j,");
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("Q$O \"@ya;j,", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      
      Encomenda encomenda4 = encomenda0.clone();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("Q$O \"@ya;j,", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("Q$O \"@ya;j,", encomenda4.getCodigo());
      assertEquals(" ", encomenda4.getComprador());
      assertFalse(encomenda4.isPreparada());
      assertFalse(encomenda4.isLevantada());
      assertEquals(0.0, encomenda4.getPeso(), 0.01);
      assertTrue(encomenda4.isEncomendaMedica());
      assertFalse(encomenda4.isEntregue());
      assertEquals(" ", encomenda4.getCodigo_loja());
      assertEquals(" ", encomenda4.getCodigo_user());
      assertEquals(" ", encomenda4.getVendedor());
      assertNotNull(encomenda4);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertTrue(encomenda4.equals((Object)encomenda0));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda4, encomenda3);
      assertNotSame(encomenda4, encomenda2);
      assertNotSame(encomenda4, encomenda0);
      assertNotSame(encomenda4, encomenda1);
      
      encomenda4.setProdutos(map0);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("Q$O \"@ya;j,", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals("Q$O \"@ya;j,", encomenda4.getCodigo());
      assertEquals(" ", encomenda4.getComprador());
      assertFalse(encomenda4.isPreparada());
      assertFalse(encomenda4.isLevantada());
      assertEquals(0.0, encomenda4.getPeso(), 0.01);
      assertTrue(encomenda4.isEncomendaMedica());
      assertFalse(encomenda4.isEntregue());
      assertEquals(" ", encomenda4.getCodigo_loja());
      assertEquals(" ", encomenda4.getCodigo_user());
      assertEquals(" ", encomenda4.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda4));
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertTrue(encomenda4.equals((Object)encomenda0));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda4, encomenda3);
      assertNotSame(encomenda4, encomenda2);
      assertNotSame(encomenda4, encomenda0);
      assertNotSame(encomenda4, encomenda1);
      
      LocalDateTime localDateTime2 = encomenda1.getData();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("Q$O \"@ya;j,", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertNotNull(localDateTime2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda4));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda4));
      assertFalse(encomenda1.equals((Object)encomenda3));
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertSame(localDateTime2, localDateTime1);
      assertSame(localDateTime2, localDateTime0);
      assertSame(localDateTime0, localDateTime1);
      assertSame(localDateTime0, localDateTime2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda4);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertNotNull(linhaEncomenda0);
      
      boolean boolean2 = encomenda3.equals(linhaEncomenda0);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("Q$O \"@ya;j,", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertEquals(3543.4, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda1.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEncomendaMedica());
      assertEquals("-WL5ZUaroKgf[f9\"", encomenda2.getCodigo());
      assertEquals(3543.4, encomenda2.getPeso(), 0.01);
      assertEquals("TKDc~jxW11uoC*", encomenda2.getComprador());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals("", encomenda3.getVendedor());
      assertFalse(encomenda3.isEncomendaMedica());
      assertFalse(encomenda3.isLevantada());
      assertNull(encomenda3.getCodigo());
      assertEquals("", encomenda3.getCodigo_user());
      assertFalse(encomenda3.isPreparada());
      assertEquals(3543.4, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isEntregue());
      assertEquals("", encomenda3.getCodigo_loja());
      assertEquals("TKDc~jxW11uoC*", encomenda3.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda4));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda4));
      assertFalse(encomenda1.equals((Object)encomenda3));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda4));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(boolean2);
      assertNotSame(encomenda0, encomenda4);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertSame(localDateTime0, localDateTime1);
      assertSame(localDateTime0, localDateTime2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda4);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda4);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda4);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda2);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertNotNull(encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      encomenda0.setEncomendaMedica(false);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      
      encomenda0.setEncomendaMedica(false);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      
      encomenda0.setVendedor("");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getVendedor());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setCodigo("");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setComprador("");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setCodigo_user("");
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setProdutos(map0);
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setLevantada(false);
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setVendedor("{mi?@R1gtd48ky");
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean0 = encomenda0.isLevantada();
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      String string0 = encomenda0.getComprador();
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertEquals("", string0);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setComprador("");
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      LocalDateTime localDateTime0 = encomenda0.getData();
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(localDateTime0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setCodigo_loja("{mi?@R1gtd48ky");
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      String string1 = encomenda0.getCodigo();
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean1 = encomenda0.isEntregue();
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean2 = encomenda0.isEncomendaMedica();
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean3 = encomenda1.isPreparada();
      assertEquals("", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals("{mi?@R1gtd48ky", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean3);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getComprador());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      Encomenda encomenda2 = encomenda1.clone();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals(" ", encomenda2.getVendedor());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getComprador());
      assertNotNull(encomenda2);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda0.setPeso(21.93802012302);
      assertFalse(encomenda0.isEntregue());
      assertEquals(21.93802012302, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      encomenda1.setPeso((-2990.88239284));
      assertFalse(encomenda0.isEntregue());
      assertEquals(21.93802012302, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals((-2990.88239284), encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      Encomenda encomenda3 = encomenda1.clone();
      assertFalse(encomenda0.isEntregue());
      assertEquals(21.93802012302, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals((-2990.88239284), encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getVendedor());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertEquals((-2990.88239284), encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isPreparada());
      assertNotNull(encomenda3);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda0);
      
      encomenda3.setCodigo_loja("");
      assertFalse(encomenda0.isEntregue());
      assertEquals(21.93802012302, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals((-2990.88239284), encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals("", encomenda3.getCodigo_loja());
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getVendedor());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertEquals((-2990.88239284), encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda2.getProdutos();
      assertFalse(encomenda0.isEntregue());
      assertEquals(21.93802012302, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals((-2990.88239284), encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals(" ", encomenda2.getVendedor());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertNotNull(encomenda0);
      
      encomenda0.setComprador("");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      encomenda0.setProdutos(map0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      
      HashMap<String, LinhaEncomenda> hashMap0 = new HashMap<String, LinhaEncomenda>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      Collection<LinhaEncomenda> collection0 = hashMap0.values();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(collection0);
      
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertNotNull(linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda1 = hashMap0.put("", linhaEncomenda0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertNull(linhaEncomenda1);
      
      encomenda0.setProdutos(hashMap0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      
      Map<String, LinhaEncomenda> map1 = encomenda0.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(map1.isEmpty());
      assertEquals(1, map1.size());
      assertNotNull(map1);
      assertFalse(map1.equals((Object)map0));
      assertNotSame(map1, map0);
      
      encomenda0.setLevantada(true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      
      encomenda0.setEntregue(true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      
      String string0 = encomenda0.getCodigo_user();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertNotNull(string0);
      assertEquals(" ", string0);
      
      String string1 = encomenda0.getCodigo();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertNotNull(string1);
      assertEquals(" ", string1);
      
      encomenda0.setLevantada(true);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      
      boolean boolean0 = encomenda0.isEncomendaMedica();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(boolean0);
      
      Month month0 = Month.DECEMBER;
      // Undeclared exception!
      try { 
        MockLocalDateTime.of(553, month0, 0, 553, (-1835), (-2051), 553);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for DayOfMonth (valid values 1 - 28/31): 0
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      encomenda0.setVendedor("");
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      
      String string0 = encomenda0.toString();
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(string0);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      
      encomenda0.setEntregue(false);
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      
      encomenda0.setComprador("");
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      
      encomenda0.setPreparada(true);
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      
      Map<String, LinhaEncomenda> map1 = encomenda0.getProdutos();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertNotNull(map1);
      assertTrue(map1.equals((Object)map0));
      assertNotSame(map1, map0);
      
      Map<String, LinhaEncomenda> map2 = encomenda0.getProdutos();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map2.size());
      assertTrue(map2.isEmpty());
      assertNotNull(map2);
      assertTrue(map2.equals((Object)map1));
      assertTrue(map2.equals((Object)map0));
      assertNotSame(map2, map0);
      assertNotSame(map2, map1);
      
      String string1 = encomenda0.toString();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador: \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string1);
      
      boolean boolean0 = encomenda0.isEncomendaMedica();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(boolean0);
      
      encomenda0.setCodigo("");
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      
      encomenda0.setEncomendaMedica(true);
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      
      String string2 = encomenda0.getCodigo_user();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("", encomenda0.getCodigo());
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(" ", string2);
      
      encomenda0.setCodigo("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n");
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      
      encomenda0.setCodigo_loja("U<,d;");
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      
      String string3 = encomenda0.getComprador();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("", string3);
      
      String string4 = encomenda0.getVendedor();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertTrue(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals("", string4);
      
      encomenda0.setVendedor("");
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      
      String string5 = encomenda0.toString();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertNotNull(string5);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertEquals("\nEncomenda: \nC\u00F3digo: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: U<,d;\nPeso: 0.0\nComprador: \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string5);
      
      encomenda0.setVendedor("}jJ[C(");
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("}jJ[C(", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      
      String string6 = encomenda0.getCodigo();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("}jJ[C(", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertNotNull(string6);
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string4));
      assertTrue(string6.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string6);
      
      String string7 = encomenda0.getCodigo_user();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("}jJ[C(", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertNotNull(string7);
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string0));
      assertEquals(" ", string7);
      
      Encomenda encomenda1 = encomenda0.clone();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("}jJ[C(", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("}jJ[C(", encomenda1.getVendedor());
      assertEquals("", encomenda1.getComprador());
      assertTrue(encomenda1.isPreparada());
      assertEquals("U<,d;", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("}jJ[C(", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("}jJ[C(", encomenda1.getVendedor());
      assertEquals("", encomenda1.getComprador());
      assertTrue(encomenda1.isPreparada());
      assertEquals("U<,d;", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertEquals("}jJ[C(", encomenda2.getVendedor());
      assertFalse(encomenda2.isEntregue());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda2.getCodigo());
      assertEquals("U<,d;", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getComprador());
      assertNotNull(encomenda2);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      Map<String, LinhaEncomenda> map3 = encomenda1.getProdutos();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("}jJ[C(", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("}jJ[C(", encomenda1.getVendedor());
      assertEquals("", encomenda1.getComprador());
      assertTrue(encomenda1.isPreparada());
      assertEquals("U<,d;", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(map3.isEmpty());
      assertEquals(0, map3.size());
      assertNotNull(map3);
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(map3.equals((Object)map0));
      assertTrue(map3.equals((Object)map2));
      assertTrue(map3.equals((Object)map1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(map3, map2);
      assertNotSame(map3, map1);
      assertNotSame(map3, map0);
      
      boolean boolean1 = encomenda1.isLevantada();
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("}jJ[C(", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("}jJ[C(", encomenda1.getVendedor());
      assertEquals("", encomenda1.getComprador());
      assertTrue(encomenda1.isPreparada());
      assertEquals("U<,d;", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      encomenda1.setEntregue(false);
      assertTrue(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("}jJ[C(", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("U<,d;", encomenda0.getCodigo_loja());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("}jJ[C(", encomenda1.getVendedor());
      assertEquals("", encomenda1.getComprador());
      assertTrue(encomenda1.isPreparada());
      assertEquals("U<,d;", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      encomenda0.setCodigo_loja("]|OnT(BDU");
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      
      encomenda0.setCodigo_user("");
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      encomenda0.setPreparada(true);
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      
      encomenda0.setCodigo("");
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      
      boolean boolean0 = encomenda0.isEncomendaMedica();
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertTrue(boolean0);
      
      String string0 = encomenda0.getCodigo();
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertNotNull(string0);
      assertEquals("", string0);
      
      boolean boolean1 = encomenda0.isPreparada();
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Map<String, LinhaEncomenda> map1 = encomenda0.getProdutos();
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertNotNull(map1);
      assertTrue(map1.equals((Object)map0));
      assertNotSame(map1, map0);
      
      encomenda0.setCodigo("");
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      
      String string1 = encomenda0.getCodigo_loja();
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("]|OnT(BDU", string1);
      
      boolean boolean2 = encomenda0.equals("");
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      LocalDateTime localDateTime0 = encomenda0.getData();
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertNotNull(localDateTime0);
      
      encomenda0.setData(localDateTime0);
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      
      encomenda0.setEncomendaMedica(true);
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      
      encomenda0.setPreparada(true);
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      
      String string2 = encomenda0.toString();
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo: \nC\u00F3digo do utilizador: \nC\u00F3digo da loja: ]|OnT(BDU\nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string2);
      
      String string3 = encomenda0.getComprador();
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertNotNull(string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(" ", string3);
      
      String string4 = encomenda0.getComprador();
      assertTrue(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("]|OnT(BDU", encomenda0.getCodigo_loja());
      assertEquals("", encomenda0.getCodigo());
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(" ", string4);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      encomenda0.setEntregue(true);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      encomenda0.setCodigo_user("$6 ZQLOx");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("$6 ZQLOx", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      
      Encomenda encomenda1 = new Encomenda((String) null, (String) null, "9VN)/Qz.n7Fxa?e", 0.0, "Alcool", (String) null, map0, true, (LocalDateTime) null, false, false, false);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("$6 ZQLOx", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals("Alcool", encomenda1.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("9VN)/Qz.n7Fxa?e", encomenda1.getCodigo_loja());
      assertNull(encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertNull(encomenda1.getCodigo_user());
      assertNotNull(encomenda1);
      
      String string0 = encomenda1.toString();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("$6 ZQLOx", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals("Alcool", encomenda1.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("9VN)/Qz.n7Fxa?e", encomenda1.getCodigo_loja());
      assertNull(encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertNull(encomenda1.getCodigo_user());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertEquals("\nEncomenda: \nC\u00F3digo: null\nC\u00F3digo do utilizador: null\nC\u00F3digo da loja: 9VN)/Qz.n7Fxa?e\nPeso: 0.0\nComprador: Alcool\nVendedor: null\nData de emiss\u00E3o da encomenda: null\nProdutos: \n{}\n", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda0.equals(encomenda1);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("$6 ZQLOx", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals("Alcool", encomenda1.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals("9VN)/Qz.n7Fxa?e", encomenda1.getCodigo_loja());
      assertNull(encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertNull(encomenda1.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda0.getCodigo_user();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("$6 ZQLOx", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("$6 ZQLOx", string1);
      assertNotSame(encomenda0, encomenda1);
      
      LocalDateTime localDateTime0 = encomenda0.getData();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("$6 ZQLOx", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(localDateTime0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean1 = encomenda0.equals("");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("$6 ZQLOx", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setEntregue(true);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("$6 ZQLOx", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setPeso((-1.0));
      assertEquals((-1.0), encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("$6 ZQLOx", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.toString();
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(string0);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      Encomenda encomenda1 = new Encomenda("", "", "", 2093.0, "", "", map0, true, (LocalDateTime) null, false, false, false);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertNotNull(encomenda1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      encomenda0.setCodigo_user((String) null);
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda encomenda2 = new Encomenda(encomenda1);
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda2.isEntregue());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getCodigo());
      assertEquals("", encomenda2.getVendedor());
      assertEquals(2093.0, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isPreparada());
      assertEquals("", encomenda2.getComprador());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      
      Map<String, LinhaEncomenda> map1 = encomenda1.getProdutos();
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0, map1.size());
      assertTrue(map1.isEmpty());
      assertNotNull(map1);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(map1.equals((Object)map0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(map0, map1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(map1, map0);
      
      encomenda2.setPeso(2093.0);
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda2.isEntregue());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getCodigo());
      assertEquals("", encomenda2.getVendedor());
      assertEquals(2093.0, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isPreparada());
      assertEquals("", encomenda2.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(map0.equals((Object)map1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(map0, map1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda2.setPreparada(true);
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda2.isEntregue());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getCodigo());
      assertEquals("", encomenda2.getVendedor());
      assertEquals(2093.0, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("", encomenda2.getCodigo_user());
      assertEquals("", encomenda2.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(map0.equals((Object)map1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(map0, map1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda2.setCodigo_user("");
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda2.isEntregue());
      assertEquals("", encomenda2.getCodigo_loja());
      assertEquals("", encomenda2.getCodigo());
      assertEquals("", encomenda2.getVendedor());
      assertEquals(2093.0, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isPreparada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("", encomenda2.getCodigo_user());
      assertEquals("", encomenda2.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(map0.equals((Object)map1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(map0, map1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      boolean boolean0 = encomenda1.isLevantada();
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(map0.equals((Object)map1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(map0, map1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setData((LocalDateTime) null);
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setPreparada(false);
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(map0.equals((Object)map1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(map0, map1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda1.getComprador();
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(map0.equals((Object)map1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(map0, map1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      String string2 = encomenda1.toString();
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("", encomenda1.getCodigo_user());
      assertEquals("", encomenda1.getVendedor());
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2093.0, encomenda1.getPeso(), 0.01);
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertNotNull(string2);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(map0.equals((Object)map1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("\nEncomenda: \nC\u00F3digo: \nC\u00F3digo do utilizador: \nC\u00F3digo da loja: \nPeso: 2093.0\nComprador: \nVendedor: \nData de emiss\u00E3o da encomenda: null\nProdutos: \n{}\n", string2);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(map0, map1);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setCodigo_user((String) null);
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      double double0 = encomenda1.getPeso();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertEquals(0.0, double0, 0.01);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setCodigo_loja((String) null);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setData((LocalDateTime) null);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setEntregue(false);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setCodigo_loja("vs&*^");
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertEquals("vs&*^", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setData((LocalDateTime) null);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setLevantada(false);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean0 = encomenda0.isPreparada();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      String string0 = encomenda1.getCodigo_loja();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertEquals("vs&*^", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertNotNull(string0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertEquals("vs&*^", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda0.getCodigo_loja();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertNull(string1);
      assertNotSame(encomenda0, encomenda1);
      
      LocalDateTime localDateTime0 = encomenda0.getData();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertNull(localDateTime0);
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean1 = encomenda1.isPreparada();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertEquals("vs&*^", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = new Encomenda();
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getCodigo());
      assertTrue(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertNotNull(encomenda2);
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      
      Map<String, LinhaEncomenda> map0 = encomenda2.getProdutos();
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getCodigo());
      assertTrue(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda0.setProdutos(map0);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNull(encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getCodigo());
      assertTrue(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      Encomenda encomenda1 = new Encomenda("8<rsN(p@!!-bR", "#=}r*%WF\"7ePy", "8<rsN(p@!!-bR", 2204.12353, "8<rsN(p@!!-bR", "o4", map0, true, (LocalDateTime) null, true, false, false);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertNotNull(encomenda1);
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      encomenda1.setProdutos(map0);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setPreparada(false);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = new Encomenda(encomenda1);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda2.isPreparada());
      assertEquals("8<rsN(p@!!-bR", encomenda2.getCodigo_loja());
      assertEquals("o4", encomenda2.getVendedor());
      assertFalse(encomenda2.isLevantada());
      assertEquals("8<rsN(p@!!-bR", encomenda2.getCodigo());
      assertTrue(encomenda2.isEntregue());
      assertEquals(2204.12353, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("8<rsN(p@!!-bR", encomenda2.getComprador());
      assertEquals("#=}r*%WF\"7ePy", encomenda2.getCodigo_user());
      assertNotNull(encomenda2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      
      Encomenda encomenda3 = encomenda1.clone();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda3.isPreparada());
      assertEquals("8<rsN(p@!!-bR", encomenda3.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda3.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda3.getComprador());
      assertTrue(encomenda3.isEntregue());
      assertEquals("#=}r*%WF\"7ePy", encomenda3.getCodigo_user());
      assertEquals("o4", encomenda3.getVendedor());
      assertFalse(encomenda3.isLevantada());
      assertEquals(2204.12353, encomenda3.getPeso(), 0.01);
      assertTrue(encomenda3.isEncomendaMedica());
      assertNotNull(encomenda3);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda0);
      
      encomenda2.setCodigo_loja("i;ukYSE|12{PG>haC{");
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda2.isPreparada());
      assertEquals("i;ukYSE|12{PG>haC{", encomenda2.getCodigo_loja());
      assertEquals("o4", encomenda2.getVendedor());
      assertFalse(encomenda2.isLevantada());
      assertEquals("8<rsN(p@!!-bR", encomenda2.getCodigo());
      assertTrue(encomenda2.isEntregue());
      assertEquals(2204.12353, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("8<rsN(p@!!-bR", encomenda2.getComprador());
      assertEquals("#=}r*%WF\"7ePy", encomenda2.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      String string0 = encomenda2.getCodigo_user();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda2.isPreparada());
      assertEquals("i;ukYSE|12{PG>haC{", encomenda2.getCodigo_loja());
      assertEquals("o4", encomenda2.getVendedor());
      assertFalse(encomenda2.isLevantada());
      assertEquals("8<rsN(p@!!-bR", encomenda2.getCodigo());
      assertTrue(encomenda2.isEntregue());
      assertEquals(2204.12353, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("8<rsN(p@!!-bR", encomenda2.getComprador());
      assertEquals("#=}r*%WF\"7ePy", encomenda2.getCodigo_user());
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertEquals("#=}r*%WF\"7ePy", string0);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda2.setLevantada(true);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda2.isPreparada());
      assertEquals("i;ukYSE|12{PG>haC{", encomenda2.getCodigo_loja());
      assertEquals("o4", encomenda2.getVendedor());
      assertEquals("8<rsN(p@!!-bR", encomenda2.getCodigo());
      assertTrue(encomenda2.isEntregue());
      assertEquals(2204.12353, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals("8<rsN(p@!!-bR", encomenda2.getComprador());
      assertEquals("#=}r*%WF\"7ePy", encomenda2.getCodigo_user());
      assertTrue(encomenda2.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda2, encomenda3);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      double double0 = encomenda1.getPeso();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertEquals(2204.12353, double0, 0.01);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "i;ukYSE|12{PG>haC{", 1.0, 0.0);
      assertEquals("", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("i;ukYSE|12{PG>haC{", linhaEncomenda0.getDescricao());
      assertFalse(linhaEncomenda0.isMed());
      assertNotNull(linhaEncomenda0);
      
      boolean boolean0 = encomenda1.equals(linhaEncomenda0);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo_loja());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getCodigo());
      assertEquals("8<rsN(p@!!-bR", encomenda1.getComprador());
      assertEquals("o4", encomenda1.getVendedor());
      assertEquals("#=}r*%WF\"7ePy", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(2204.12353, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isPreparada());
      assertEquals("", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("i;ukYSE|12{PG>haC{", linhaEncomenda0.getDescricao());
      assertFalse(linhaEncomenda0.isMed());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda3));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(encomenda0);
      
      boolean boolean0 = encomenda0.equals((Object) null);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(boolean0);
      
      encomenda0.setPreparada(true);
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      String string0 = encomenda0.getCodigo();
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(string0);
      assertEquals(" ", string0);
      
      encomenda0.setPreparada(false);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      encomenda0.setPeso(0.0);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      encomenda0.setPeso((-1.0));
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals((-1.0), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      encomenda0.setLevantada(false);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals((-1.0), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      String string1 = encomenda0.toString();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals((-1.0), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: -1.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string1);
      
      encomenda0.setCodigo("");
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals((-1.0), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      String string2 = encomenda0.toString();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals((-1.0), encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo: \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: -1.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string2);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.getCodigo_user();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(string0);
      assertEquals(" ", string0);
      
      encomenda0.setVendedor(" ");
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      String string1 = encomenda0.getCodigo_user();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(string1);
      assertEquals(" ", string1);
      
      encomenda0.setEncomendaMedica(false);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      encomenda0.setCodigo_user(" ");
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      String string2 = encomenda0.getCodigo_user();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(string2);
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals(" ", string2);
      
      encomenda0.setComprador(" ");
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      String string3 = encomenda0.getComprador();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(string3);
      assertTrue(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertEquals(" ", string3);
      
      encomenda0.setComprador(" ");
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      
      LocalDateTime localDateTime0 = encomenda0.getData();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(localDateTime0);
      
      Encomenda encomenda1 = encomenda0.clone();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEncomendaMedica());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda1.getProdutos();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setProdutos(map0);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<String, LinhaEncomenda> hashMap0 = new HashMap<String, LinhaEncomenda>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      assertNotNull(localDateTime0);
      
      Encomenda encomenda0 = new Encomenda((String) null, "U{L1itvtgWGvC", "U{L1itvtgWGvC", 0.0, "\n", "\n", hashMap0, false, localDateTime0, false, false, false);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getCodigo());
      assertEquals("\n", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertNotNull(encomenda0);
      
      encomenda0.setProdutos(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getCodigo());
      assertEquals("\n", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      
      encomenda0.setVendedor((String) null);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertNull(encomenda1.getVendedor());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals("\n", encomenda1.getComprador());
      assertNull(encomenda1.getCodigo());
      assertNotNull(encomenda1);
      
      encomenda1.setCodigo_user("\n");
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertNull(encomenda1.getVendedor());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("\n", encomenda1.getComprador());
      assertNull(encomenda1.getCodigo());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setPeso(0.0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setProdutos(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertNull(encomenda1.getVendedor());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("\n", encomenda1.getComprador());
      assertNull(encomenda1.getCodigo());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda1.getVendedor();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertNull(encomenda1.getVendedor());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("\n", encomenda1.getComprador());
      assertNull(encomenda1.getCodigo());
      assertNull(string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setVendedor("U{L1itvtgWGvC");
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("\n", encomenda1.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setEncomendaMedica(false);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("\n", encomenda1.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setComprador((String) null);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertNull(encomenda1.getComprador());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("U{L1itvtgWGvC", encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setEncomendaMedica(false);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertNull(encomenda1.getComprador());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("U{L1itvtgWGvC", encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setPreparada(false);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertNotSame(encomenda0, encomenda1);
      
      double double0 = encomenda0.getPeso();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertEquals(0.0, double0, 0.01);
      assertNotSame(encomenda0, encomenda1);
      
      String string1 = encomenda0.getCodigo_loja();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertNotNull(string1);
      assertEquals("U{L1itvtgWGvC", string1);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setPreparada(false);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertNull(encomenda1.getComprador());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("U{L1itvtgWGvC", encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string2 = encomenda0.getCodigo();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertNull(string2);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setEntregue(false);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setCodigo("U{L1itvtgWGvC");
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      String string3 = encomenda0.getCodigo_loja();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertNotNull(string3);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertEquals("U{L1itvtgWGvC", string3);
      assertNotSame(encomenda0, encomenda1);
      
      String string4 = encomenda0.getCodigo_loja();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertNotNull(string4);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertEquals("U{L1itvtgWGvC", string4);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setPeso((-2634.449461));
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNull(encomenda0.getVendedor());
      assertEquals((-2634.449461), encomenda0.getPeso(), 0.01);
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      LinhaEncomenda linhaEncomenda0 = hashMap0.putIfAbsent("wc>X1GX$,bgqGI/p", (LinhaEncomenda) null);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertNull(linhaEncomenda0);
      
      encomenda1.setLevantada(false);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertNull(encomenda0.getVendedor());
      assertEquals((-2634.449461), encomenda0.getPeso(), 0.01);
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertNull(encomenda1.getComprador());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("U{L1itvtgWGvC", encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda1.equals("U{L1itvtgWGvC");
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertNull(encomenda0.getVendedor());
      assertEquals((-2634.449461), encomenda0.getPeso(), 0.01);
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("U{L1itvtgWGvC", encomenda0.getCodigo_loja());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("\n", encomenda1.getCodigo_user());
      assertNull(encomenda1.getComprador());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals("U{L1itvtgWGvC", encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertEquals("U{L1itvtgWGvC", encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.getCodigo();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(string0);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      encomenda0.setProdutos(map0);
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertNotNull(encomenda0);
      
      encomenda0.setData((LocalDateTime) null);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      
      encomenda0.setCodigo_user((String) null);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      
      String string0 = encomenda0.getCodigo_user();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertNull(string0);
      
      encomenda0.setPeso(1864.7735);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(1864.7735, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Encomenda encomenda0 = null;
      Encomenda encomenda1 = null;
      try {
        encomenda1 = new Encomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      encomenda0.setCodigo("!");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals("!", encomenda0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      encomenda0.setCodigo_user("C\u00F3digo do utilizador: ");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("C\u00F3digo do utilizador: ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      
      encomenda0.setPreparada(false);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("C\u00F3digo do utilizador: ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("C\u00F3digo do utilizador: ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("C\u00F3digo do utilizador: ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      String string0 = encomenda1.getCodigo_user();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("C\u00F3digo do utilizador: ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("C\u00F3digo do utilizador: ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertNotNull(string0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertEquals("C\u00F3digo do utilizador: ", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda1.isEntregue();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("C\u00F3digo do utilizador: ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("C\u00F3digo do utilizador: ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNotNull(encomenda0);
      
      encomenda0.setCodigo_user("yvbfJ0");
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("yvbfJ0", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("yvbfJ0", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("yvbfJ0", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("yvbfJ0", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("yvbfJ0", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals("yvbfJ0", encomenda2.getCodigo_user());
      assertEquals(" ", encomenda2.getCodigo());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isLevantada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertNotNull(encomenda2);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertTrue(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      encomenda2.setLevantada(false);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("yvbfJ0", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("yvbfJ0", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals("yvbfJ0", encomenda2.getCodigo_user());
      assertEquals(" ", encomenda2.getCodigo());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isLevantada());
      assertTrue(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isEntregue());
      assertFalse(encomenda2.isPreparada());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertTrue(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      Encomenda encomenda3 = encomenda1.clone();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals("yvbfJ0", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals("yvbfJ0", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isEntregue());
      assertFalse(encomenda3.isPreparada());
      assertEquals("yvbfJ0", encomenda3.getCodigo_user());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getVendedor());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertTrue(encomenda3.isEncomendaMedica());
      assertFalse(encomenda3.isLevantada());
      assertNotNull(encomenda3);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertTrue(encomenda3.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda3);
      assertNotSame(encomenda1, encomenda3);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      boolean boolean0 = encomenda0.isEncomendaMedica();
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.getVendedor();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertNotNull(string0);
      assertEquals(" ", string0);
      
      LocalDateTime localDateTime0 = encomenda0.getData();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, 0, 0);
      assertNotNull(zoneOffset0);
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      assertNotNull(localDateTime0);
      
      Encomenda encomenda0 = null;
      try {
        encomenda0 = new Encomenda("", "Pre\u00E7o: ", "8", 0.0, "+c2tv2LUc>C{zy-", "Pre\u00E7o: ", (Map<String, LinhaEncomenda>) null, false, localDateTime0, false, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getComprador());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      // Undeclared exception!
      try { 
        encomenda1.setProdutos((Map<String, LinhaEncomenda>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Encomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      boolean boolean0 = encomenda1.equals(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setComprador("");
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setEntregue(false);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean1 = encomenda0.isLevantada();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setComprador("");
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setPeso((-131.51562205672));
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals((-131.51562205672), encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      encomenda0.setCodigo_loja(",P'h]P=");
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(",P'h]P=", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      encomenda0.setComprador("5pE");
      assertEquals("5pE", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals("5pE", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals("5pE", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = encomenda0.equals(object0);
      assertEquals("5pE", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      double double0 = encomenda0.getPeso();
      assertEquals("5pE", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertEquals(0.0, double0, 0.01);
      assertNotSame(encomenda0, encomenda1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(encomenda0);
      
      encomenda0.setComprador("zd`.2<?64K'UCQ8%");
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("zd`.2<?64K'UCQ8%", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("zd`.2<?64K'UCQ8%", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("zd`.2<?64K'UCQ8%", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      String string0 = encomenda1.toString();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("zd`.2<?64K'UCQ8%", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("zd`.2<?64K'UCQ8%", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertNotNull(string0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador: zd`.2<?64K'UCQ8%\nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string1 = encomenda1.getComprador();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("zd`.2<?64K'UCQ8%", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("zd`.2<?64K'UCQ8%", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertNotNull(string1);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("zd`.2<?64K'UCQ8%", string1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setEncomendaMedica(true);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals("zd`.2<?64K'UCQ8%", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      encomenda0.setComprador("C\u00F3digo de produto: ");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      
      encomenda0.setVendedor("cTc}U\"L63`)6yT,");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("cTc}U\"L63`)6yT,", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      
      encomenda0.setCodigo_user("_5 0Zm7{P$:iFhdJ");
      assertEquals("cTc}U\"L63`)6yT,", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("_5 0Zm7{P$:iFhdJ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      
      boolean boolean0 = encomenda0.equals("_5 0Zm7{P$:iFhdJ");
      assertEquals("cTc}U\"L63`)6yT,", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals("_5 0Zm7{P$:iFhdJ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(encomenda0);
      
      encomenda0.setPeso(3702.622);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(3702.622, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(3702.622, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      LocalDateTime localDateTime0 = encomenda0.getData();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(3702.622, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getComprador());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      String string0 = encomenda1.toString();
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getComprador());
      assertNotNull(string0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean0 = encomenda0.isEntregue();
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setCodigo_user("Qv2%`=XDs61K%tvQI");
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("Qv2%`=XDs61K%tvQI", encomenda1.getCodigo_user());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.getCodigo_loja();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(string0);
      assertEquals(" ", string0);
      
      encomenda0.setPreparada(false);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HashMap<String, LinhaEncomenda> hashMap0 = new HashMap<String, LinhaEncomenda>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      assertNotNull(localDateTime0);
      
      Encomenda encomenda0 = new Encomenda((String) null, (String) null, (String) null, 0.0, (String) null, (String) null, hashMap0, true, localDateTime0, false, false, false);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getComprador());
      assertNull(encomenda0.getCodigo_loja());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(encomenda0);
      
      encomenda0.setLevantada(false);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getComprador());
      assertNull(encomenda0.getCodigo_loja());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      
      boolean boolean0 = encomenda0.equals((Object) null);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getComprador());
      assertNull(encomenda0.getCodigo_loja());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(boolean0);
      
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertNotNull(linhaEncomenda0);
      
      boolean boolean1 = encomenda0.equals(linhaEncomenda0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getComprador());
      assertNull(encomenda0.getCodigo_loja());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      System.setCurrentTimeMillis((-2396L));
      Encomenda encomenda1 = encomenda0.clone();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNull(encomenda0.getVendedor());
      assertNull(encomenda0.getComprador());
      assertNull(encomenda0.getCodigo_loja());
      assertNull(encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertNull(encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertNull(encomenda1.getComprador());
      assertNull(encomenda1.getVendedor());
      assertNull(encomenda1.getCodigo());
      assertNull(encomenda1.getCodigo_loja());
      assertFalse(encomenda1.isLevantada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertNull(encomenda1.getCodigo_user());
      assertNotNull(encomenda1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      boolean boolean0 = encomenda1.isPreparada();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertNotNull(encomenda0);
      
      boolean boolean0 = encomenda0.isLevantada();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(encomenda0);
      
      boolean boolean0 = encomenda0.equals("C\u00F3digo de produto: ");
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(boolean0);
      
      encomenda0.setCodigo_loja("Produto: ");
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      
      String string0 = encomenda0.toString();
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(string0);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      
      encomenda0.setVendedor("C\u00F3digo de produto: ");
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      
      encomenda0.setEntregue(true);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      
      String string1 = encomenda0.toString();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string1);
      
      encomenda0.setComprador("\n");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = encomenda0.equals(object0);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      System.setCurrentTimeMillis((-1025L));
      System.setCurrentTimeMillis(0L);
      encomenda0.setCodigo_user("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo_user());
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo_user());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals("\n", encomenda1.getComprador());
      assertTrue(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals("Produto: ", encomenda1.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setEntregue(false);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo_user());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals("\n", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isLevantada());
      assertEquals("Produto: ", encomenda1.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string2 = encomenda0.toString();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo_user());
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador: \n\nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string2);
      assertNotSame(encomenda0, encomenda1);
      
      System.setCurrentTimeMillis(299L);
      encomenda0.setCodigo_user("\n");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      Encomenda encomenda2 = new Encomenda();
      assertFalse(encomenda2.isEntregue());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getCodigo());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(" ", encomenda2.getComprador());
      assertNotNull(encomenda2);
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      
      boolean boolean2 = encomenda0.equals(encomenda2);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertFalse(encomenda2.isEntregue());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getCodigo());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(" ", encomenda2.getComprador());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      String string3 = encomenda2.toString();
      assertFalse(encomenda2.isEntregue());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getCodigo());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(" ", encomenda2.getComprador());
      assertNotNull(string3);
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 1970-01-01T00:00:00.299\nProdutos: \n{}\n", string3);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      
      String string4 = encomenda0.toString();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertNotNull(string4);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador: \n\nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador: \n\nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string4);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      
      String string5 = encomenda1.toString();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertEquals("\n", encomenda0.getComprador());
      assertEquals("Produto: ", encomenda0.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getVendedor());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals("\n", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isLevantada());
      assertEquals("Produto: ", encomenda1.getCodigo_loja());
      assertEquals("C\u00F3digo de produto: ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertNotNull(string5);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertTrue(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador:  \nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\nC\u00F3digo da loja: Produto: \nPeso: 0.0\nComprador: \n\nVendedor: C\u00F3digo de produto: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string5);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      System.setCurrentTimeMillis((-1658L));
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(encomenda0);
      
      encomenda0.setCodigo("\n");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = encomenda0.equals(object0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(boolean0);
      
      boolean boolean1 = encomenda0.equals(object0);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Encomenda encomenda1 = encomenda0.clone();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Encomenda encomenda2 = encomenda1.clone();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals("\n", encomenda2.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isLevantada());
      assertNotNull(encomenda2);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertTrue(encomenda2.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda2.setCodigo_loja("\n");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals("\n", encomenda2.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isPreparada());
      assertEquals("\n", encomenda2.getCodigo_loja());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      encomenda2.setEncomendaMedica(false);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals("\n", encomenda2.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals("\n", encomenda2.getCodigo_loja());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      boolean boolean2 = encomenda1.equals(encomenda2);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals("\n", encomenda2.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals("\n", encomenda2.getCodigo_loja());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      boolean boolean3 = encomenda1.equals(object1);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(object1.equals((Object)object0));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(object1, object0);
      
      encomenda0.setCodigo_user("\n");
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setEncomendaMedica(true);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      Map<String, LinhaEncomenda> map1 = encomenda2.getProdutos();
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals("\n", encomenda2.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals("\n", encomenda2.getCodigo_loja());
      assertFalse(encomenda2.isLevantada());
      assertNotNull(map1);
      assertTrue(map1.equals((Object)map0));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotSame(map1, map0);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      Map<String, LinhaEncomenda> map2 = encomenda0.getProdutos();
      assertTrue(map2.isEmpty());
      assertEquals(0, map2.size());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(map2);
      assertTrue(map2.equals((Object)map0));
      assertTrue(map2.equals((Object)map1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(map2, map1);
      assertNotSame(map2, map0);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setEncomendaMedica(false);
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      String string0 = encomenda0.toString();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(string0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertEquals("\nEncomenda: \nC\u00F3digo: \n\nC\u00F3digo do utilizador: \n\nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 1969-12-31T23:59:58.342\nProdutos: \n{}\n", string0);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      
      String string1 = encomenda2.toString();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals("\n", encomenda2.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals("\n", encomenda2.getCodigo_loja());
      assertFalse(encomenda2.isLevantada());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertEquals("\nEncomenda: \nC\u00F3digo: \n\nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: \n\nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 1969-12-31T23:59:58.342\nProdutos: \n{}\n", string1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      
      String string2 = encomenda1.toString();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertNotNull(string2);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertEquals("\nEncomenda: \nC\u00F3digo: \n\nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 1969-12-31T23:59:58.342\nProdutos: \n{}\n", string2);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      
      String string3 = encomenda0.toString();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNotNull(string3);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("\nEncomenda: \nC\u00F3digo: \n\nC\u00F3digo do utilizador: \n\nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 1969-12-31T23:59:58.342\nProdutos: \n{}\n", string3);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      
      String string4 = encomenda2.getComprador();
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals("\n", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\n", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals("\n", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isEncomendaMedica());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda2.getComprador());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals("\n", encomenda2.getCodigo());
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals("\n", encomenda2.getCodigo_loja());
      assertFalse(encomenda2.isLevantada());
      assertNotNull(string4);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertEquals(" ", string4);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertNotNull(encomenda0);
      
      encomenda0.setVendedor("Comprador: ");
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      
      encomenda0.setCodigo_user("Comprador: ");
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      
      encomenda0.setPeso(3879.640683632565);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("Comprador: ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(3879.640683632565, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Comprador: ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertNotNull(encomenda1);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      boolean boolean0 = encomenda1.equals(encomenda0);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("Comprador: ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(3879.640683632565, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Comprador: ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      String string0 = encomenda1.getCodigo_user();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("Comprador: ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(3879.640683632565, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Comprador: ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertNotNull(string0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertEquals("Comprador: ", string0);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setCodigo_loja("Comprador: ");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("Comprador: ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(3879.640683632565, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Comprador: ", encomenda1.getCodigo_loja());
      assertEquals("Comprador: ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean1 = encomenda0.isEntregue();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda0.setCodigo_user("Comprador: ");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      String string1 = encomenda1.getCodigo_loja();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("Comprador: ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(3879.640683632565, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Comprador: ", encomenda1.getCodigo_loja());
      assertEquals("Comprador: ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertNotNull(string1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(string1.equals((Object)string0));
      assertEquals("Comprador: ", string1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda1.setEntregue(false);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("Comprador: ", encomenda1.getVendedor());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(3879.640683632565, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Comprador: ", encomenda1.getCodigo_loja());
      assertEquals("Comprador: ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      encomenda0.setComprador("<#5YV1");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals("<#5YV1", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertNotSame(encomenda0, encomenda1);
      
      boolean boolean2 = encomenda0.isPreparada();
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals("<#5YV1", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(encomenda0, encomenda1);
      
      encomenda1.setLevantada(true);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals("<#5YV1", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("Comprador: ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(3879.640683632565, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Comprador: ", encomenda1.getCodigo_loja());
      assertTrue(encomenda1.isLevantada());
      assertEquals("Comprador: ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      
      boolean boolean3 = encomenda1.equals("Comprador: ");
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertEquals("Comprador: ", encomenda0.getVendedor());
      assertEquals(3879.640683632565, encomenda0.getPeso(), 0.01);
      assertEquals("Comprador: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals("<#5YV1", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("Comprador: ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(3879.640683632565, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isPreparada());
      assertEquals("Comprador: ", encomenda1.getCodigo_loja());
      assertTrue(encomenda1.isLevantada());
      assertEquals("Comprador: ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean3);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      encomenda0.setCodigo_user("<8 foOVciU+6[nDVf6a");
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      
      encomenda0.setPreparada(false);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      boolean boolean0 = encomenda0.isEncomendaMedica();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(boolean0);
      
      String string0 = encomenda0.getCodigo();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(string0);
      assertEquals(" ", string0);
      
      Map<String, LinhaEncomenda> map1 = encomenda0.getProdutos();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0, map1.size());
      assertTrue(map1.isEmpty());
      assertNotNull(map1);
      assertTrue(map1.equals((Object)map0));
      assertNotSame(map1, map0);
      
      encomenda0.setCodigo(" ");
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      
      ZoneId zoneId0 = ZoneId.systemDefault();
      assertNotNull(zoneId0);
      
      Clock clock0 = MockClock.tickMinutes(zoneId0);
      assertNotNull(clock0);
      
      Map<String, LinhaEncomenda> map2 = encomenda0.getProdutos();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(map2.isEmpty());
      assertEquals(0, map2.size());
      assertNotNull(map2);
      assertTrue(map2.equals((Object)map1));
      assertTrue(map2.equals((Object)map0));
      assertNotSame(map2, map0);
      assertNotSame(map2, map1);
      
      encomenda0.setEntregue(true);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      assertNotNull(localDateTime0);
      
      encomenda0.setData(localDateTime0);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      
      double double0 = encomenda0.getPeso();
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0.0, double0, 0.01);
      
      encomenda0.setVendedor("Produto: ");
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      
      encomenda0.setEncomendaMedica(false);
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      
      boolean boolean1 = encomenda0.isEntregue();
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = encomenda0.isPreparada();
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      LocalDateTime localDateTime1 = encomenda0.getData();
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      assertNotNull(localDateTime1);
      assertSame(localDateTime1, localDateTime0);
      
      double double1 = encomenda0.getPeso();
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      encomenda0.setProdutos(map1);
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      assertEquals(0, map1.size());
      assertTrue(map1.isEmpty());
      assertTrue(map1.equals((Object)map2));
      assertTrue(map1.equals((Object)map0));
      assertNotSame(map1, map2);
      assertNotSame(map1, map0);
      
      encomenda0.setLevantada(false);
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      
      boolean boolean3 = encomenda0.isPreparada();
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      
      encomenda0.setProdutos(map0);
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertTrue(map0.equals((Object)map1));
      assertTrue(map0.equals((Object)map2));
      assertNotSame(map0, map1);
      assertNotSame(map0, map2);
      
      Map<String, LinhaEncomenda> map3 = encomenda0.getProdutos();
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
      assertTrue(map3.isEmpty());
      assertEquals(0, map3.size());
      assertNotNull(map3);
      assertTrue(map3.equals((Object)map0));
      assertTrue(map3.equals((Object)map2));
      assertTrue(map3.equals((Object)map1));
      assertNotSame(map3, map2);
      assertNotSame(map3, map1);
      assertNotSame(map3, map0);
      
      encomenda0.setPeso(0.0);
      assertEquals("Produto: ", encomenda0.getVendedor());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals("<8 foOVciU+6[nDVf6a", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isEncomendaMedica());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      encomenda0.setEntregue(true);
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_user());
      
      encomenda0.setCodigo_user("$6 ZQLOx");
      Encomenda encomenda1 = new Encomenda((String) null, (String) null, "9VN)/Qz.n7Fxa?e", 0.0, "Alcool", (String) null, map0, true, (LocalDateTime) null, false, false, false);
      encomenda1.toString();
      encomenda0.equals(encomenda1);
      encomenda0.getCodigo_user();
      encomenda0.getData();
      encomenda0.equals("");
      encomenda0.setEntregue(true);
      encomenda0.setPeso(0.0);
      assertFalse(encomenda0.isPreparada());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isEntregue());
      
      encomenda0.setEntregue(true);
      Encomenda encomenda1 = encomenda0.clone();
      encomenda1.equals(encomenda0);
      encomenda0.getComprador();
      assertTrue(encomenda0.isEntregue());
  }
}
