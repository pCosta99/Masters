/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 21:09:20 GMT 2021
 */

package MVC.Models.BaseModels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Models.BaseModels.TransportadoraMed;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransportadoraMed_ESTest extends TransportadoraMed_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed();
      transportadoraMed0.setVelocidadeMed((-2001.189858269138));
      TransportadoraMed transportadoraMed1 = transportadoraMed0.clone();
      assertFalse(transportadoraMed1.aceitaTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("", "lQtJ#;>59kl 0qMwYX", (-1563.85968), (-1563.85968), "", 1.0, (-1563.85968), true);
      TransportadoraMed transportadoraMed1 = transportadoraMed0.clone();
      assertTrue(transportadoraMed1.aceitaTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed();
      transportadoraMed0.classificaTransportadora(1400);
      TransportadoraMed transportadoraMed1 = transportadoraMed0.clone();
      assertFalse(transportadoraMed1.aceitaTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("Q@jR6A", "Q@jR6A", 0.0, 0.0, "", 0.0, 0.0, false, (-1559));
      transportadoraMed0.classificaTransportadora((-1559));
      TransportadoraMed transportadoraMed1 = transportadoraMed0.clone();
      assertFalse(transportadoraMed1.aceitaTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("+V$_l(K6q/h,u\"j_s~", "+V$_l(K6q/h,u\"j_s~", (-1.0), (-1.0), "+V$_l(K6q/h,u\"j_s~", (-1.0), 3238.839993953726, true);
      transportadoraMed0.setKmsTotal(3238.839993953726);
      TransportadoraMed transportadoraMed1 = transportadoraMed0.clone();
      assertTrue(transportadoraMed1.aceitaTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("MVC.Models.BaseModels.User", "MVC.Models.BaseModels.User", (-52.913455229102), (-52.913455229102), "MVC.Models.BaseModels.User", (-52.913455229102), 2084.7, false);
      transportadoraMed0.setKmsTotal((-52.913455229102));
      TransportadoraMed transportadoraMed1 = transportadoraMed0.clone();
      assertFalse(transportadoraMed1.aceitaTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("Q@jR6A", "Q@jR6A", 0.0, 0.0, "", 0.0, 0.0, false, (-1559));
      transportadoraMed0.setEstaLivre(false);
      TransportadoraMed transportadoraMed1 = transportadoraMed0.clone();
      assertFalse(transportadoraMed1.aceitaTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("+V$_l(K6q/h,u\"j_s~", "+V$_l(K6q/h,u\"j_s~", (-1.0), (-1.0), "+V$_l(K6q/h,u\"j_s~", (-1.0), 3238.839993953726, true);
      boolean boolean0 = transportadoraMed0.aceitaTransporteMedicamentos();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = null;
      try {
        transportadoraMed0 = new TransportadoraMed((TransportadoraMed) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("MVC.Models.BaseModels.User", "MVC.Models.BaseModels.User", (-52.913455229102), (-52.913455229102), "MVC.Models.BaseModels.User", (-52.913455229102), 2084.7, false);
      boolean boolean0 = transportadoraMed0.aceitaTransporteMedicamentos();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("MVC.Models.BaseModels.User", "MVC.Models.BaseModels.User", (-52.913455229102), (-52.913455229102), "MVC.Models.BaseModels.User", (-52.913455229102), 2084.7, false);
      TransportadoraMed transportadoraMed1 = new TransportadoraMed(transportadoraMed0);
      assertFalse(transportadoraMed1.aceitaTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed();
      assertFalse(transportadoraMed0.aceitaTransporteMedicamentos());
      
      transportadoraMed0.aceitaMedicamentos(true);
      assertTrue(transportadoraMed0.aceitaTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("pt|", "pt|", 0.0, 0.0, "pt|", 0.0, 0.0, true);
      String string0 = transportadoraMed0.toString();
      assertEquals("Transportadora{ \nC\u00F3digo: pt|\nNome: pt|\nGPS: (0.0,0.0)\nNIF: pt|\nRaio: 0.0\nPre\u00E7o por Km: 0.0\nKms Total: 0.00\nClassificacao:0.00\n}\nTransporta Medicamentos: true\n", string0);
  }
}
