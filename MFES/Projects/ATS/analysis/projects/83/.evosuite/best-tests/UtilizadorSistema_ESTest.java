/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 21:16:36 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import java.time.LocalDate;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UtilizadorSistema_ESTest extends UtilizadorSistema_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Utilizador utilizador0 = new Utilizador("", "", "", (String) null, (-1.0), (-1.0), arrayList0);
      utilizador0.setNome((String) null);
      assertEquals("Utilizador", utilizador0.getTypeUser());
      assertEquals("", utilizador0.getPassword());
      assertEquals("", utilizador0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", utilizador0.getEmail());
      assertEquals((-1.0), utilizador0.getLatitude(), 0.01);
      assertEquals((-1.0), utilizador0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      utilizador0.setCodigo("n<Ze=%_x");
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Loja loja0 = new Loja();
      String string0 = loja0.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      utilizador0.setNome("-------------Lojas------------------------------\n");
      utilizador0.getNome();
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.getNome();
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Loja loja0 = new Loja();
      double double0 = loja0.getLongitude();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      double double0 = voluntario0.getLatitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, voluntario0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      Voluntario voluntario0 = new Voluntario("UtilizadorSistema", "UtilizadorSistema", "UtilizadorSistema", "UtilizadorSistema", true, 4165.82, 0.0, localDate0, 4165.82, arrayList0, 0.0, (-2439), true, 0, (-2439));
      double double0 = voluntario0.getLatitude();
      assertEquals("UtilizadorSistema", voluntario0.getEmail());
      assertEquals("UtilizadorSistema", voluntario0.getPassword());
      assertEquals("UtilizadorSistema", voluntario0.getCodigo());
      assertEquals("Voluntario", voluntario0.getTypeUser());
      assertEquals("UtilizadorSistema", voluntario0.getNome());
      assertEquals(0.0, voluntario0.getLongitude(), 0.01);
      assertEquals(4165.82, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("-------------Empresas de transportes------------ \n", "JCi=vjUBvuiG7c/", "1Vb&2E?S-{P,65R7", "JCi=vjUBvuiG7c/", (-1730), (-1730), "u.!8xUt'P", 0.0, 0.0, 0.0, arrayList0, true, 0.0, (-2240), true, 2247, (-1073741822));
      String string0 = empresaTransportes1.getEmail();
      assertEquals("JCi=vjUBvuiG7c/", empresaTransportes1.getNome());
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
      assertEquals("1Vb&2E?S-{P,65R7", empresaTransportes1.getCodigo());
      assertEquals("-------------Empresas de transportes------------ \n", string0);
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
      assertEquals("JCi=vjUBvuiG7c/", empresaTransportes1.getPassword());
      assertEquals(0.0, empresaTransportes1.getLongitude(), 0.01);
      assertEquals("Transportadora", empresaTransportes1.getTypeUser());
      assertEquals(0.0, empresaTransportes1.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.getCodigo();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.equals(" ");
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.setLatitude(761.5579285285);
      assertEquals(761.5579285285, empresaTransportes0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.getEmail();
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.getPassword();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes();
      assertTrue(empresaTransportes1.equals((Object)empresaTransportes0));
      
      empresaTransportes1.setEmail(" ");
      boolean boolean0 = empresaTransportes1.equals(empresaTransportes0);
      assertFalse(empresaTransportes1.equals((Object)empresaTransportes0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes(empresaTransportes0);
      assertTrue(empresaTransportes1.equals((Object)empresaTransportes0));
      
      empresaTransportes1.setTypeUser(" ");
      boolean boolean0 = empresaTransportes1.equals(empresaTransportes0);
      assertFalse(empresaTransportes1.equals((Object)empresaTransportes0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      Object object0 = new Object();
      boolean boolean0 = utilizador0.equals(object0);
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes(empresaTransportes0);
      boolean boolean0 = empresaTransportes1.equals(empresaTransportes0);
      assertTrue(boolean0);
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.setPassword(" ");
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.setLongitude((-415));
      assertEquals((-415.0), empresaTransportes0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes(empresaTransportes0);
      assertTrue(empresaTransportes1.equals((Object)empresaTransportes0));
      
      empresaTransportes1.setPassword(" ");
      boolean boolean0 = empresaTransportes1.equals(empresaTransportes0);
      assertFalse(boolean0);
  }
}
