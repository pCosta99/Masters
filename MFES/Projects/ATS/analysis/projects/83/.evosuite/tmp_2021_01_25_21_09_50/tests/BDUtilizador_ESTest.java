/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 21:15:11 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BDUtilizador_ESTest extends BDUtilizador_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      // Undeclared exception!
      try { 
        bDUtilizador0.setUsers((Map<String, Utilizador>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDUtilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      // Undeclared exception!
      try { 
        bDUtilizador0.setCodigos((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDUtilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      // Undeclared exception!
      try { 
        bDUtilizador0.existe((Utilizador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDUtilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      Map<String, Utilizador> map0 = bDUtilizador0.getUsers();
      BDUtilizador bDUtilizador1 = null;
      try {
        bDUtilizador1 = new BDUtilizador(map0, (Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDUtilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BDUtilizador bDUtilizador0 = null;
      try {
        bDUtilizador0 = new BDUtilizador((BDUtilizador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDUtilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      Set<String> set0 = bDUtilizador0.getCodigos();
      bDUtilizador0.setCodigos(set0);
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      Map<String, Utilizador> map0 = bDUtilizador0.getUsers();
      bDUtilizador0.setUsers(map0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      try { 
        bDUtilizador0.getEmail("UQG,8e;");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDUtilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      Utilizador utilizador0 = bDUtilizador0.tryLogin("Total de utilizadores: \n{}", "");
      assertNull(utilizador0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      boolean boolean0 = bDUtilizador0.existeCodigo("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      boolean boolean0 = bDUtilizador0.existeEmail("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      BDUtilizador bDUtilizador1 = new BDUtilizador(bDUtilizador0);
      boolean boolean0 = bDUtilizador1.equals(bDUtilizador0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      boolean boolean0 = bDUtilizador0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      boolean boolean0 = bDUtilizador0.equals(bDUtilizador0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      boolean boolean0 = bDUtilizador0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      String string0 = bDUtilizador0.toString();
      assertEquals("Total de utilizadores: \n{}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      // Undeclared exception!
      try { 
        bDUtilizador0.updateUser2((Utilizador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDUtilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      Map<String, Utilizador> map0 = bDUtilizador0.getUsers();
      Set<String> set0 = bDUtilizador0.getCodigos();
      BDUtilizador bDUtilizador1 = new BDUtilizador(map0, set0);
      assertTrue(bDUtilizador1.equals((Object)bDUtilizador0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      // Undeclared exception!
      try { 
        bDUtilizador0.updateUser((Encomenda) null, (Utilizador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDUtilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      // Undeclared exception!
      try { 
        bDUtilizador0.add((Utilizador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDUtilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      BDUtilizador bDUtilizador1 = bDUtilizador0.clone();
      assertNotSame(bDUtilizador0, bDUtilizador1);
  }
}
