/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 21:16:21 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinhaEncomenda_ESTest extends LinhaEncomenda_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda0.setPreco((-707.1189573));
      linhaEncomenda1.clone();
      linhaEncomenda0.setQuantidade((-707.1189573));
      linhaEncomenda1.getPreco();
      linhaEncomenda1.equals(linhaEncomenda0);
      linhaEncomenda0.equals(linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setCodigo("d$|O>eCl");
      linhaEncomenda0.getPreco();
      linhaEncomenda0.toString();
      linhaEncomenda0.setQuantidade(0.0);
      linhaEncomenda0.toString();
      linhaEncomenda0.toString();
      linhaEncomenda0.setPreco(0.0);
      linhaEncomenda0.getCodigo();
      linhaEncomenda0.getCodigo();
      Object object0 = new Object();
      linhaEncomenda0.setPreco(0.0);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      linhaEncomenda1.setCodigo("6$XfJ+wl$v0eJT");
      linhaEncomenda0.setDescricao("d$|O>eCl");
      linhaEncomenda0.equals(object0);
      linhaEncomenda0.getQuantidade();
      linhaEncomenda1.setCodigo("\nC\u00F3digo de produto: d$|O>eCl\nProduto:  \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      linhaEncomenda0.equals(linhaEncomenda0);
      linhaEncomenda1.getQuantidade();
      linhaEncomenda0.equals("Pre\u00E7o: ");
      linhaEncomenda0.toString();
      linhaEncomenda1.clone();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda0.setQuantidade((-4232.29595187));
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda1.clone();
      linhaEncomenda2.setQuantidade((-707.1189573));
      linhaEncomenda1.setDescricao("? q#Haj$n(uA^");
      linhaEncomenda1.getPreco();
      linhaEncomenda3.getPreco();
      linhaEncomenda2.equals(linhaEncomenda0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("Desinfetante", "", (-1.2555037945511702), 94.6994072669);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda("Desinfetante", "Desinfetante", (-1.2555037945511702), 94.6994072669);
      linhaEncomenda1.isMed();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 342.9252777086884, 693.401875479);
      linhaEncomenda0.getPreco();
      linhaEncomenda0.toString();
      linhaEncomenda0.isMed();
      linhaEncomenda0.setCodigo("Saco de lixo de 50l");
      linhaEncomenda0.setCodigo("Saco de lixo de 50l");
      linhaEncomenda0.setDescricao("Saco de lixo de 50l");
      linhaEncomenda0.setCodigo("\nC\u00F3digo de produto: \nProduto: \nQuantidade: 342.9252777086884\nPre\u00E7o: 693.401875479\n");
      linhaEncomenda0.isMed();
      linhaEncomenda0.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      linhaEncomenda0.toString();
      linhaEncomenda0.toString();
      linhaEncomenda0.setQuantidade(1374.5);
      linhaEncomenda1.setPreco(1374.5);
      linhaEncomenda0.toString();
      linhaEncomenda0.isMed();
      linhaEncomenda0.setPreco((-1862.635492768609));
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda1.toString();
      linhaEncomenda2.setPreco((-1695.3424066));
      linhaEncomenda2.clone();
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda1.clone();
      linhaEncomenda2.isMed();
      linhaEncomenda2.equals(linhaEncomenda3);
      linhaEncomenda1.clone();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao("Alcool");
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setQuantidade(720.0);
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda2.setCodigo((String) null);
      linhaEncomenda2.setCodigo("");
      linhaEncomenda2.toString();
      linhaEncomenda1.setQuantidade(1.0);
      linhaEncomenda1.setPreco(1.0);
      linhaEncomenda1.setPreco(1.0);
      linhaEncomenda1.setQuantidade(72.0);
      linhaEncomenda1.setPreco(1484.6565961690785);
      linhaEncomenda2.setQuantidade(0.0);
      linhaEncomenda0.setQuantidade(720.0);
      linhaEncomenda1.setQuantidade(720.0);
      linhaEncomenda0.setQuantidade(720.0);
      linhaEncomenda2.setQuantidade(1.0);
      linhaEncomenda0.toString();
      linhaEncomenda2.getPreco();
      linhaEncomenda1.isMed();
      linhaEncomenda1.setQuantidade(0.0);
      linhaEncomenda0.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", (String) null, (-938.58), 1197.122645403778);
      linhaEncomenda0.setCodigo("");
      linhaEncomenda0.setDescricao((String) null);
      linhaEncomenda0.setCodigo("");
      linhaEncomenda0.setCodigo("");
      linhaEncomenda0.getDescricao();
      // Undeclared exception!
      try { 
        linhaEncomenda0.isMed();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("Alcool", "Alcool", 0.0, 0.0);
      linhaEncomenda0.setCodigo("");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setPreco(0.0);
      linhaEncomenda0.setCodigo("Alcool");
      linhaEncomenda0.isMed();
      linhaEncomenda1.getDescricao();
      linhaEncomenda1.isMed();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda((String) null, (String) null, (-232.544), (-1791.3135557));
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda1.clone();
      linhaEncomenda0.setPreco(2808.37957);
      linhaEncomenda0.toString();
      LinhaEncomenda linhaEncomenda4 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setPreco(2808.37957);
      linhaEncomenda4.setPreco((-232.544));
      linhaEncomenda4.setDescricao("");
      linhaEncomenda0.setCodigo("\nC\u00F3digo de produto: null\nProduto: null\nQuantidade: -232.544\nPre\u00E7o: 2808.37957\n");
      linhaEncomenda4.isMed();
      LinhaEncomenda linhaEncomenda5 = linhaEncomenda0.clone();
      linhaEncomenda5.setPreco((-1791.3135557));
      LinhaEncomenda linhaEncomenda6 = linhaEncomenda5.clone();
      LinhaEncomenda linhaEncomenda7 = linhaEncomenda5.clone();
      linhaEncomenda7.toString();
      linhaEncomenda0.getQuantidade();
      linhaEncomenda4.toString();
      linhaEncomenda0.setPreco((-232.544));
      linhaEncomenda4.getPreco();
      linhaEncomenda5.clone();
      linhaEncomenda6.setPreco((-232.544));
      linhaEncomenda2.clone();
      // Undeclared exception!
      try { 
        linhaEncomenda3.isMed();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setPreco(0.0);
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.isMed();
      linhaEncomenda0.setQuantidade(0.0);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      linhaEncomenda0.setDescricao("Saco de lixo 30l");
      linhaEncomenda1.setDescricao("\nC\u00F3digo de produto:  \nProduto: \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      linhaEncomenda0.setQuantidade(2301.42);
      linhaEncomenda0.isMed();
      linhaEncomenda0.isMed();
      linhaEncomenda1.getPreco();
      linhaEncomenda1.setQuantidade(0.0);
      linhaEncomenda0.getQuantidade();
      linhaEncomenda0.getPreco();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.getCodigo();
      linhaEncomenda0.setPreco(2301.42);
      linhaEncomenda1.getQuantidade();
      linhaEncomenda1.getPreco();
      linhaEncomenda1.setPreco(0.0);
      linhaEncomenda1.isMed();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = null;
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda((String) null, (String) null, 0.0, 0.0);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda();
      // Undeclared exception!
      try { 
        linhaEncomenda0.equals(linhaEncomenda1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", (String) null, (-3976.05076032), (-3976.05076032));
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.setDescricao("Quantidade: ");
      linhaEncomenda0.toString();
      linhaEncomenda0.getCodigo();
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.clone();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda1.clone();
      linhaEncomenda1.setPreco(378.5298720174384);
      linhaEncomenda0.getCodigo();
      linhaEncomenda0.getPreco();
      linhaEncomenda2.setCodigo((String) null);
      linhaEncomenda2.setQuantidade(0.0);
      linhaEncomenda0.setCodigo("{_1;I:5$.aSK}m<_zdt");
      linhaEncomenda2.clone();
      linhaEncomenda2.getCodigo();
      linhaEncomenda0.equals("\nC\u00F3digo de produto: \nProduto: Quantidade: \nQuantidade: -3976.05076032\nPre\u00E7o: -3976.05076032\n");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = null;
      try {
        linhaEncomenda0 = new LinhaEncomenda((LinhaEncomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("LinhaEncomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "X0D=n'@Kbu!hHV", 1.0, 1.0);
      linhaEncomenda0.toString();
      linhaEncomenda0.setPreco(1.0);
      linhaEncomenda0.setDescricao("/?_!7m");
      linhaEncomenda0.setCodigo("");
      linhaEncomenda0.isMed();
      linhaEncomenda0.getPreco();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("\n", "\n", 0.0, 0.0);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setQuantidade(438.03);
      linhaEncomenda1.setDescricao("\n");
      linhaEncomenda0.setQuantidade((-2470.1017075351));
      linhaEncomenda0.setPreco(0.0);
      linhaEncomenda0.equals(linhaEncomenda1);
      linhaEncomenda0.setCodigo("\n");
      linhaEncomenda0.isMed();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      linhaEncomenda1.getQuantidade();
      linhaEncomenda0.clone();
      linhaEncomenda2.setPreco(0.0);
      linhaEncomenda0.toString();
      linhaEncomenda0.setDescricao("\n");
      linhaEncomenda0.getQuantidade();
      linhaEncomenda2.getCodigo();
      linhaEncomenda1.toString();
      linhaEncomenda0.setDescricao("C\u00F3digo de produto: ");
      Object object0 = new Object();
      linhaEncomenda2.equals(object0);
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      linhaEncomenda1.getQuantidade();
      linhaEncomenda1.setPreco((-1479.8815073269857));
      linhaEncomenda1.getCodigo();
      Object object1 = new Object();
      linhaEncomenda0.equals(object1);
      linhaEncomenda1.setDescricao("");
      linhaEncomenda0.equals("q+Pn|kX>bWyC?");
      linhaEncomenda3.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertNotNull(linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(" ", linhaEncomenda1.getCodigo());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertNotNull(linhaEncomenda1);
      
      linhaEncomenda1.setDescricao("\n");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(" ", linhaEncomenda1.getCodigo());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      boolean boolean0 = linhaEncomenda1.equals(linhaEncomenda0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(" ", linhaEncomenda1.getCodigo());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(boolean0);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setCodigo("\n");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals(0.0, linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertNotNull(linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda2.clone();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals(0.0, linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertEquals(0.0, linhaEncomenda3.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda3.getCodigo());
      assertEquals(" ", linhaEncomenda3.getDescricao());
      assertEquals(0.0, linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertNotNull(linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda2.clone();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals(0.0, linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertFalse(linhaEncomenda4.isMed());
      assertEquals(0.0, linhaEncomenda4.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda4.getDescricao());
      assertEquals(0.0, linhaEncomenda4.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda4.getCodigo());
      assertNotNull(linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda0);
      assertNotSame(linhaEncomenda4, linhaEncomenda3);
      assertNotSame(linhaEncomenda4, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda2);
      
      linhaEncomenda2.setQuantidade(1.0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals(0.0, linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      linhaEncomenda2.setPreco((-1.0));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals((-1.0), linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      double double0 = linhaEncomenda4.getQuantidade();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals((-1.0), linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertFalse(linhaEncomenda4.isMed());
      assertEquals(0.0, linhaEncomenda4.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda4.getDescricao());
      assertEquals(0.0, linhaEncomenda4.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda4.getCodigo());
      assertEquals(0.0, double0, 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda0);
      assertNotSame(linhaEncomenda4, linhaEncomenda3);
      assertNotSame(linhaEncomenda4, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda2);
      
      String string0 = linhaEncomenda2.getDescricao();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals((-1.0), linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertNotNull(string0);
      assertEquals(" ", string0);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      linhaEncomenda0.setDescricao(" ");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      
      LinhaEncomenda linhaEncomenda5 = linhaEncomenda1.clone();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda5.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda5.getDescricao());
      assertEquals(0.0, linhaEncomenda5.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda5.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda5.isMed());
      assertEquals("\n", linhaEncomenda5.getCodigo());
      assertNotNull(linhaEncomenda5);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda5, linhaEncomenda0);
      assertNotSame(linhaEncomenda5, linhaEncomenda2);
      assertNotSame(linhaEncomenda5, linhaEncomenda4);
      assertNotSame(linhaEncomenda5, linhaEncomenda1);
      assertNotSame(linhaEncomenda5, linhaEncomenda3);
      
      boolean boolean1 = linhaEncomenda4.equals(linhaEncomenda3);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda3));
      assertFalse(boolean1 == boolean0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals((-1.0), linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertEquals(0.0, linhaEncomenda3.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda3.getCodigo());
      assertEquals(" ", linhaEncomenda3.getDescricao());
      assertEquals(0.0, linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertFalse(linhaEncomenda4.isMed());
      assertEquals(0.0, linhaEncomenda4.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda4.getDescricao());
      assertEquals(0.0, linhaEncomenda4.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda4.getCodigo());
      assertTrue(boolean1);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda5);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda5);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda4);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda5);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda0);
      assertNotSame(linhaEncomenda4, linhaEncomenda3);
      assertNotSame(linhaEncomenda4, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda2);
      assertNotSame(linhaEncomenda4, linhaEncomenda5);
      
      double double1 = linhaEncomenda3.getQuantidade();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertEquals(double1, double0, 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals((-1.0), linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertEquals(0.0, linhaEncomenda3.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda3.getCodigo());
      assertEquals(" ", linhaEncomenda3.getDescricao());
      assertEquals(0.0, linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertEquals(0.0, double1, 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda5);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda5);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda4);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda5);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      
      boolean boolean2 = linhaEncomenda2.equals(linhaEncomenda3);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertEquals((-1.0), linhaEncomenda2.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda2.getCodigo());
      assertEquals(0.0, linhaEncomenda3.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda3.getCodigo());
      assertEquals(" ", linhaEncomenda3.getDescricao());
      assertEquals(0.0, linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertFalse(boolean2);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda5);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda5);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda4);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda5);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      
      boolean boolean3 = linhaEncomenda0.equals(linhaEncomenda5);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda5.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda5.getDescricao());
      assertEquals(0.0, linhaEncomenda5.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda5.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda5.isMed());
      assertEquals("\n", linhaEncomenda5.getCodigo());
      assertFalse(boolean3);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda5, linhaEncomenda0);
      assertNotSame(linhaEncomenda5, linhaEncomenda2);
      assertNotSame(linhaEncomenda5, linhaEncomenda4);
      assertNotSame(linhaEncomenda5, linhaEncomenda1);
      assertNotSame(linhaEncomenda5, linhaEncomenda3);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 0.0, 188.612251107);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda0.toString();
      linhaEncomenda1.setQuantidade((-601.7063491));
      linhaEncomenda0.getCodigo();
      linhaEncomenda1.getCodigo();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", (-94.2196), (-1.0));
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-94.2196), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("", linhaEncomenda0.getCodigo());
      assertNotNull(linhaEncomenda0);
      
      String string0 = linhaEncomenda0.getCodigo();
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-94.2196), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("", linhaEncomenda0.getCodigo());
      assertNotNull(string0);
      assertEquals("", string0);
      
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-94.2196), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("", linhaEncomenda0.getCodigo());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-94.2196), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getCodigo());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertNotNull(linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      boolean boolean0 = linhaEncomenda0.isMed();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-94.2196), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("", linhaEncomenda0.getCodigo());
      assertFalse(boolean0);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("W^WR wc", "W^WR wc", (-3913.0), (-3913.0));
      Object object0 = new Object();
      linhaEncomenda0.equals(object0);
      linhaEncomenda0.equals("W^WR wc");
      linhaEncomenda0.clone();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setPreco((-1222.51));
      linhaEncomenda0.setDescricao("hojQ&WB#");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.clone();
      linhaEncomenda0.getPreco();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("tiaHDT", " ", (-1.0), 0.0);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setDescricao("tiaHDT");
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      linhaEncomenda1.setDescricao("Y^");
      linhaEncomenda0.setDescricao("LGEvXbl~");
      linhaEncomenda0.setPreco((-1.0));
      linhaEncomenda0.getQuantidade();
      linhaEncomenda2.clone();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("K{zx%@ae", "K{zx%@ae", (-723.483265162), (-723.483265162));
      linhaEncomenda0.setPreco((-723.483265162));
      linhaEncomenda0.isMed();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.clone();
      linhaEncomenda0.setDescricao("");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.getDescricao();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setCodigo("");
      linhaEncomenda1.getPreco();
      linhaEncomenda0.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda((String) null, (String) null, 0.0, 0.0);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      linhaEncomenda0.toString();
      LinhaEncomenda linhaEncomenda2 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda2.setPreco(0.0);
      // Undeclared exception!
      try { 
        linhaEncomenda2.isMed();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.toString();
      linhaEncomenda1.getDescricao();
      linhaEncomenda1.getCodigo();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setPreco(2573.9744349874);
      linhaEncomenda0.getDescricao();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.clone();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda1.setCodigo("*rn@OLxTel");
      linhaEncomenda1.setPreco(1.0);
      linhaEncomenda1.getDescricao();
      linhaEncomenda1.setCodigo("%ku/=");
      linhaEncomenda0.toString();
      linhaEncomenda1.toString();
      linhaEncomenda1.setDescricao("|8");
      linhaEncomenda0.equals(linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setCodigo("kwrwj.KfkBJU-K2");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda("kwrwj.KfkBJU-K2", "", 0.0, 0.0);
      linhaEncomenda1.setQuantidade(0.0);
      linhaEncomenda0.equals(linhaEncomenda1);
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda2.equals("kwrwj.KfkBJU-K2");
      linhaEncomenda2.clone();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("?", "Quantidade: ", (-3004.534806), (-1.0));
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda0.setCodigo("]");
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda1.isMed();
      linhaEncomenda0.toString();
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda1.clone();
      linhaEncomenda2.clone();
      linhaEncomenda1.setDescricao("");
      linhaEncomenda2.setCodigo("Produto: ");
      linhaEncomenda1.isMed();
      linhaEncomenda2.setDescricao("\nC\u00F3digo de produto: LinhaEncomenda\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: 0.0\nPre\u00E7o: 1.0\n");
      linhaEncomenda2.equals(linhaEncomenda1);
      linhaEncomenda2.toString();
      linhaEncomenda2.isMed();
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda3.clone();
      LinhaEncomenda linhaEncomenda5 = linhaEncomenda2.clone();
      linhaEncomenda4.setQuantidade(1.0);
      linhaEncomenda4.setQuantidade((-1.0));
      linhaEncomenda5.isMed();
      linhaEncomenda4.isMed();
      Object object0 = new Object();
      linhaEncomenda0.equals(object0);
      Object object1 = new Object();
      linhaEncomenda5.equals(object1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("yD(ey3u", "Desinfetante", 808.3, 0.0);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda0.clone();
      linhaEncomenda1.setDescricao("Desinfetante");
      linhaEncomenda1.setCodigo("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: 0.0\nPre\u00E7o: -1.0\n");
      linhaEncomenda0.setPreco(0.0);
      linhaEncomenda1.toString();
      linhaEncomenda0.toString();
      linhaEncomenda0.isMed();
      linhaEncomenda0.isMed();
      Object object0 = new Object();
      linhaEncomenda0.equals(object0);
      linhaEncomenda1.isMed();
      linhaEncomenda0.toString();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.toString();
      linhaEncomenda0.setPreco((-1.0));
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda0.equals("?");
      linhaEncomenda1.setPreco((-1.0));
      linhaEncomenda0.isMed();
      linhaEncomenda1.isMed();
      linhaEncomenda1.toString();
      linhaEncomenda0.isMed();
      LinhaEncomenda linhaEncomenda2 = new LinhaEncomenda();
      linhaEncomenda1.equals(linhaEncomenda2);
      linhaEncomenda2.setPreco((-1.0));
      linhaEncomenda0.setQuantidade((-1.0));
      linhaEncomenda2.toString();
      linhaEncomenda1.setPreco((-1.0));
      linhaEncomenda2.setCodigo("?");
      linhaEncomenda1.setPreco((-1.0));
      linhaEncomenda0.isMed();
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda2.clone();
      linhaEncomenda3.clone();
      linhaEncomenda1.toString();
      linhaEncomenda2.isMed();
      linhaEncomenda1.equals("Alcool");
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda2.clone();
      linhaEncomenda4.toString();
      linhaEncomenda1.isMed();
      linhaEncomenda2.equals(linhaEncomenda1);
      linhaEncomenda0.toString();
      linhaEncomenda2.toString();
      linhaEncomenda3.setQuantidade((-1.0));
      linhaEncomenda0.toString();
      linhaEncomenda3.clone();
      linhaEncomenda2.toString();
      linhaEncomenda2.isMed();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("F4!:iR}AMim;j5 ", "68", (-1511.849723), (-1511.849723));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("68", linhaEncomenda0.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals((-1511.849723), linhaEncomenda0.getPreco(), 0.01);
      assertNotNull(linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda("68", "68", (-1511.849723), (-1511.849723));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals("68", linhaEncomenda1.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertNotNull(linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertEquals("68", linhaEncomenda1.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals((-1511.849723), linhaEncomenda2.getPreco(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("68", linhaEncomenda2.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda2.getCodigo());
      assertNotNull(linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      
      linhaEncomenda2.setPreco((-1511.849723));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertEquals("68", linhaEncomenda1.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals((-1511.849723), linhaEncomenda2.getPreco(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("68", linhaEncomenda2.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda2.getCodigo());
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      
      String string0 = linhaEncomenda2.toString();
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertEquals("68", linhaEncomenda1.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals((-1511.849723), linhaEncomenda2.getPreco(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("68", linhaEncomenda2.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda2.getCodigo());
      assertNotNull(string0);
      assertEquals("\nC\u00F3digo de produto: 68\nProduto: 68\nQuantidade: -1511.849723\nPre\u00E7o: -1511.849723\n", string0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      
      linhaEncomenda1.setDescricao("F4!:iR}AMim;j5 ");
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setQuantidade((-150.71227575));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      boolean boolean0 = linhaEncomenda0.equals(linhaEncomenda1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("68", linhaEncomenda0.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals((-1511.849723), linhaEncomenda0.getPreco(), 0.01);
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertFalse(boolean0);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      String string1 = linhaEncomenda0.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("68", linhaEncomenda0.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals((-1511.849723), linhaEncomenda0.getPreco(), 0.01);
      assertNotNull(string1);
      assertEquals("\nC\u00F3digo de produto: F4!:iR}AMim;j5 \nProduto: 68\nQuantidade: -1511.849723\nPre\u00E7o: -1511.849723\n", string1);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda1.clone();
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals((-1511.849723), linhaEncomenda3.getPreco(), 0.01);
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda3.getDescricao());
      assertEquals((-150.71227575), linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertEquals("68", linhaEncomenda3.getCodigo());
      assertNotNull(linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      
      linhaEncomenda3.setCodigo("d.k(8eJd ");
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("d.k(8eJd ", linhaEncomenda3.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda3.getPreco(), 0.01);
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda3.getDescricao());
      assertEquals((-150.71227575), linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      linhaEncomenda3.setPreco((-97.1763759));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("d.k(8eJd ", linhaEncomenda3.getCodigo());
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda3.getDescricao());
      assertEquals((-150.71227575), linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertEquals((-97.1763759), linhaEncomenda3.getPreco(), 0.01);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      
      boolean boolean1 = linhaEncomenda2.equals(object0);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(boolean1 == boolean0);
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals((-1511.849723), linhaEncomenda2.getPreco(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("68", linhaEncomenda2.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda2.getCodigo());
      assertFalse(boolean1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda1.clone();
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda3));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("68", linhaEncomenda4.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda4.getPreco(), 0.01);
      assertFalse(linhaEncomenda4.isMed());
      assertEquals((-150.71227575), linhaEncomenda4.getQuantidade(), 0.01);
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda4.getDescricao());
      assertNotNull(linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda4, linhaEncomenda2);
      assertNotSame(linhaEncomenda4, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda0);
      assertNotSame(linhaEncomenda4, linhaEncomenda3);
      
      boolean boolean2 = linhaEncomenda1.isMed();
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertFalse(boolean2);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      
      String string2 = linhaEncomenda2.toString();
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals((-1511.849723), linhaEncomenda2.getPreco(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("68", linhaEncomenda2.getDescricao());
      assertEquals((-1511.849723), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("68", linhaEncomenda2.getCodigo());
      assertNotNull(string2);
      assertEquals("\nC\u00F3digo de produto: 68\nProduto: 68\nQuantidade: -1511.849723\nPre\u00E7o: -1511.849723\n", string2);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      
      LinhaEncomenda linhaEncomenda5 = new LinhaEncomenda("C\u00F3digo de produto: ", "68", 4525.65349671, 4525.65349671);
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda3));
      assertEquals("68", linhaEncomenda5.getDescricao());
      assertEquals(4525.65349671, linhaEncomenda5.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda5.isMed());
      assertEquals(4525.65349671, linhaEncomenda5.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda5.getCodigo());
      assertNotNull(linhaEncomenda5);
      
      boolean boolean3 = linhaEncomenda3.equals(linhaEncomenda5);
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda5));
      assertEquals("68", linhaEncomenda5.getDescricao());
      assertEquals(4525.65349671, linhaEncomenda5.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda5.isMed());
      assertEquals(4525.65349671, linhaEncomenda5.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda5.getCodigo());
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda1.getDescricao());
      assertEquals("68", linhaEncomenda1.getCodigo());
      assertEquals((-1511.849723), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-150.71227575), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("d.k(8eJd ", linhaEncomenda3.getCodigo());
      assertEquals("F4!:iR}AMim;j5 ", linhaEncomenda3.getDescricao());
      assertEquals((-150.71227575), linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertEquals((-97.1763759), linhaEncomenda3.getPreco(), 0.01);
      assertFalse(boolean3);
      assertNotSame(linhaEncomenda5, linhaEncomenda1);
      assertNotSame(linhaEncomenda5, linhaEncomenda4);
      assertNotSame(linhaEncomenda5, linhaEncomenda0);
      assertNotSame(linhaEncomenda5, linhaEncomenda2);
      assertNotSame(linhaEncomenda5, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda4);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda5);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 342.9252777086884, 2509.52);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("", linhaEncomenda0.getCodigo());
      assertNotNull(linhaEncomenda0);
      
      double double0 = linhaEncomenda0.getPreco();
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("", linhaEncomenda0.getCodigo());
      assertEquals(2509.52, double0, 0.01);
      
      String string0 = linhaEncomenda0.toString();
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("", linhaEncomenda0.getCodigo());
      assertNotNull(string0);
      assertEquals("\nC\u00F3digo de produto: \nProduto: \nQuantidade: 342.9252777086884\nPre\u00E7o: 2509.52\n", string0);
      
      boolean boolean0 = linhaEncomenda0.isMed();
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("", linhaEncomenda0.getCodigo());
      assertFalse(boolean0);
      
      linhaEncomenda0.setCodigo("Saco de lixo de 50l");
      assertEquals("Saco de lixo de 50l", linhaEncomenda0.getCodigo());
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      
      linhaEncomenda0.setCodigo("Saco de lixo de 50l");
      assertEquals("Saco de lixo de 50l", linhaEncomenda0.getCodigo());
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      
      linhaEncomenda0.setDescricao("Saco de lixo de 50l");
      assertEquals("Saco de lixo de 50l", linhaEncomenda0.getCodigo());
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      assertTrue(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo de 50l", linhaEncomenda0.getDescricao());
      
      linhaEncomenda0.setCodigo("\nC\u00F3digo de produto: \nProduto: \nQuantidade: 342.9252777086884\nPre\u00E7o: 2509.52\n");
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("\nC\u00F3digo de produto: \nProduto: \nQuantidade: 342.9252777086884\nPre\u00E7o: 2509.52\n", linhaEncomenda0.getCodigo());
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      assertTrue(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo de 50l", linhaEncomenda0.getDescricao());
      
      boolean boolean1 = linhaEncomenda0.isMed();
      assertFalse(boolean1 == boolean0);
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("\nC\u00F3digo de produto: \nProduto: \nQuantidade: 342.9252777086884\nPre\u00E7o: 2509.52\n", linhaEncomenda0.getCodigo());
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      assertTrue(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo de 50l", linhaEncomenda0.getDescricao());
      assertTrue(boolean1);
      
      double double1 = linhaEncomenda0.getQuantidade();
      assertNotEquals(double1, double0, 0.01);
      assertEquals(342.9252777086884, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("\nC\u00F3digo de produto: \nProduto: \nQuantidade: 342.9252777086884\nPre\u00E7o: 2509.52\n", linhaEncomenda0.getCodigo());
      assertEquals(2509.52, linhaEncomenda0.getPreco(), 0.01);
      assertTrue(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo de 50l", linhaEncomenda0.getDescricao());
      assertEquals(342.9252777086884, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("QuGMs7'xcbu(3cUd", "QuGMs7'xcbu(3cUd", 1.0, 1.0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertNotNull(linhaEncomenda0);
      
      String string0 = linhaEncomenda0.toString();
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertNotNull(string0);
      assertEquals("\nC\u00F3digo de produto: QuGMs7'xcbu(3cUd\nProduto: QuGMs7'xcbu(3cUd\nQuantidade: 1.0\nPre\u00E7o: 1.0\n", string0);
      
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda1.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda1.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertNotNull(linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getCodigo());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getPreco(), 0.01);
      assertNotNull(linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      linhaEncomenda1.setCodigo((String) null);
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda1.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setDescricao("Saco de lixo 30l");
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertTrue(linhaEncomenda1.isMed());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda0.setQuantidade((-2470.1017075351));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      boolean boolean0 = linhaEncomenda0.equals(linhaEncomenda1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertTrue(linhaEncomenda1.isMed());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertFalse(boolean0);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setQuantidade((-1.0));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertTrue(linhaEncomenda1.isMed());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda3.getCodigo());
      assertFalse(linhaEncomenda3.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda3.getDescricao());
      assertEquals(1.0, linhaEncomenda3.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda3.getQuantidade(), 0.01);
      assertNotNull(linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = linhaEncomenda0.equals(object0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(boolean1 == boolean0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertFalse(boolean1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      boolean boolean2 = linhaEncomenda3.isMed();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda3.getCodigo());
      assertFalse(linhaEncomenda3.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda3.getDescricao());
      assertEquals(1.0, linhaEncomenda3.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(boolean2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      
      String string1 = linhaEncomenda1.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertTrue(linhaEncomenda1.isMed());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertNotNull(string1);
      assertEquals("\nC\u00F3digo de produto: null\nProduto: Saco de lixo 30l\nQuantidade: -1.0\nPre\u00E7o: 1.0\n", string1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      String string2 = linhaEncomenda1.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertTrue(linhaEncomenda1.isMed());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertNotNull(string2);
      assertEquals("\nC\u00F3digo de produto: null\nProduto: Saco de lixo 30l\nQuantidade: -1.0\nPre\u00E7o: 1.0\n", string2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      String string3 = linhaEncomenda2.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getCodigo());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getPreco(), 0.01);
      assertNotNull(string3);
      assertEquals("\nC\u00F3digo de produto: QuGMs7'xcbu(3cUd\nProduto: QuGMs7'xcbu(3cUd\nQuantidade: 1.0\nPre\u00E7o: 1.0\n", string3);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda2.clone();
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals(1.0, linhaEncomenda4.getPreco(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda4.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda4.getDescricao());
      assertFalse(linhaEncomenda4.isMed());
      assertEquals(1.0, linhaEncomenda4.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getCodigo());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getPreco(), 0.01);
      assertNotNull(linhaEncomenda4);
      assertNotSame(linhaEncomenda4, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda3);
      assertNotSame(linhaEncomenda4, linhaEncomenda2);
      assertNotSame(linhaEncomenda4, linhaEncomenda0);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      boolean boolean3 = linhaEncomenda2.isMed();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getCodigo());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getPreco(), 0.01);
      assertFalse(boolean3);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("QuGMs7'xcbu(3cUd", "MMQ=U/<B=;", 1.0, (-1.0));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertNotNull(linhaEncomenda0);
      
      String string0 = linhaEncomenda0.toString();
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertNotNull(string0);
      assertEquals("\nC\u00F3digo de produto: QuGMs7'xcbu(3cUd\nProduto: MMQ=U/<B=;\nQuantidade: 1.0\nPre\u00E7o: -1.0\n", string0);
      
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("MMQ=U/<B=;", linhaEncomenda1.getDescricao());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda1.getCodigo());
      assertNotNull(linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-1.0), linhaEncomenda2.getPreco(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getCodigo());
      assertNotNull(linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      linhaEncomenda1.setCodigo((String) null);
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("MMQ=U/<B=;", linhaEncomenda1.getDescricao());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setDescricao("Saco de lixo 30l");
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertTrue(linhaEncomenda1.isMed());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      boolean boolean0 = linhaEncomenda1.isMed();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertTrue(linhaEncomenda1.isMed());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertTrue(boolean0);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda0.setQuantidade((-2470.1017075351));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      boolean boolean1 = linhaEncomenda0.equals(linhaEncomenda1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(boolean1 == boolean0);
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertTrue(linhaEncomenda1.isMed());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(boolean1);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setQuantidade((-1.0));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertTrue(linhaEncomenda1.isMed());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-1.0), linhaEncomenda3.getPreco(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda3.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda3.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda3.getCodigo());
      assertFalse(linhaEncomenda3.isMed());
      assertNotNull(linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = linhaEncomenda0.equals(object0);
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertFalse(boolean2);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      
      boolean boolean3 = linhaEncomenda3.isMed();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-1.0), linhaEncomenda3.getPreco(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda3.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda3.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda3.getCodigo());
      assertFalse(linhaEncomenda3.isMed());
      assertFalse(boolean3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      
      String string1 = linhaEncomenda1.toString();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(string1.equals((Object)string0));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertTrue(linhaEncomenda1.isMed());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertNotNull(string1);
      assertEquals("\nC\u00F3digo de produto: null\nProduto: Saco de lixo 30l\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", string1);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      String string2 = linhaEncomenda1.toString();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("Saco de lixo 30l", linhaEncomenda1.getDescricao());
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertNull(linhaEncomenda1.getCodigo());
      assertTrue(linhaEncomenda1.isMed());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertNotNull(string2);
      assertEquals("\nC\u00F3digo de produto: null\nProduto: Saco de lixo 30l\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", string2);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      String string3 = linhaEncomenda2.toString();
      assertTrue(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-1.0), linhaEncomenda2.getPreco(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getCodigo());
      assertNotNull(string3);
      assertEquals("\nC\u00F3digo de produto: QuGMs7'xcbu(3cUd\nProduto: MMQ=U/<B=;\nQuantidade: 1.0\nPre\u00E7o: -1.0\n", string3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      boolean boolean4 = linhaEncomenda3.isMed();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-1.0), linhaEncomenda3.getPreco(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda3.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda3.getQuantidade(), 0.01);
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda3.getCodigo());
      assertFalse(linhaEncomenda3.isMed());
      assertFalse(boolean4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda2.clone();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals((-1.0), linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda0.getDescricao());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda0.isMed());
      assertFalse(linhaEncomenda4.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda4.getCodigo());
      assertEquals("MMQ=U/<B=;", linhaEncomenda4.getDescricao());
      assertEquals((-1.0), linhaEncomenda4.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda4.getQuantidade(), 0.01);
      assertEquals((-1.0), linhaEncomenda2.getPreco(), 0.01);
      assertEquals("MMQ=U/<B=;", linhaEncomenda2.getDescricao());
      assertEquals(1.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("QuGMs7'xcbu(3cUd", linhaEncomenda2.getCodigo());
      assertNotNull(linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda4, linhaEncomenda0);
      assertNotSame(linhaEncomenda4, linhaEncomenda2);
      assertNotSame(linhaEncomenda4, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      assertNotNull(linhaEncomenda0);
      
      linhaEncomenda0.setQuantidade(1.0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(" ", linhaEncomenda0.getDescricao());
      
      linhaEncomenda0.setDescricao("#Q<Z+Z");
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(" ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      
      linhaEncomenda0.setCodigo("q=a76aX`z|7q[EAT_");
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("#Q<Z+Z", linhaEncomenda1.getDescricao());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertNotNull(linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      boolean boolean0 = linhaEncomenda0.isMed();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertFalse(boolean0);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda1.setPreco(1.0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("#Q<Z+Z", linhaEncomenda1.getDescricao());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setQuantidade(0.0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("#Q<Z+Z", linhaEncomenda1.getDescricao());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      boolean boolean1 = linhaEncomenda1.isMed();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(boolean1 == boolean0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda0.getCodigo());
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("#Q<Z+Z", linhaEncomenda1.getDescricao());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertFalse(boolean1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda0.setCodigo("|Q~]Vs{x(j6Ml!'jJ");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("|Q~]Vs{x(j6Ml!'jJ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      String string0 = linhaEncomenda0.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("|Q~]Vs{x(j6Ml!'jJ", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertNotNull(string0);
      assertEquals("\nC\u00F3digo de produto: |Q~]Vs{x(j6Ml!'jJ\nProduto: #Q<Z+Z\nQuantidade: 1.0\nPre\u00E7o: 0.0\n", string0);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda0.setCodigo("LinhaEncomenda");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda1.setDescricao("q=a76aX`z|7q[EAT_");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setQuantidade((-1.0));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(1.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda0.setQuantidade(0.0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      String string1 = linhaEncomenda0.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertNotNull(string1);
      assertEquals("\nC\u00F3digo de produto: LinhaEncomenda\nProduto: #Q<Z+Z\nQuantidade: 0.0\nPre\u00E7o: 0.0\n", string1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      boolean boolean2 = linhaEncomenda1.equals((Object) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getDescricao());
      assertFalse(boolean2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setPreco((-1.0));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      String string2 = linhaEncomenda1.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getDescricao());
      assertNotNull(string2);
      assertEquals("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", string2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      String string3 = linhaEncomenda0.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("#Q<Z+Z", linhaEncomenda0.getDescricao());
      assertNotNull(string3);
      assertEquals("\nC\u00F3digo de produto: LinhaEncomenda\nProduto: #Q<Z+Z\nQuantidade: 0.0\nPre\u00E7o: 0.0\n", string3);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda0.setDescricao("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda0.setPreco(0.0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      String string4 = linhaEncomenda0.getCodigo();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertNotNull(string4);
      assertEquals("LinhaEncomenda", string4);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      String string5 = linhaEncomenda1.getCodigo();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getDescricao());
      assertNotNull(string5);
      assertEquals("q=a76aX`z|7q[EAT_", string5);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      double double0 = linhaEncomenda0.getPreco();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", linhaEncomenda2.getDescricao());
      assertEquals("LinhaEncomenda", linhaEncomenda2.getCodigo());
      assertEquals(0.0, linhaEncomenda2.getPreco(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertNotNull(linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      
      boolean boolean3 = linhaEncomenda1.isMed();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("LinhaEncomenda", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\nC\u00F3digo de produto: q=a76aX`z|7q[EAT_\nProduto: q=a76aX`z|7q[EAT_\nQuantidade: -1.0\nPre\u00E7o: -1.0\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPreco(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getCodigo());
      assertEquals("q=a76aX`z|7q[EAT_", linhaEncomenda1.getDescricao());
      assertFalse(boolean3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("\n", "\n", 0.0, 0.0);
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertNotNull(linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertNotNull(linhaEncomenda1);
      
      linhaEncomenda1.setQuantidade(438.03);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(438.03, linhaEncomenda1.getQuantidade(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda1.setDescricao("\n");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(438.03, linhaEncomenda1.getQuantidade(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda0.setQuantidade((-2470.1017075351));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda0.setPreco(0.0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      boolean boolean0 = linhaEncomenda0.equals(linhaEncomenda1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(438.03, linhaEncomenda1.getQuantidade(), 0.01);
      assertFalse(boolean0);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      linhaEncomenda0.setCodigo("\n");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      boolean boolean1 = linhaEncomenda0.isMed();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(boolean1 == boolean0);
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertFalse(boolean1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("\n", linhaEncomenda2.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda2.getCodigo());
      assertNotNull(linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      
      double double0 = linhaEncomenda1.getQuantidade();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(438.03, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(438.03, double0, 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda3.getCodigo());
      assertEquals("\n", linhaEncomenda3.getDescricao());
      assertEquals(0.0, linhaEncomenda3.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda3.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertNotNull(linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      
      linhaEncomenda2.setPreco(0.0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("\n", linhaEncomenda2.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda2.getCodigo());
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      
      String string0 = linhaEncomenda0.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertNotNull(string0);
      assertEquals("\nC\u00F3digo de produto: \n\nProduto: \n\nQuantidade: -2470.1017075351\nPre\u00E7o: 0.0\n", string0);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda0.setDescricao("\n");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      double double1 = linhaEncomenda0.getQuantidade();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertNotEquals(double1, double0, 0.01);
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals((-2470.1017075351), double1, 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      String string1 = linhaEncomenda2.getCodigo();
      assertFalse(string1.equals((Object)string0));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertFalse(linhaEncomenda2.isMed());
      assertEquals("\n", linhaEncomenda2.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda2.getCodigo());
      assertNotNull(string1);
      assertEquals("\n", string1);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      
      String string2 = linhaEncomenda1.toString();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(438.03, linhaEncomenda1.getQuantidade(), 0.01);
      assertNotNull(string2);
      assertEquals("\nC\u00F3digo de produto: \n\nProduto: \n\nQuantidade: 438.03\nPre\u00E7o: 0.0\n", string2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      
      linhaEncomenda0.setDescricao("C\u00F3digo de produto: ");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = linhaEncomenda0.isMed();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertFalse(boolean2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda0.clone();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda0));
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda4.getCodigo());
      assertFalse(linhaEncomenda4.isMed());
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda4.getDescricao());
      assertEquals(0.0, linhaEncomenda4.getPreco(), 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda4.getQuantidade(), 0.01);
      assertNotNull(linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda2);
      assertNotSame(linhaEncomenda4, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda0);
      assertNotSame(linhaEncomenda4, linhaEncomenda3);
      
      double double2 = linhaEncomenda1.getQuantidade();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertNotEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(438.03, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(438.03, double2, 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      
      linhaEncomenda1.setPreco((-1479.8815073269857));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals((-1479.8815073269857), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(438.03, linhaEncomenda1.getQuantidade(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      
      String string3 = linhaEncomenda1.getCodigo();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertTrue(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals((-1479.8815073269857), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(438.03, linhaEncomenda1.getQuantidade(), 0.01);
      assertNotNull(string3);
      assertEquals("\n", string3);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      boolean boolean3 = linhaEncomenda0.equals(object1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(object1.equals((Object)object0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertFalse(boolean3);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(object1, object0);
      
      linhaEncomenda1.setDescricao("");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals((-1479.8815073269857), linhaEncomenda1.getPreco(), 0.01);
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(438.03, linhaEncomenda1.getQuantidade(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      
      boolean boolean4 = linhaEncomenda0.equals("q+Pn|kX>bWyC?");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertFalse(boolean4);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("\n", "\n", 0.0, 0.0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertNotNull(linhaEncomenda0);
      
      linhaEncomenda0.setQuantidade(438.03);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(438.03, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      
      linhaEncomenda0.setDescricao("\n");
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals(438.03, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      
      linhaEncomenda0.setQuantidade((-2470.1017075351));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      
      linhaEncomenda0.setPreco(0.0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      
      boolean boolean0 = linhaEncomenda0.equals(linhaEncomenda0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertTrue(boolean0);
      
      linhaEncomenda0.setCodigo("\n");
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      
      boolean boolean1 = linhaEncomenda0.isMed();
      assertFalse(boolean1 == boolean0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertFalse(boolean1);
      
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals((-2470.1017075351), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertNotNull(linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      double double0 = linhaEncomenda0.getQuantidade();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals((-2470.1017075351), double0, 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda2.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda2.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda2.getCodigo());
      assertFalse(linhaEncomenda2.isMed());
      assertNotNull(linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      
      linhaEncomenda1.setPreco(0.0);
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals((-2470.1017075351), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      String string0 = linhaEncomenda0.toString();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertNotNull(string0);
      assertEquals("\nC\u00F3digo de produto: \n\nProduto: \n\nQuantidade: -2470.1017075351\nPre\u00E7o: 0.0\n", string0);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda0.setDescricao("\n");
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      String string1 = linhaEncomenda1.getCodigo();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertFalse(linhaEncomenda1.isMed());
      assertEquals(0.0, linhaEncomenda1.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda1.getCodigo());
      assertEquals((-2470.1017075351), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("\n", linhaEncomenda1.getDescricao());
      assertNotNull(string1);
      assertEquals("\n", string1);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      
      String string2 = linhaEncomenda0.toString();
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals("\n", linhaEncomenda0.getDescricao());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertNotNull(string2);
      assertEquals("\nC\u00F3digo de produto: \n\nProduto: \n\nQuantidade: -2470.1017075351\nPre\u00E7o: 0.0\n", string2);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda0.setDescricao("C\u00F3digo de produto: ");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = linhaEncomenda0.isMed();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertFalse(boolean2);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals(0.0, linhaEncomenda3.getPreco(), 0.01);
      assertFalse(linhaEncomenda3.isMed());
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda3.getDescricao());
      assertEquals("\n", linhaEncomenda3.getCodigo());
      assertEquals((-2470.1017075351), linhaEncomenda3.getQuantidade(), 0.01);
      assertNotNull(linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      
      double double1 = linhaEncomenda0.getQuantidade();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertEquals(double1, double0, 0.01);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPreco(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals((-2470.1017075351), double1, 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      linhaEncomenda0.setPreco((-1479.8815073269857));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals((-1479.8815073269857), linhaEncomenda0.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      String string3 = linhaEncomenda0.getCodigo();
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals((-1479.8815073269857), linhaEncomenda0.getPreco(), 0.01);
      assertNotNull(string3);
      assertEquals("\n", string3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      boolean boolean3 = linhaEncomenda0.equals(object1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(object1.equals((Object)object0));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("C\u00F3digo de produto: ", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals((-1479.8815073269857), linhaEncomenda0.getPreco(), 0.01);
      assertFalse(boolean3);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(object1, object0);
      
      linhaEncomenda0.setDescricao("");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals((-1479.8815073269857), linhaEncomenda0.getPreco(), 0.01);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      
      boolean boolean4 = linhaEncomenda0.equals("q+Pn|kX>bWyC?");
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(linhaEncomenda0.isMed());
      assertEquals((-2470.1017075351), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals("\n", linhaEncomenda0.getCodigo());
      assertEquals((-1479.8815073269857), linhaEncomenda0.getPreco(), 0.01);
      assertFalse(boolean4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.toString();
      Object object0 = new Object();
      linhaEncomenda0.equals(object0);
      linhaEncomenda0.setCodigo("\nC\u00F3digo de produto:  \nProduto:  \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      linhaEncomenda0.setDescricao("\nC\u00F3digo de produto:  \nProduto:  \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setPreco((-1377.1));
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda2.setQuantidade((-55.47689));
      linhaEncomenda1.isMed();
      linhaEncomenda1.getDescricao();
      linhaEncomenda2.getCodigo();
      linhaEncomenda1.setPreco((-1377.1));
      linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      assertEquals((-1377.1), linhaEncomenda1.getPreco(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.setQuantidade(1.0);
      linhaEncomenda0.setDescricao("");
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      linhaEncomenda0.setDescricao("Saco de lixo 30l");
      linhaEncomenda1.setDescricao("\nC\u00F3digo de produto:  \nProduto: \nQuantidade: 1.0\nPre\u00E7o: 0.0\n");
      linhaEncomenda0.setQuantidade(2301.42);
      linhaEncomenda0.isMed();
      linhaEncomenda0.isMed();
      linhaEncomenda1.getPreco();
      linhaEncomenda1.setQuantidade(0.0);
      linhaEncomenda0.getQuantidade();
      linhaEncomenda0.getPreco();
      linhaEncomenda1.setDescricao("Alcool");
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.getCodigo();
      linhaEncomenda0.setPreco(2301.42);
      linhaEncomenda1.getQuantidade();
      linhaEncomenda1.getPreco();
      linhaEncomenda1.setPreco(0.0);
      boolean boolean0 = linhaEncomenda1.isMed();
      assertEquals(2301.42, linhaEncomenda0.getQuantidade(), 0.01);
      assertTrue(boolean0);
  }
}
