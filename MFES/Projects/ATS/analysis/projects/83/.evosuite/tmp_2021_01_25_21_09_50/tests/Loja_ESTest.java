/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 21:15:14 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.Month;
import java.time.ZoneOffset;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Loja_ESTest extends Loja_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      Map<String, LinhaEncomenda> map0 = encomenda1.getProdutos();
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotNull(map0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(1424);
      assertNotNull(zoneOffset0);
      
      Clock clock0 = MockClock.tickSeconds(zoneOffset0);
      assertNotNull(clock0);
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      assertNotNull(localDateTime0);
      
      Encomenda encomenda2 = new Encomenda("", "gACQD", "!%OY>q/Zu", 0.0, (String) null, "", map0, true, localDateTime0, true, true, true);
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals("", encomenda2.getCodigo());
      assertEquals("", encomenda2.getVendedor());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isPreparada());
      assertEquals("gACQD", encomenda2.getCodigo_user());
      assertTrue(encomenda2.isLevantada());
      assertEquals("!%OY>q/Zu", encomenda2.getCodigo_loja());
      assertNull(encomenda2.getComprador());
      assertTrue(encomenda2.isEntregue());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotNull(encomenda2);
      
      boolean boolean0 = arrayList0.add(encomenda2);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertEquals("", encomenda2.getCodigo());
      assertEquals("", encomenda2.getVendedor());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isPreparada());
      assertEquals("gACQD", encomenda2.getCodigo_user());
      assertTrue(encomenda2.isLevantada());
      assertEquals("!%OY>q/Zu", encomenda2.getCodigo_loja());
      assertNull(encomenda2.getComprador());
      assertTrue(encomenda2.isEntregue());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(boolean0);
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda2));
      
      Encomenda encomenda3 = new Encomenda();
      assertEquals(" ", encomenda3.getCodigo_user());
      assertEquals(" ", encomenda3.getVendedor());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getComprador());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getCodigo());
      assertFalse(encomenda3.isPreparada());
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertNotNull(encomenda3);
      
      Map<String, LinhaEncomenda> map1 = encomenda3.getProdutos();
      assertEquals(" ", encomenda3.getCodigo_user());
      assertEquals(" ", encomenda3.getVendedor());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getComprador());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getCodigo());
      assertFalse(encomenda3.isPreparada());
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(map1, map0);
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertTrue(map1.equals((Object)map0));
      assertNotNull(map1);
      
      LocalDateTime localDateTime1 = MockLocalDateTime.now();
      assertNotSame(localDateTime1, localDateTime0);
      assertFalse(localDateTime1.equals((Object)localDateTime0));
      assertNotNull(localDateTime1);
      
      Encomenda encomenda4 = new Encomenda("0Y,v(:ex#j#8)", "Saco de lixo 30l", (String) null, 0.0, "Saco de lixo 30l", (String) null, map1, true, localDateTime1, false, false, false);
      assertEquals(" ", encomenda3.getCodigo_user());
      assertEquals(" ", encomenda3.getVendedor());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getComprador());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getCodigo());
      assertFalse(encomenda3.isPreparada());
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertEquals("Saco de lixo 30l", encomenda4.getComprador());
      assertTrue(encomenda4.isEncomendaMedica());
      assertNull(encomenda4.getVendedor());
      assertNull(encomenda4.getCodigo_loja());
      assertFalse(encomenda4.isLevantada());
      assertEquals("Saco de lixo 30l", encomenda4.getCodigo_user());
      assertFalse(encomenda4.isEntregue());
      assertEquals("0Y,v(:ex#j#8)", encomenda4.getCodigo());
      assertFalse(encomenda4.isPreparada());
      assertEquals(0.0, encomenda4.getPeso(), 0.01);
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertTrue(map1.equals((Object)map0));
      assertFalse(localDateTime1.equals((Object)localDateTime0));
      assertFalse(encomenda4.equals((Object)encomenda0));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertNotNull(encomenda4);
      
      boolean boolean1 = arrayList0.add(encomenda4);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertEquals(" ", encomenda3.getVendedor());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getComprador());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getCodigo());
      assertFalse(encomenda3.isPreparada());
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertEquals("Saco de lixo 30l", encomenda4.getComprador());
      assertTrue(encomenda4.isEncomendaMedica());
      assertNull(encomenda4.getVendedor());
      assertNull(encomenda4.getCodigo_loja());
      assertFalse(encomenda4.isLevantada());
      assertEquals("Saco de lixo 30l", encomenda4.getCodigo_user());
      assertFalse(encomenda4.isEntregue());
      assertEquals("0Y,v(:ex#j#8)", encomenda4.getCodigo());
      assertFalse(encomenda4.isPreparada());
      assertEquals(0.0, encomenda4.getPeso(), 0.01);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda4);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(map1, map0);
      assertNotSame(localDateTime1, localDateTime0);
      assertNotSame(encomenda4, encomenda0);
      assertNotSame(encomenda4, encomenda1);
      assertNotSame(encomenda4, encomenda3);
      assertNotSame(encomenda4, encomenda2);
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda4));
      assertTrue(map1.equals((Object)map0));
      assertFalse(localDateTime1.equals((Object)localDateTime0));
      assertFalse(encomenda4.equals((Object)encomenda0));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda4));
      
      Loja loja0 = new Loja("]d'ntddv{,W", "]d'ntddv{,W", "", "", 0.0, 0.0, 0.0, arrayList0, 0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda4));
      assertNotNull(loja0);
      
      Encomenda encomenda5 = loja0.getEnc("");
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("", encomenda5.getVendedor());
      assertEquals("", encomenda5.getCodigo());
      assertNull(encomenda5.getComprador());
      assertTrue(encomenda5.isEncomendaMedica());
      assertTrue(encomenda5.isPreparada());
      assertEquals(0.0, encomenda5.getPeso(), 0.01);
      assertTrue(encomenda5.isLevantada());
      assertEquals("!%OY>q/Zu", encomenda5.getCodigo_loja());
      assertTrue(encomenda5.isEntregue());
      assertEquals("gACQD", encomenda5.getCodigo_user());
      assertNotSame(encomenda5, encomenda0);
      assertNotSame(encomenda5, encomenda2);
      assertNotSame(encomenda5, encomenda4);
      assertNotSame(encomenda5, encomenda3);
      assertNotSame(encomenda5, encomenda1);
      assertFalse(encomenda5.equals((Object)encomenda0));
      assertFalse(encomenda5.equals((Object)encomenda4));
      assertFalse(encomenda5.equals((Object)encomenda3));
      assertFalse(encomenda5.equals((Object)encomenda1));
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda4));
      assertNotNull(encomenda5);
      
      loja0.updateEncomenda(encomenda3);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertEquals(" ", encomenda3.getVendedor());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isLevantada());
      assertEquals(" ", encomenda3.getComprador());
      assertTrue(encomenda3.isPreparada());
      assertTrue(encomenda3.isEncomendaMedica());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda5);
      assertNotSame(encomenda3, encomenda4);
      assertNotSame(encomenda3, encomenda1);
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda5));
      assertFalse(encomenda3.equals((Object)encomenda4));
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda4));
      
      loja0.setLatitude(0.0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda4));
      
      Loja loja1 = loja0.clone();
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("]d'ntddv{,W", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals("]d'ntddv{,W", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(loja1, loja0);
      assertNotSame(loja0, loja1);
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda4));
      assertNotNull(loja1);
      
      double double0 = loja0.getLongitude();
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertEquals(0.0, double0, 0.01);
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda4));
      
      Loja loja2 = loja1.clone();
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("]d'ntddv{,W", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals("]d'ntddv{,W", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja2.getEmail());
      assertEquals("]d'ntddv{,W", loja2.getPassword());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda4));
      assertNotNull(loja2);
      
      int int0 = loja0.getNrPessoasEmFila();
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertEquals(0, int0);
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda4));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotNull(loja0);
      
      Loja loja1 = loja0.clone();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      loja1.addEncomenda(encomenda0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      
      boolean boolean0 = loja1.equals(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(boolean0);
      
      loja1.setNome("Tempo de espera: ");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      
      loja1.setTypeUser("C\u00F3digo do utilizador: ");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("C\u00F3digo do utilizador: ", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      
      loja1.setLatitude(0.0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("C\u00F3digo do utilizador: ", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      
      loja0.setTypeUser("Tempo de espera: ");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("Tempo de espera: ", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      loja1.setLongitude((-3336.0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("Tempo de espera: ", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("C\u00F3digo do utilizador: ", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      
      loja0.setNome("l&pqK!fk");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("Tempo de espera: ", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("l&pqK!fk", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      boolean boolean0 = loja0.equals(loja0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertTrue(boolean0);
      
      loja0.setNome("Tempo de espera: ");
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("Tempo de espera: ", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      loja0.setLongitude((-3336.0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("Tempo de espera: ", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      loja0.setNome("l&pqK!fk");
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("l&pqK!fk", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "Loja";
      String string1 = null;
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja0 = new Loja("Loja", (String) null, "Loja", "Loja", 0.0, 0.0, 0.0, arrayList0, (-1436));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(loja0.getPassword());
      assertEquals((-1436), loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("Loja", loja0.getNome());
      assertEquals("Loja", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList1 = loja0.getEncomendas_recebidas();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(loja0.getPassword());
      assertEquals((-1436), loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("Loja", loja0.getNome());
      assertEquals("Loja", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertNotNull(arrayList1);
      
      Loja loja1 = new Loja(loja0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(loja0.getPassword());
      assertEquals((-1436), loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("Loja", loja0.getNome());
      assertEquals("Loja", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-1436), loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNull(loja1.getPassword());
      assertEquals("Loja", loja1.getCodigo());
      assertEquals("Loja", loja1.getNome());
      assertEquals("Loja", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertNotNull(loja1);
      
      String string2 = loja1.getEncNotReady();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(loja0.getPassword());
      assertEquals((-1436), loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("Loja", loja0.getNome());
      assertEquals("Loja", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-1436), loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNull(loja1.getPassword());
      assertEquals("Loja", loja1.getCodigo());
      assertEquals("Loja", loja1.getNome());
      assertEquals("Loja", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("0", string2);
      assertNotNull(string2);
      
      String string3 = "O*%eE<Zj*6QRj2";
      loja0.setEmail("O*%eE<Zj*6QRj2");
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("O*%eE<Zj*6QRj2", loja0.getEmail());
      assertNull(loja0.getPassword());
      assertEquals((-1436), loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("Loja", loja0.getNome());
      assertEquals("Loja", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      ArrayList<Encomenda> arrayList2 = loja0.getEncomendas_recebidas();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("O*%eE<Zj*6QRj2", loja0.getEmail());
      assertNull(loja0.getPassword());
      assertEquals((-1436), loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("Loja", loja0.getNome());
      assertEquals("Loja", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(arrayList2, arrayList0);
      assertNotSame(arrayList2, arrayList1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertNotNull(arrayList2);
      
      Loja loja2 = new Loja("0", "Loja", "O*%eE<Zj*6QRj2", "0", 0.0, 0.0, 1506.39561490154, arrayList2, (-1436));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("O*%eE<Zj*6QRj2", loja0.getEmail());
      assertNull(loja0.getPassword());
      assertEquals((-1436), loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("Loja", loja0.getNome());
      assertEquals("Loja", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertEquals("0", loja2.getEmail());
      assertEquals("Loja", loja2.getPassword());
      assertEquals((-1436), loja2.getNrPessoasEmFila());
      assertEquals("O*%eE<Zj*6QRj2", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("0", loja2.getNome());
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList0.equals((Object)arrayList2));
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertNotNull(loja2);
      
      // Undeclared exception!
      try { 
        loja1.equals(loja2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("UtilizadorSistema", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(encomenda0);
      
      encomenda0.setEntregue(false);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isLevantada());
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      encomenda1.setPeso(2848.82935356017);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertEquals(2848.82935356017, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isLevantada());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      loja0.addEncomenda(encomenda1);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertEquals(2848.82935356017, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isLevantada());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      String string0 = loja0.toString();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 2848.82935356017\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\n <--- O utilizador \u00E9: \n\n\n", string0);
      assertNotNull(string0);
      
      String string1 = loja0.toString();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(string1.equals((Object)string0));
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 2848.82935356017\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\n <--- O utilizador \u00E9: \n\n\n", string1);
      assertNotNull(string1);
      
      boolean boolean0 = loja0.equals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 2848.82935356017\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\n <--- O utilizador \u00E9: \n\n\n");
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertFalse(boolean0);
      
      boolean boolean1 = loja0.equals(encomenda0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertNotSame(encomenda0, encomenda1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Encomenda encomenda2 = loja0.getEnc(" ");
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertEquals(" ", encomenda2.getCodigo());
      assertEquals(2848.82935356017, encomenda2.getPeso(), 0.01);
      assertEquals(" ", encomenda2.getComprador());
      assertFalse(encomenda2.isPreparada());
      assertFalse(encomenda2.isLevantada());
      assertFalse(encomenda2.isEntregue());
      assertTrue(encomenda2.isEncomendaMedica());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertTrue(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotNull(encomenda2);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.contains(encomenda0));
      assertTrue(arrayList0.contains(encomenda2));
      assertNotNull(arrayList0);
      
      String string2 = loja0.toString();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(string2.equals((Object)string0));
      assertTrue(string2.equals((Object)string1));
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 2848.82935356017\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\n <--- O utilizador \u00E9: \n\n\n", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "^,fiuaejK$ZX";
      String string1 = "";
      double double0 = 0.0;
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      int int0 = 0;
      double double1 = 0.0;
      boolean boolean0 = arrayList0.remove((Object) "(^v[#");
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(boolean0);
      
      Loja loja0 = new Loja("", "^,fiuaejK$ZX", "", "(^v[#", 0.0, 193.152716372, 0.0, arrayList0, 0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("^,fiuaejK$ZX", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(193.152716372, loja0.getLatitude(), 0.01);
      assertEquals(193.152716372, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("(^v[#", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("^,fiuaejK$ZX", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(193.152716372, loja0.getLatitude(), 0.01);
      assertEquals(193.152716372, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("(^v[#", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(193.152716372, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("(^v[#", loja1.getNome());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("^,fiuaejK$ZX", loja1.getPassword());
      assertEquals(193.152716372, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      loja0.setTypeUser("aqo-d~l)SQK5#).-ZQw");
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("^,fiuaejK$ZX", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(193.152716372, loja0.getLatitude(), 0.01);
      assertEquals(193.152716372, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("(^v[#", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("aqo-d~l)SQK5#).-ZQw", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      double double2 = loja0.getLongitude();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("^,fiuaejK$ZX", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(193.152716372, loja0.getLatitude(), 0.01);
      assertEquals(193.152716372, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("(^v[#", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("aqo-d~l)SQK5#).-ZQw", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(193.152716372, double2, 0.01);
      
      String string2 = null;
      try { 
        loja1.getEnc("^,fiuaejK$ZX");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "Lista de encomendas recebidas: ";
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      int int0 = (-125);
      Loja loja0 = new Loja("Lista de encomendas recebidas: ", "d@V}?", "d@V}?", "", (-1.0), 0.0, (-1.0), arrayList0, (-125));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertEquals("d@V}?", loja0.getPassword());
      assertEquals("d@V}?", loja0.getCodigo());
      assertEquals((-125), loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      arrayList0.ensureCapacity((-125));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      boolean boolean0 = loja0.equals(object0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertEquals("d@V}?", loja0.getPassword());
      assertEquals("d@V}?", loja0.getCodigo());
      assertEquals((-125), loja0.getNrPessoasEmFila());
      assertFalse(boolean0);
      
      Loja loja1 = new Loja(loja0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertEquals("d@V}?", loja0.getPassword());
      assertEquals("d@V}?", loja0.getCodigo());
      assertEquals((-125), loja0.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja1.getEmail());
      assertEquals((-1.0), loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("d@V}?", loja1.getPassword());
      assertEquals((-125), loja1.getNrPessoasEmFila());
      assertEquals("d@V}?", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      double double0 = 1194.4796029407948;
      boolean boolean1 = loja1.equals("d@V}?");
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertEquals("d@V}?", loja0.getPassword());
      assertEquals("d@V}?", loja0.getCodigo());
      assertEquals((-125), loja0.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja1.getEmail());
      assertEquals((-1.0), loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("d@V}?", loja1.getPassword());
      assertEquals((-125), loja1.getNrPessoasEmFila());
      assertEquals("d@V}?", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Loja loja2 = loja0.clone();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertEquals("d@V}?", loja0.getPassword());
      assertEquals("d@V}?", loja0.getCodigo());
      assertEquals((-125), loja0.getNrPessoasEmFila());
      assertEquals((-125), loja2.getNrPessoasEmFila());
      assertEquals("Lista de encomendas recebidas: ", loja2.getEmail());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("d@V}?", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja2.getNome());
      assertEquals("d@V}?", loja2.getCodigo());
      assertEquals((-1.0), loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertNotNull(loja2);
      
      loja2.setTempo_espera(1.0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertEquals("d@V}?", loja0.getPassword());
      assertEquals("d@V}?", loja0.getCodigo());
      assertEquals((-125), loja0.getNrPessoasEmFila());
      assertEquals((-125), loja2.getNrPessoasEmFila());
      assertEquals("Lista de encomendas recebidas: ", loja2.getEmail());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("d@V}?", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja2.getNome());
      assertEquals("d@V}?", loja2.getCodigo());
      assertEquals(1.0, loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      
      loja2.setEmail("\n");
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertEquals("d@V}?", loja0.getPassword());
      assertEquals("d@V}?", loja0.getCodigo());
      assertEquals((-125), loja0.getNrPessoasEmFila());
      assertEquals((-125), loja2.getNrPessoasEmFila());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("d@V}?", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja2.getNome());
      assertEquals("d@V}?", loja2.getCodigo());
      assertEquals("\n", loja2.getEmail());
      assertEquals(1.0, loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      
      String string1 = null;
      String string2 = "&f+PDt(!\"|i\\J2`Jd";
      String string3 = "9iusf";
      HashMap<String, LinhaEncomenda> hashMap0 = new HashMap<String, LinhaEncomenda>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      Month month0 = Month.JUNE;
      // Undeclared exception!
      try { 
        MockLocalDateTime.of((-2877), month0, 3151, 0, (-981), (-1871), (-125));
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for DayOfMonth (valid values 1 - 28/31): 3151
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja0 = new Loja((String) null, (String) null, (String) null, (String) null, (-1.0), (-1.0), 0.0, arrayList0, (-1217));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals((-1217), loja0.getNrPessoasEmFila());
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals((-1.0), loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getPassword());
      assertNull(loja0.getEmail());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals((-1217), loja0.getNrPessoasEmFila());
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals((-1.0), loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getPassword());
      assertNull(loja0.getEmail());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertNull(loja1.getPassword());
      assertEquals((-1217), loja1.getNrPessoasEmFila());
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertNull(loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals((-1.0), loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertNull(loja1.getEmail());
      assertNotNull(loja1);
      
      double double0 = loja1.getTempo_espera();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals((-1217), loja0.getNrPessoasEmFila());
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals((-1.0), loja0.getLatitude(), 0.01);
      assertEquals((-1.0), loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getPassword());
      assertNull(loja0.getEmail());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertNull(loja1.getPassword());
      assertEquals((-1217), loja1.getNrPessoasEmFila());
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertNull(loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals((-1.0), loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertNull(loja1.getEmail());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      loja0.updateEncomenda(encomenda0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getComprador());
      
      encomenda0.setComprador("C\u00F3digo de produto: ");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      
      String string0 = loja0.getCodigo();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = loja0.getEncNotReady();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertFalse(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotNull(string1);
      
      encomenda0.setEntregue(false);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("C\u00F3digo de produto: ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      
      encomenda0.setComprador("");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      
      String string2 = encomenda0.toString();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("", encomenda0.getComprador());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador: \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string2);
      assertNotNull(string2);
      
      encomenda0.setComprador("0");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("0", encomenda0.getComprador());
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("0", encomenda0.getComprador());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      encomenda0.setEncomendaMedica(true);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("0", encomenda0.getComprador());
      
      loja0.setNrPessoasEmFila(1);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      
      loja0.updateEncomenda(encomenda0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("0", encomenda0.getComprador());
      
      loja0.updateEncomenda(encomenda0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("0", encomenda0.getComprador());
      
      int int0 = loja0.getNrPessoasEmFila();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(1, int0);
      
      loja0.setLongitude((-1420.24434899));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      
      loja0.setCodigo("");
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      
      int int1 = loja0.getNrPessoasEmFila();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertTrue(int1 == int0);
      assertEquals(1, int1);
      
      double double0 = loja0.getLatitude();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(0.0, double0, 0.01);
      
      loja0.removeEncomenda(encomenda0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("0", encomenda0.getComprador());
      
      loja0.setLongitude(1);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      
      double double1 = loja0.getLatitude();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      loja0.updateEncomenda(encomenda0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("0", encomenda0.getComprador());
      
      String string3 = loja0.getCodigo();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertEquals("", string3);
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja0 = new Loja((String) null, (String) null, (String) null, "Nome da loja: ", 1112.4, 1112.4, 1265.8072219884284, arrayList0, 957);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertNull(loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals(1112.4, loja0.getTempo_espera(), 0.01);
      assertEquals(957, loja0.getNrPessoasEmFila());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      assertNotNull(loja0);
      
      arrayList0.ensureCapacity(0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      loja0.setTempo_espera(1299.7894);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals(957, loja0.getNrPessoasEmFila());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      
      loja0.setLongitude(1299.7894);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals(957, loja0.getNrPessoasEmFila());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      
      String string0 = loja0.getEncNotReady();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals(957, loja0.getNrPessoasEmFila());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      assertEquals("0", string0);
      assertNotNull(string0);
      
      loja0.setNrPessoasEmFila(957);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals(957, loja0.getNrPessoasEmFila());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      
      loja0.setLongitude(1265.8072219884284);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals(957, loja0.getNrPessoasEmFila());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      
      loja0.setNrPessoasEmFila(1927);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertEquals(1927, loja0.getNrPessoasEmFila());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertNotNull(encomenda0);
      
      boolean boolean0 = arrayList0.add(encomenda0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(encomenda0));
      
      loja0.setCodigo("");
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertEquals(1927, loja0.getNrPessoasEmFila());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      assertTrue(arrayList0.contains(encomenda0));
      
      ArrayList<Encomenda> arrayList1 = loja0.getEncomendas_recebidas();
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertEquals(1927, loja0.getNrPessoasEmFila());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertTrue(arrayList0.contains(encomenda0));
      assertFalse(arrayList1.contains(encomenda0));
      assertNotNull(arrayList1);
      
      loja0.setEncomendas_recebidas(arrayList1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertEquals(1927, loja0.getNrPessoasEmFila());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertTrue(arrayList0.contains(encomenda0));
      assertFalse(arrayList1.contains(encomenda0));
      
      int int0 = loja0.getNrPessoasEmFila();
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertEquals(1927, loja0.getNrPessoasEmFila());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      assertNotSame(arrayList0, arrayList1);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertEquals(1927, int0);
      assertTrue(arrayList0.contains(encomenda0));
      
      Encomenda encomenda1 = new Encomenda();
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      HashMap<String, LinhaEncomenda> hashMap0 = new HashMap<String, LinhaEncomenda>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      encomenda1.setProdutos(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertNotSame(encomenda1, encomenda0);
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      loja0.updateEncomenda(encomenda1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertEquals(1927, loja0.getNrPessoasEmFila());
      assertNull(loja0.getPassword());
      assertEquals(1299.7894, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      assertTrue(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(encomenda1, encomenda0);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertTrue(arrayList0.contains(encomenda0));
      
      loja0.setTempo_espera(1927);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("Nome da loja: ", loja0.getNome());
      assertEquals(1927, loja0.getNrPessoasEmFila());
      assertNull(loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(1112.4, loja0.getLatitude(), 0.01);
      assertEquals(1927.0, loja0.getTempo_espera(), 0.01);
      assertEquals(1112.4, loja0.getLongitude(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(loja0.getEmail());
      assertNotSame(arrayList0, arrayList1);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList0.contains(encomenda0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      String string0 = "xkciCsZ$";
      boolean boolean0 = loja0.equals("xkciCsZ$");
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertFalse(boolean0);
      
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean1 = arrayList0.add((Encomenda) null);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      boolean boolean2 = arrayList0.add(encomenda1);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      assertTrue(arrayList0.contains(encomenda0));
      
      String string1 = loja0.getEncNotReady();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertFalse(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotNull(string1);
      
      // Undeclared exception!
      try { 
        loja0.setEncomendas_recebidas(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      loja0.setLatitude((-1.0));
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals((-1.0), loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(encomenda0);
      
      encomenda0.setComprador("");
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      
      Loja loja1 = loja0.clone();
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals((-1.0), loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      encomenda1.setPreparada(true);
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertTrue(encomenda1.isPreparada());
      assertEquals("", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      loja0.addEncomenda(encomenda1);
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals((-1.0), loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals("", encomenda0.getComprador());
      assertFalse(encomenda1.isEntregue());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertTrue(encomenda1.isEncomendaMedica());
      assertTrue(encomenda1.isPreparada());
      assertEquals("", encomenda1.getComprador());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertNotSame(loja0, loja1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      
      String string0 = loja0.getEncNotReady();
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals((-1.0), loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("0", string0);
      assertNotNull(string0);
      
      loja0.setLatitude(4042.5042);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(4042.5042, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(4042.5042, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      loja0.setNome("^*v.(=26-DU03L(I");
      assertEquals("^*v.(=26-DU03L(I", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(4042.5042, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(4042.5042, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      String string1 = loja0.getEncNotReady();
      assertEquals("^*v.(=26-DU03L(I", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(4042.5042, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(4042.5042, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotNull(string1);
      
      String string2 = loja0.getEncNotReady();
      assertEquals("^*v.(=26-DU03L(I", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(4042.5042, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(4042.5042, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertEquals("0", string2);
      assertNotNull(string2);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("^*v.(=26-DU03L(I", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(4042.5042, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(4042.5042, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(arrayList0.contains(encomenda0));
      assertNotNull(arrayList0);
      
      String string3 = loja0.toString();
      assertEquals("^*v.(=26-DU03L(I", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(4042.5042, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(4042.5042, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: ^*v.(=26-DU03L(I\nTempo de espera: 0.0\nLatitude: 4042.5042\nLongitude: 4042.5042\nLista de encomendas recebidas: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador: \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\n <--- O utilizador \u00E9: \n\n\n", string3);
      assertNotNull(string3);
      
      String string4 = loja0.getEncNotReady();
      assertEquals("^*v.(=26-DU03L(I", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(4042.5042, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(4042.5042, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(string4.equals((Object)string0));
      assertTrue(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals("0", string4);
      assertNotNull(string4);
      
      loja0.setLatitude(0.0);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("^*v.(=26-DU03L(I", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      loja0.setNome("0");
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("0", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      String string5 = loja0.getCodigo();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("0", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertEquals("", string5);
      assertNotNull(string5);
      
      // Undeclared exception!
      try { 
        loja0.getEnc((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja0 = new Loja("", "", "", "", 1.0, 1.0, 0.0, arrayList0, 1929);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.toString();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      assertNotNull(string0);
      
      encomenda0.setEntregue(true);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      
      ArrayList<Encomenda> arrayList1 = loja0.getEncomendas_recebidas();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertFalse(arrayList0.contains(encomenda0));
      assertFalse(arrayList1.contains(encomenda0));
      assertNotNull(arrayList1);
      
      loja0.addEncomenda(encomenda0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNotSame(arrayList0, arrayList1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(arrayList0.contains(encomenda0));
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertNotSame(arrayList0, arrayList1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(arrayList0.contains(encomenda0));
      
      Loja loja1 = loja0.clone();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(1.0, loja1.getTempo_espera(), 0.01);
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(1929, loja1.getNrPessoasEmFila());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(arrayList0.contains(encomenda0));
      assertNotNull(loja1);
      
      loja0.addEncomenda(encomenda0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(arrayList0.contains(encomenda0));
      
      loja0.setTypeUser("x9hY=ym~;'eMc}+");
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(arrayList0.contains(encomenda0));
      
      loja1.setCodigo("x9hY=ym~;'eMc}+");
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1.0, loja1.getTempo_espera(), 0.01);
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(1929, loja1.getNrPessoasEmFila());
      assertEquals("x9hY=ym~;'eMc}+", loja1.getCodigo());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(arrayList0.contains(encomenda0));
      
      loja0.setCodigo((String) null);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(arrayList0.contains(encomenda0));
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(arrayList0.contains(encomenda0));
      
      double double0 = loja1.getTempo_espera();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1.0, loja1.getTempo_espera(), 0.01);
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(1929, loja1.getNrPessoasEmFila());
      assertEquals("x9hY=ym~;'eMc}+", loja1.getCodigo());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(1.0, double0, 0.01);
      assertFalse(arrayList0.contains(encomenda0));
      
      String string1 = loja0.getCodigo();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(arrayList0.contains(encomenda0));
      assertNull(string1);
      
      String string2 = loja1.toString();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1.0, loja1.getTempo_espera(), 0.01);
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(1929, loja1.getNrPessoasEmFila());
      assertEquals("x9hY=ym~;'eMc}+", loja1.getCodigo());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(string2.equals((Object)string0));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("Loja: \nC\u00F3digo da loja: x9hY=ym~;'eMc}+\nNome da loja: \nTempo de espera: 1.0\nLatitude: 1.0\nLongitude: 1.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \nLoja\n\n", string2);
      assertFalse(arrayList0.contains(encomenda0));
      assertNotNull(string2);
      
      encomenda0.setPreparada(false);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      
      String string3 = loja1.getEncNotReady();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1.0, loja1.getTempo_espera(), 0.01);
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(1929, loja1.getNrPessoasEmFila());
      assertEquals("x9hY=ym~;'eMc}+", loja1.getCodigo());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("0", string3);
      assertFalse(arrayList0.contains(encomenda0));
      assertNotNull(string3);
      
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      assertNotNull(zoneOffset0);
      
      LocalDateTime localDateTime0 = MockLocalDateTime.ofEpochSecond(1929, 1929, zoneOffset0);
      assertNotNull(localDateTime0);
      
      Encomenda encomenda1 = new Encomenda("Loja: \nC\u00F3digo da loja: x9hY=ym~;'eMc}+\nNome da loja: \nTempo de espera: 1.0\nLatitude: 1.0\nLongitude: 1.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \nLoja\n\n", "\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", "6*@c6ZDi-`Y3-)iWzh", 267.9, "]f]cB", (String) null, map0, true, localDateTime0, true, false, true);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertFalse(encomenda1.isLevantada());
      assertEquals("6*@c6ZDi-`Y3-)iWzh", encomenda1.getCodigo_loja());
      assertTrue(encomenda1.isEntregue());
      assertEquals("Loja: \nC\u00F3digo da loja: x9hY=ym~;'eMc}+\nNome da loja: \nTempo de espera: 1.0\nLatitude: 1.0\nLongitude: 1.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \nLoja\n\n", encomenda1.getCodigo());
      assertTrue(encomenda1.isPreparada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("]f]cB", encomenda1.getComprador());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo_user());
      assertEquals(267.9, encomenda1.getPeso(), 0.01);
      assertNull(encomenda1.getVendedor());
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      boolean boolean0 = arrayList1.add(encomenda1);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertFalse(encomenda1.isLevantada());
      assertEquals("6*@c6ZDi-`Y3-)iWzh", encomenda1.getCodigo_loja());
      assertTrue(encomenda1.isEntregue());
      assertEquals("Loja: \nC\u00F3digo da loja: x9hY=ym~;'eMc}+\nNome da loja: \nTempo de espera: 1.0\nLatitude: 1.0\nLongitude: 1.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \nLoja\n\n", encomenda1.getCodigo());
      assertTrue(encomenda1.isPreparada());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals("]f]cB", encomenda1.getComprador());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda1.getCodigo_user());
      assertEquals(267.9, encomenda1.getPeso(), 0.01);
      assertNull(encomenda1.getVendedor());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(arrayList1, arrayList0);
      assertNotSame(encomenda1, encomenda0);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertTrue(boolean0);
      assertFalse(arrayList0.contains(encomenda0));
      assertFalse(arrayList1.contains(encomenda0));
      assertTrue(arrayList1.contains(encomenda1));
      
      loja0.removeEncomenda(encomenda0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEntregue());
      assertFalse(encomenda0.isPreparada());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(encomenda0, encomenda1);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertFalse(arrayList0.contains(encomenda0));
      
      boolean boolean1 = loja0.equals(arrayList1);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertFalse(arrayList0.contains(encomenda0));
      assertFalse(arrayList1.contains(encomenda0));
      assertTrue(arrayList1.contains(encomenda1));
      
      loja0.setCodigo((String) null);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("x9hY=ym~;'eMc}+", loja0.getTypeUser());
      assertEquals(1.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(1929, loja0.getNrPessoasEmFila());
      assertEquals(1.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja0, loja1);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(arrayList0.contains(encomenda0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja(">jy`RcZ", ">jy`RcZ", ">jy`RcZ", (String) null, 1.0, 1624.474352, 1.0, arrayList0, (-1864));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1624.474352, loja1.getLongitude(), 0.01);
      assertEquals((-1864), loja1.getNrPessoasEmFila());
      assertEquals(">jy`RcZ", loja1.getPassword());
      assertEquals(">jy`RcZ", loja1.getCodigo());
      assertEquals(1.0, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(">jy`RcZ", loja1.getEmail());
      assertNull(loja1.getNome());
      assertEquals(1624.474352, loja1.getLatitude(), 0.01);
      assertFalse(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      boolean boolean0 = arrayList0.add((Encomenda) null);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(boolean0);
      
      Loja loja2 = loja1.clone();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1624.474352, loja1.getLongitude(), 0.01);
      assertEquals((-1864), loja1.getNrPessoasEmFila());
      assertEquals(">jy`RcZ", loja1.getPassword());
      assertEquals(">jy`RcZ", loja1.getCodigo());
      assertEquals(1.0, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(">jy`RcZ", loja1.getEmail());
      assertNull(loja1.getNome());
      assertEquals(1624.474352, loja1.getLatitude(), 0.01);
      assertNull(loja2.getNome());
      assertEquals(1.0, loja2.getTempo_espera(), 0.01);
      assertEquals(">jy`RcZ", loja2.getPassword());
      assertEquals(">jy`RcZ", loja2.getCodigo());
      assertEquals(1624.474352, loja2.getLongitude(), 0.01);
      assertEquals((-1864), loja2.getNrPessoasEmFila());
      assertEquals(1624.474352, loja2.getLatitude(), 0.01);
      assertEquals(">jy`RcZ", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertNotNull(loja2);
      
      double double0 = loja1.getTempo_espera();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1624.474352, loja1.getLongitude(), 0.01);
      assertEquals((-1864), loja1.getNrPessoasEmFila());
      assertEquals(">jy`RcZ", loja1.getPassword());
      assertEquals(">jy`RcZ", loja1.getCodigo());
      assertEquals(1.0, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(">jy`RcZ", loja1.getEmail());
      assertNull(loja1.getNome());
      assertEquals(1624.474352, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(1.0, double0, 0.01);
      
      String string0 = loja0.getEncNotReady();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("0", string0);
      assertNotNull(string0);
      
      String string1 = loja2.getNome();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1624.474352, loja1.getLongitude(), 0.01);
      assertEquals((-1864), loja1.getNrPessoasEmFila());
      assertEquals(">jy`RcZ", loja1.getPassword());
      assertEquals(">jy`RcZ", loja1.getCodigo());
      assertEquals(1.0, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(">jy`RcZ", loja1.getEmail());
      assertNull(loja1.getNome());
      assertEquals(1624.474352, loja1.getLatitude(), 0.01);
      assertNull(loja2.getNome());
      assertEquals(1.0, loja2.getTempo_espera(), 0.01);
      assertEquals(">jy`RcZ", loja2.getPassword());
      assertEquals(">jy`RcZ", loja2.getCodigo());
      assertEquals(1624.474352, loja2.getLongitude(), 0.01);
      assertEquals((-1864), loja2.getNrPessoasEmFila());
      assertEquals(1624.474352, loja2.getLatitude(), 0.01);
      assertEquals(">jy`RcZ", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.toString();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      assertNotNull(string0);
      
      encomenda0.setCodigo_user("Pre\u00E7o: ");
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals("Pre\u00E7o: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isPreparada());
      
      loja0.updateEncomenda(encomenda0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isPreparada());
      assertEquals("Pre\u00E7o: ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      
      loja0.setCodigo("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      
      loja0.setLongitude(0.0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      
      loja0.setTempo_espera(0.0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(encomenda0));
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja();
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertFalse(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      loja1.setCodigo((String) null);
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja1, loja0);
      assertFalse(loja1.equals((Object)loja0));
      
      loja0.setNome("");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      ArrayList<Encomenda> arrayList1 = loja1.getEncomendas_recebidas();
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(arrayList1.contains(encomenda0));
      assertNotNull(arrayList1);
      
      Iterator<Encomenda> iterator0 = arrayList1.iterator();
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(arrayList1.contains(encomenda0));
      assertNotNull(iterator0);
      
      loja1.setLongitude((-3553.7));
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja1, loja0);
      assertFalse(loja1.equals((Object)loja0));
      
      loja0.setEncomendas_recebidas(arrayList1);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList1, arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(arrayList1.contains(encomenda0));
      
      loja1.setTempo_espera(0.0);
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      
      Encomenda encomenda1 = new Encomenda();
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      loja1.addEncomenda(encomenda1);
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(loja1, loja0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertFalse(loja1.equals((Object)loja0));
      
      double double0 = loja0.getLatitude();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals(0.0, double0, 0.01);
      
      String string1 = loja1.getNome();
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja1, loja0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", string1);
      assertNotNull(string1);
      
      loja0.removeEncomenda(encomenda1);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertFalse(encomenda1.isEntregue());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(" ", encomenda1.getCodigo());
      assertFalse(encomenda1.isPreparada());
      assertNotSame(loja0, loja1);
      assertNotSame(encomenda1, encomenda0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      loja0.setLongitude(0.0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      String string2 = loja1.getEncNotReady();
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja1, loja0);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string2);
      assertNotNull(string2);
      
      String string3 = loja0.getEncNotReady();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("0", string3);
      assertNotNull(string3);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotNull(loja0);
      
      loja0.setLatitude(0.0);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      
      loja0.setLatitude(0.0);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      
      double double0 = loja0.getLongitude();
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, double0, 0.01);
      
      String string0 = "Loja: ";
      Loja loja1 = loja0.clone();
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      loja1.setNome("Loja: ");
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("Loja: ", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      
      loja0.setLongitude(0.0);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      
      int int0 = loja0.getNrPessoasEmFila();
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0, int0);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("Loja: ", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(arrayList0);
      
      Loja loja2 = new Loja();
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getEmail());
      assertTrue(loja2.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja0));
      assertNotNull(loja2);
      
      loja2.setEmail("Loja: ");
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals("Loja: ", loja2.getEmail());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      
      boolean boolean0 = loja0.equals(loja2);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals("Loja: ", loja2.getEmail());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(boolean0);
      
      loja1.setCodigo("Loja: ");
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("Loja: ", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals("Loja: ", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      
      loja2.setLongitude(0.0);
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals("Loja: ", loja2.getEmail());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      
      String string1 = loja0.getNome();
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotNull(string1);
      
      boolean boolean1 = loja2.equals(loja0);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals("Loja: ", loja2.getEmail());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertTrue(boolean1 == boolean0);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(boolean1);
      
      loja0.setTempo_espera(345.002377510824);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(345.002377510824, loja0.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      
      try { 
        loja1.getEnc("Loja: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertNotNull(loja0);
      
      double double0 = loja0.getLatitude();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, double0, 0.01);
      
      loja0.setNrPessoasEmFila((-2955));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals((-2955), loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      encomenda0.setCodigo_loja((String) null);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNull(encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      
      loja0.setNrPessoasEmFila(1436);
      assertEquals("", loja0.getCodigo());
      assertEquals(1436, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      
      loja0.removeEncomenda(encomenda0);
      assertEquals("", loja0.getCodigo());
      assertEquals(1436, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertNull(encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      
      Loja loja1 = loja0.clone();
      assertEquals("", loja0.getCodigo());
      assertEquals(1436, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals(1436, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      loja0.setLongitude((-1711.70082358));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      loja0.setTypeUser("Nome da loja: ");
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("Nome da loja: ", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      
      String string0 = loja0.toString();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("Nome da loja: ", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \nNome da loja: \n\n", string0);
      assertNotNull(string0);
      
      loja0.setNome("UtilizadorSistema");
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("Nome da loja: ", loja0.getTypeUser());
      assertEquals("UtilizadorSistema", loja0.getNome());
      assertEquals("", loja0.getEmail());
      
      loja0.setLongitude((-1711.70082358));
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("Nome da loja: ", loja0.getTypeUser());
      assertEquals("UtilizadorSistema", loja0.getNome());
      assertEquals("", loja0.getEmail());
      
      loja0.setLatitude((-1711.70082358));
      assertEquals("", loja0.getCodigo());
      assertEquals((-1711.70082358), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Nome da loja: ", loja0.getTypeUser());
      assertEquals((-1711.70082358), loja0.getLatitude(), 0.01);
      assertEquals("UtilizadorSistema", loja0.getNome());
      assertEquals("", loja0.getEmail());
      
      Loja loja1 = loja0.clone();
      assertEquals("", loja0.getCodigo());
      assertEquals((-1711.70082358), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Nome da loja: ", loja0.getTypeUser());
      assertEquals((-1711.70082358), loja0.getLatitude(), 0.01);
      assertEquals("UtilizadorSistema", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("Nome da loja: ", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals((-1711.70082358), loja1.getLongitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("UtilizadorSistema", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals((-1711.70082358), loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      String string1 = loja0.getEncNotReady();
      assertEquals("", loja0.getCodigo());
      assertEquals((-1711.70082358), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Nome da loja: ", loja0.getTypeUser());
      assertEquals((-1711.70082358), loja0.getLatitude(), 0.01);
      assertEquals("UtilizadorSistema", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotNull(string1);
      
      HashMap<String, LinhaEncomenda> hashMap0 = new HashMap<String, LinhaEncomenda>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      // Undeclared exception!
      try { 
        MockLocalDateTime.of(0, (-2645), 0, (-685), 2319, (-2113));
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): -2645
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja0 = new Loja((String) null, "LinhaEncomenda", (String) null, "nl9t[~", 0.0, (-1.0), 0.0, arrayList0, 0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
      assertEquals("LinhaEncomenda", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals((-1.0), loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNull(loja0.getEmail());
      assertEquals("nl9t[~", loja0.getNome());
      assertNotNull(loja0);
      
      double double0 = loja0.getLongitude();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
      assertEquals("LinhaEncomenda", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals((-1.0), loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNull(loja0.getEmail());
      assertEquals("nl9t[~", loja0.getNome());
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      String string0 = "";
      loja0.setCodigo("");
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      
      loja1.setPassword("Alcool");
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("Alcool", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertNotNull(encomenda0);
      
      boolean boolean0 = arrayList0.add(encomenda0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(encomenda0.isPreparada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertFalse(encomenda0.isLevantada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(encomenda0));
      
      loja1.setEncomendas_recebidas(arrayList0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("Alcool", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(arrayList0.contains(encomenda0));
      
      String string1 = loja0.getEncNotReady();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotNull(string1);
      
      try { 
        loja1.getEnc("0");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      loja0.setEmail("XA,)$/*y");
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("XA,)$/*y", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      
      Loja loja1 = new Loja(loja0);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("XA,)$/*y", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("XA,)$/*y", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNotNull(encomenda0);
      
      loja1.updateEncomenda(encomenda0);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("XA,)$/*y", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("XA,)$/*y", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isEncomendaMedica());
      assertTrue(encomenda0.isPreparada());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("XA,)$/*y", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("XA,)$/*y", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(arrayList0.contains(encomenda0));
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertNotNull(encomenda0);
      
      encomenda0.setLevantada(true);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      
      boolean boolean0 = loja0.equals(encomenda0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertFalse(boolean0);
      
      encomenda0.setData((LocalDateTime) null);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      
      loja0.removeEncomenda(encomenda0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isLevantada());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      
      String string0 = loja0.getNome();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", string0);
      assertNotNull(string0);
      
      loja0.setPassword((String) null);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      loja0.setLongitude((-1.0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      double double0 = loja0.getLongitude();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, double0, 0.01);
      
      String string1 = loja0.getCodigo();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", string1);
      assertNotNull(string1);
      
      String string2 = loja0.toString();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string2);
      assertNotNull(string2);
      
      Loja loja1 = loja0.clone();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNull(loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertNull(loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotNull(loja1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertNotNull(encomenda0);
      
      String string0 = encomenda0.toString();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      assertNotNull(string0);
      
      boolean boolean0 = encomenda0.equals((Object) null);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(boolean0);
      
      boolean boolean1 = encomenda0.equals((Object) null);
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      loja1.setLatitude(1.0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      
      encomenda0.setCodigo_loja("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      
      String string1 = encomenda0.toString();
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertFalse(string1.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string1);
      assertNotNull(string1);
      
      loja0.setNrPessoasEmFila(1382);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1382, loja0.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      
      String string2 = loja1.toString();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1382, loja0.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 1.0\nLongitude: 1.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string2);
      assertNotNull(string2);
      
      encomenda0.setCodigo_loja("Saco de lixo de 50l");
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("Saco de lixo de 50l", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      
      loja1.removeEncomenda(encomenda0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1382, loja0.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals("Saco de lixo de 50l", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isPreparada());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      
      double double0 = loja1.getLatitude();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1382, loja0.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(1.0, double0, 0.01);
      
      boolean boolean2 = loja1.equals(loja0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(1382, loja0.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      String string0 = loja0.toString();
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertNotNull(string0);
      
      loja0.setCodigo("");
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      
      Encomenda encomenda0 = null;
      // Undeclared exception!
      try { 
        loja0.updateEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Loja loja0 = null;
      try {
        loja0 = new Loja("9.Ffl'OfG`O[", "", "", "9.Ffl'OfG`O[", (-2547.156), 1.0, 1225.4, (ArrayList<Encomenda>) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertNotNull(loja0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = loja0.equals(object0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertFalse(boolean0);
      
      loja0.setNome((String) null);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNull(loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      
      loja0.setLatitude(2017.271911432004);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNull(loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(2017.271911432004, loja0.getLongitude(), 0.01);
      assertEquals(2017.271911432004, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja0 = new Loja("JpY;CLX6~heV5+$_0u}", "Tempo de espera: ", "Tempo de espera: ", "=QuilRQi-T/i", 0.0, (-568.672783), (-568.672783), arrayList0, 0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("JpY;CLX6~heV5+$_0u}", loja0.getEmail());
      assertEquals("Tempo de espera: ", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja0.getCodigo());
      assertEquals("=QuilRQi-T/i", loja0.getNome());
      assertEquals((-568.672783), loja0.getLongitude(), 0.01);
      assertEquals((-568.672783), loja0.getLatitude(), 0.01);
      assertNotNull(loja0);
      
      loja0.removeEncomenda((Encomenda) null);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("JpY;CLX6~heV5+$_0u}", loja0.getEmail());
      assertEquals("Tempo de espera: ", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja0.getCodigo());
      assertEquals("=QuilRQi-T/i", loja0.getNome());
      assertEquals((-568.672783), loja0.getLongitude(), 0.01);
      assertEquals((-568.672783), loja0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      loja0.setNome("C\u00F3digo: ");
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("C\u00F3digo: ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      ArrayList<Encomenda> arrayList1 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("C\u00F3digo: ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(arrayList1, arrayList0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertNotNull(arrayList1);
      
      String string0 = loja0.getEncNotReady();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("C\u00F3digo: ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("0", string0);
      assertNotNull(string0);
      
      Loja loja1 = loja0.clone();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("C\u00F3digo: ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getTypeUser());
      assertEquals("C\u00F3digo: ", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      loja0.setEmail("n%K0odNJi!eH");
      assertEquals("n%K0odNJi!eH", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("C\u00F3digo: ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      boolean boolean0 = loja1.equals((Object) null);
      assertEquals("n%K0odNJi!eH", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("C\u00F3digo: ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getTypeUser());
      assertEquals("C\u00F3digo: ", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(boolean0);
      
      String string1 = loja0.getCodigo();
      assertEquals("n%K0odNJi!eH", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("C\u00F3digo: ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotNull(string1);
      
      String string2 = loja0.getNome();
      assertEquals("n%K0odNJi!eH", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("C\u00F3digo: ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("C\u00F3digo: ", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      int int0 = loja0.getNrPessoasEmFila();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, int0);
      
      int int1 = loja0.getNrPessoasEmFila();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertTrue(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(arrayList0);
      
      Loja loja2 = new Loja("tZ5,J2-0[0", "tZ5,J2-0[0", "", "0", (-364.8096736017778), (-364.8096736017778), 3072.0070767, arrayList0, (-4411));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("0", loja2.getNome());
      assertEquals((-364.8096736017778), loja2.getLongitude(), 0.01);
      assertEquals((-364.8096736017778), loja2.getLatitude(), 0.01);
      assertEquals("tZ5,J2-0[0", loja2.getPassword());
      assertEquals((-4411), loja2.getNrPessoasEmFila());
      assertEquals((-364.8096736017778), loja2.getTempo_espera(), 0.01);
      assertEquals("tZ5,J2-0[0", loja2.getEmail());
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertNotNull(loja2);
      
      int int0 = loja2.getNrPessoasEmFila();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("0", loja2.getNome());
      assertEquals((-364.8096736017778), loja2.getLongitude(), 0.01);
      assertEquals((-364.8096736017778), loja2.getLatitude(), 0.01);
      assertEquals("tZ5,J2-0[0", loja2.getPassword());
      assertEquals((-4411), loja2.getNrPessoasEmFila());
      assertEquals((-364.8096736017778), loja2.getTempo_espera(), 0.01);
      assertEquals("tZ5,J2-0[0", loja2.getEmail());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals((-4411), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertNotNull(loja0);
      
      double double0 = loja0.getLatitude();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, double0, 0.01);
      
      loja0.setNrPessoasEmFila((-980));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals((-980), loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      loja0.setCodigo("");
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      loja0.setEmail("#(`x/XH`+{14]Syh,oP");
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("#(`x/XH`+{14]Syh,oP", loja0.getEmail());
      
      loja0.setTempo_espera(3844.59712);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(3844.59712, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("#(`x/XH`+{14]Syh,oP", loja0.getEmail());
      
      loja0.setCodigo("#(`x/XH`+{14]Syh,oP");
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(3844.59712, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("#(`x/XH`+{14]Syh,oP", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("#(`x/XH`+{14]Syh,oP", loja0.getEmail());
      
      String string0 = loja0.getCodigo();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(3844.59712, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("#(`x/XH`+{14]Syh,oP", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("#(`x/XH`+{14]Syh,oP", loja0.getEmail());
      assertEquals("#(`x/XH`+{14]Syh,oP", string0);
      assertNotNull(string0);
      
      double double0 = loja0.getTempo_espera();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(3844.59712, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("#(`x/XH`+{14]Syh,oP", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("#(`x/XH`+{14]Syh,oP", loja0.getEmail());
      assertEquals(3844.59712, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertNotNull(loja0);
      
      loja0.setTempo_espera(0.0);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      
      loja0.setPassword("+.");
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("+.", loja0.getPassword());
      
      loja0.setLatitude((-2575.402537236));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals((-2575.402537236), loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals((-2575.402537236), loja0.getLongitude(), 0.01);
      assertEquals("+.", loja0.getPassword());
      
      double double0 = loja0.getLatitude();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals((-2575.402537236), loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals((-2575.402537236), loja0.getLongitude(), 0.01);
      assertEquals("+.", loja0.getPassword());
      assertEquals((-2575.402537236), double0, 0.01);
      
      loja0.setCodigo("+.");
      assertEquals("", loja0.getEmail());
      assertEquals("+.", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals((-2575.402537236), loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals((-2575.402537236), loja0.getLongitude(), 0.01);
      assertEquals("+.", loja0.getPassword());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getEmail());
      assertEquals("+.", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals((-2575.402537236), loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals((-2575.402537236), loja0.getLongitude(), 0.01);
      assertEquals("+.", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      loja0.setNrPessoasEmFila(10);
      assertEquals("", loja0.getEmail());
      assertEquals("+.", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals((-2575.402537236), loja0.getLatitude(), 0.01);
      assertEquals(10, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals((-2575.402537236), loja0.getLongitude(), 0.01);
      assertEquals("+.", loja0.getPassword());
      
      loja0.setCodigo((String) null);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals((-2575.402537236), loja0.getLatitude(), 0.01);
      assertNull(loja0.getCodigo());
      assertEquals(10, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals((-2575.402537236), loja0.getLongitude(), 0.01);
      assertEquals("+.", loja0.getPassword());
      
      Encomenda encomenda0 = null;
      // Undeclared exception!
      try { 
        loja0.addEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotNull(loja0);
      
      loja0.setTempo_espera((-478.63375842065136));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-478.63375842065136), loja0.getTempo_espera(), 0.01);
      
      loja0.setNome(",N<C`rd`K(y:,e");
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(",N<C`rd`K(y:,e", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-478.63375842065136), loja0.getTempo_espera(), 0.01);
      
      String string0 = loja0.toString();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(",N<C`rd`K(y:,e", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-478.63375842065136), loja0.getTempo_espera(), 0.01);
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: ,N<C`rd`K(y:,e\nTempo de espera: -478.63375842065136\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertNotNull(string0);
      
      String string1 = loja0.getEncNotReady();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(",N<C`rd`K(y:,e", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-478.63375842065136), loja0.getTempo_espera(), 0.01);
      assertFalse(string1.equals((Object)string0));
      assertEquals("0", string1);
      assertNotNull(string1);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      loja0.addEncomenda(encomenda1);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(",N<C`rd`K(y:,e", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-478.63375842065136), loja0.getTempo_espera(), 0.01);
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getVendedor());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda0.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(" ", encomenda1.getComprador());
      assertFalse(encomenda1.isLevantada());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      loja1.setEmail("|'7zMwP4^-)");
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("|'7zMwP4^-)", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      
      loja1.setLatitude(1.0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(1.0, loja1.getLatitude(), 0.01);
      assertEquals(1.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("|'7zMwP4^-)", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      
      String string0 = loja0.getCodigo();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", string0);
      assertNotNull(string0);
      
      double double0 = loja0.getLongitude();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      String string0 = loja0.toString();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertNotNull(string0);
      
      loja0.setLatitude(1299.911676749);
      assertEquals(1299.911676749, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(1299.911676749, loja0.getLongitude(), 0.01);
      
      loja0.setNrPessoasEmFila(617);
      assertEquals(1299.911676749, loja0.getLatitude(), 0.01);
      assertEquals(617, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(1299.911676749, loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja0 = new Loja("\"U(", "\"U(", "dhcnyl", "LO", (-3238.1068001670997), 0.0, (-3238.1068001670997), arrayList0, 1);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("dhcnyl", loja0.getCodigo());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-3238.1068001670997), loja0.getTempo_espera(), 0.01);
      assertEquals("LO", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals("\"U(", loja0.getEmail());
      assertEquals("\"U(", loja0.getPassword());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("dhcnyl", loja0.getCodigo());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-3238.1068001670997), loja0.getTempo_espera(), 0.01);
      assertEquals("LO", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals("\"U(", loja0.getEmail());
      assertEquals("\"U(", loja0.getPassword());
      assertEquals("dhcnyl", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("\"U(", loja1.getPassword());
      assertEquals(1, loja1.getNrPessoasEmFila());
      assertEquals("LO", loja1.getNome());
      assertEquals((-3238.1068001670997), loja1.getTempo_espera(), 0.01);
      assertEquals("\"U(", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      int int0 = 0;
      loja1.setNrPessoasEmFila(0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("dhcnyl", loja0.getCodigo());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-3238.1068001670997), loja0.getTempo_espera(), 0.01);
      assertEquals("LO", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals("\"U(", loja0.getEmail());
      assertEquals("\"U(", loja0.getPassword());
      assertEquals("dhcnyl", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("\"U(", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("LO", loja1.getNome());
      assertEquals((-3238.1068001670997), loja1.getTempo_espera(), 0.01);
      assertEquals("\"U(", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      
      String string0 = loja0.toString();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("dhcnyl", loja0.getCodigo());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-3238.1068001670997), loja0.getTempo_espera(), 0.01);
      assertEquals("LO", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals("\"U(", loja0.getEmail());
      assertEquals("\"U(", loja0.getPassword());
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("Loja: \nC\u00F3digo da loja: dhcnyl\nNome da loja: LO\nTempo de espera: -3238.1068001670997\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \nLoja\n\n", string0);
      assertNotNull(string0);
      
      loja1.setCodigo("");
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("dhcnyl", loja0.getCodigo());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-3238.1068001670997), loja0.getTempo_espera(), 0.01);
      assertEquals("LO", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals("\"U(", loja0.getEmail());
      assertEquals("\"U(", loja0.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("\"U(", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("LO", loja1.getNome());
      assertEquals((-3238.1068001670997), loja1.getTempo_espera(), 0.01);
      assertEquals("\"U(", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      
      Encomenda encomenda0 = null;
      boolean boolean0 = arrayList0.add((Encomenda) null);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean0);
      
      try { 
        loja0.getEnc(".[Vnfh2)O}u");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Loja loja0 = null;
      try {
        loja0 = new Loja((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("UtilizadorSistema", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "oEa I";
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      int int0 = 1746;
      Loja loja0 = new Loja("oEa I", "#@I.\"uh84", "sv7q{&l|XK?", "oEa I", (-3592.1899691277963), (-1052.0), (-1052.0), arrayList0, 1746);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("oEa I", loja0.getEmail());
      assertEquals("sv7q{&l|XK?", loja0.getCodigo());
      assertEquals((-3592.1899691277963), loja0.getTempo_espera(), 0.01);
      assertEquals(1746, loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals((-1052.0), loja0.getLongitude(), 0.01);
      assertEquals((-1052.0), loja0.getLatitude(), 0.01);
      assertEquals("#@I.\"uh84", loja0.getPassword());
      assertEquals("oEa I", loja0.getNome());
      assertNotNull(loja0);
      
      loja0.setNome("Vendedor: ");
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("oEa I", loja0.getEmail());
      assertEquals("sv7q{&l|XK?", loja0.getCodigo());
      assertEquals((-3592.1899691277963), loja0.getTempo_espera(), 0.01);
      assertEquals(1746, loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals((-1052.0), loja0.getLongitude(), 0.01);
      assertEquals("Vendedor: ", loja0.getNome());
      assertEquals((-1052.0), loja0.getLatitude(), 0.01);
      assertEquals("#@I.\"uh84", loja0.getPassword());
      
      Loja loja1 = new Loja(loja0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("oEa I", loja0.getEmail());
      assertEquals("sv7q{&l|XK?", loja0.getCodigo());
      assertEquals((-3592.1899691277963), loja0.getTempo_espera(), 0.01);
      assertEquals(1746, loja0.getNrPessoasEmFila());
      assertEquals("Loja", loja0.getTypeUser());
      assertEquals((-1052.0), loja0.getLongitude(), 0.01);
      assertEquals("Vendedor: ", loja0.getNome());
      assertEquals((-1052.0), loja0.getLatitude(), 0.01);
      assertEquals("#@I.\"uh84", loja0.getPassword());
      assertEquals("sv7q{&l|XK?", loja1.getCodigo());
      assertEquals("oEa I", loja1.getEmail());
      assertEquals(1746, loja1.getNrPessoasEmFila());
      assertEquals("#@I.\"uh84", loja1.getPassword());
      assertEquals((-1052.0), loja1.getLatitude(), 0.01);
      assertEquals("Vendedor: ", loja1.getNome());
      assertEquals((-1052.0), loja1.getLongitude(), 0.01);
      assertEquals((-3592.1899691277963), loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      try { 
        loja1.getEnc("oEa I");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Encomenda encomenda0 = new Encomenda();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertNotNull(encomenda0);
      
      Encomenda encomenda1 = new Encomenda(encomenda0);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      Map<String, LinhaEncomenda> map0 = encomenda1.getProdutos();
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda1, encomenda0);
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertNotNull(map0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(1424);
      assertNotNull(zoneOffset0);
      
      Clock clock0 = MockClock.tickSeconds(zoneOffset0);
      assertNotNull(clock0);
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      assertNotNull(localDateTime0);
      
      Encomenda encomenda2 = new Encomenda("", "gACQD", "!%OY>q/Zu", 0.0, (String) null, "", map0, false, localDateTime0, true, false, false);
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("gACQD", encomenda2.getCodigo_user());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo());
      assertFalse(encomenda2.isLevantada());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isEntregue());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals("!%OY>q/Zu", encomenda2.getCodigo_loja());
      assertNull(encomenda2.getComprador());
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertNotNull(encomenda2);
      
      boolean boolean0 = arrayList0.add(encomenda2);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isLevantada());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda1.isEntregue());
      assertFalse(encomenda1.isPreparada());
      assertEquals(" ", encomenda1.getCodigo_user());
      assertFalse(encomenda1.isLevantada());
      assertEquals(" ", encomenda1.getCodigo_loja());
      assertEquals(" ", encomenda1.getCodigo());
      assertEquals(" ", encomenda1.getVendedor());
      assertEquals(" ", encomenda1.getComprador());
      assertTrue(encomenda1.isEncomendaMedica());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("gACQD", encomenda2.getCodigo_user());
      assertEquals("", encomenda2.getVendedor());
      assertEquals("", encomenda2.getCodigo());
      assertFalse(encomenda2.isLevantada());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertTrue(encomenda2.isEntregue());
      assertFalse(encomenda2.isEncomendaMedica());
      assertFalse(encomenda2.isPreparada());
      assertEquals("!%OY>q/Zu", encomenda2.getCodigo_loja());
      assertNull(encomenda2.getComprador());
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda1, encomenda0);
      assertNotSame(encomenda1, encomenda2);
      assertNotSame(encomenda2, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      assertFalse(encomenda0.equals((Object)encomenda2));
      assertTrue(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda1.equals((Object)encomenda0));
      assertFalse(encomenda1.equals((Object)encomenda2));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertFalse(encomenda2.equals((Object)encomenda0));
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(encomenda2));
      assertFalse(arrayList0.contains(encomenda0));
      
      Encomenda encomenda3 = new Encomenda();
      assertFalse(encomenda3.isLevantada());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isPreparada());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getVendedor());
      assertTrue(encomenda3.isEncomendaMedica());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertNotNull(encomenda3);
      
      Map<String, LinhaEncomenda> map1 = encomenda3.getProdutos();
      assertFalse(encomenda3.isLevantada());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isPreparada());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getVendedor());
      assertTrue(encomenda3.isEncomendaMedica());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(map1, map0);
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertTrue(map1.equals((Object)map0));
      assertNotNull(map1);
      
      LocalDateTime localDateTime1 = MockLocalDateTime.now();
      assertNotSame(localDateTime1, localDateTime0);
      assertFalse(localDateTime1.equals((Object)localDateTime0));
      assertNotNull(localDateTime1);
      
      Encomenda encomenda4 = new Encomenda("0Y,v(:ex#j#8)", "Saco de lixo 30l", (String) null, 0.0, "Saco de lixo 30l", (String) null, map1, true, localDateTime1, false, false, false);
      assertFalse(encomenda3.isLevantada());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isPreparada());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getVendedor());
      assertTrue(encomenda3.isEncomendaMedica());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertEquals("Saco de lixo 30l", encomenda4.getCodigo_user());
      assertFalse(encomenda4.isEntregue());
      assertEquals("0Y,v(:ex#j#8)", encomenda4.getCodigo());
      assertFalse(encomenda4.isPreparada());
      assertFalse(encomenda4.isLevantada());
      assertEquals("Saco de lixo 30l", encomenda4.getComprador());
      assertTrue(encomenda4.isEncomendaMedica());
      assertNull(encomenda4.getCodigo_loja());
      assertNull(encomenda4.getVendedor());
      assertEquals(0.0, encomenda4.getPeso(), 0.01);
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertTrue(map1.equals((Object)map0));
      assertFalse(localDateTime1.equals((Object)localDateTime0));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertFalse(encomenda4.equals((Object)encomenda0));
      assertNotNull(encomenda4);
      
      boolean boolean1 = arrayList0.add(encomenda4);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertFalse(encomenda3.isLevantada());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertFalse(encomenda3.isPreparada());
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getVendedor());
      assertTrue(encomenda3.isEncomendaMedica());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertTrue(map1.isEmpty());
      assertEquals(0, map1.size());
      assertEquals("Saco de lixo 30l", encomenda4.getCodigo_user());
      assertFalse(encomenda4.isEntregue());
      assertEquals("0Y,v(:ex#j#8)", encomenda4.getCodigo());
      assertFalse(encomenda4.isPreparada());
      assertFalse(encomenda4.isLevantada());
      assertEquals("Saco de lixo 30l", encomenda4.getComprador());
      assertTrue(encomenda4.isEncomendaMedica());
      assertNull(encomenda4.getCodigo_loja());
      assertNull(encomenda4.getVendedor());
      assertEquals(0.0, encomenda4.getPeso(), 0.01);
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda4);
      assertNotSame(map1, map0);
      assertNotSame(localDateTime1, localDateTime0);
      assertNotSame(encomenda4, encomenda1);
      assertNotSame(encomenda4, encomenda3);
      assertNotSame(encomenda4, encomenda2);
      assertNotSame(encomenda4, encomenda0);
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda4));
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertTrue(map1.equals((Object)map0));
      assertFalse(localDateTime1.equals((Object)localDateTime0));
      assertFalse(encomenda4.equals((Object)encomenda1));
      assertFalse(encomenda4.equals((Object)encomenda3));
      assertFalse(encomenda4.equals((Object)encomenda2));
      assertFalse(encomenda4.equals((Object)encomenda0));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(arrayList0.contains(encomenda4));
      assertFalse(arrayList0.contains(encomenda3));
      
      Loja loja0 = new Loja("]d'ntddv{,W", "]d'ntddv{,W", "", "", 0.0, 0.0, 0.0, arrayList0, 0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals("Loja", loja0.getTypeUser());
      assertTrue(arrayList0.contains(encomenda4));
      assertFalse(arrayList0.contains(encomenda3));
      assertNotNull(loja0);
      
      Encomenda encomenda5 = loja0.getEnc("");
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals("Loja", loja0.getTypeUser());
      assertTrue(encomenda5.isEntregue());
      assertEquals("", encomenda5.getVendedor());
      assertEquals("", encomenda5.getCodigo());
      assertFalse(encomenda5.isLevantada());
      assertFalse(encomenda5.isPreparada());
      assertEquals("gACQD", encomenda5.getCodigo_user());
      assertFalse(encomenda5.isEncomendaMedica());
      assertEquals(0.0, encomenda5.getPeso(), 0.01);
      assertEquals("!%OY>q/Zu", encomenda5.getCodigo_loja());
      assertNull(encomenda5.getComprador());
      assertNotSame(encomenda5, encomenda0);
      assertNotSame(encomenda5, encomenda2);
      assertNotSame(encomenda5, encomenda3);
      assertNotSame(encomenda5, encomenda1);
      assertNotSame(encomenda5, encomenda4);
      assertFalse(encomenda5.equals((Object)encomenda0));
      assertFalse(encomenda5.equals((Object)encomenda3));
      assertFalse(encomenda5.equals((Object)encomenda1));
      assertFalse(encomenda5.equals((Object)encomenda4));
      assertTrue(arrayList0.contains(encomenda4));
      assertFalse(arrayList0.contains(encomenda3));
      assertNotNull(encomenda5);
      
      loja0.updateEncomenda(encomenda3);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertFalse(encomenda3.isLevantada());
      assertEquals(0.0, encomenda3.getPeso(), 0.01);
      assertEquals(" ", encomenda3.getComprador());
      assertEquals(" ", encomenda3.getCodigo());
      assertEquals(" ", encomenda3.getVendedor());
      assertTrue(encomenda3.isEncomendaMedica());
      assertFalse(encomenda3.isEntregue());
      assertEquals(" ", encomenda3.getCodigo_loja());
      assertEquals(" ", encomenda3.getCodigo_user());
      assertTrue(encomenda3.isPreparada());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(encomenda3, encomenda2);
      assertNotSame(encomenda3, encomenda0);
      assertNotSame(encomenda3, encomenda1);
      assertNotSame(encomenda3, encomenda4);
      assertNotSame(encomenda3, encomenda5);
      assertTrue(encomenda3.equals((Object)encomenda1));
      assertFalse(encomenda3.equals((Object)encomenda2));
      assertFalse(encomenda3.equals((Object)encomenda4));
      assertTrue(encomenda3.equals((Object)encomenda0));
      assertFalse(encomenda3.equals((Object)encomenda5));
      assertTrue(arrayList0.contains(encomenda4));
      assertFalse(arrayList0.contains(encomenda3));
      
      loja0.setLatitude(0.0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals("Loja", loja0.getTypeUser());
      assertTrue(arrayList0.contains(encomenda4));
      assertFalse(arrayList0.contains(encomenda3));
      
      Loja loja1 = loja0.clone();
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja1.getEmail());
      assertEquals("]d'ntddv{,W", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(loja1, loja0);
      assertNotSame(loja0, loja1);
      assertTrue(arrayList0.contains(encomenda4));
      assertFalse(arrayList0.contains(encomenda3));
      assertNotNull(loja1);
      
      double double0 = loja0.getLongitude();
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertEquals(0.0, double0, 0.01);
      assertTrue(arrayList0.contains(encomenda4));
      assertFalse(arrayList0.contains(encomenda3));
      
      Loja loja2 = loja1.clone();
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja1.getEmail());
      assertEquals("]d'ntddv{,W", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("]d'ntddv{,W", loja2.getPassword());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("]d'ntddv{,W", loja2.getEmail());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getNome());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertTrue(arrayList0.contains(encomenda4));
      assertFalse(arrayList0.contains(encomenda3));
      assertNotNull(loja2);
      
      int int0 = loja0.getNrPessoasEmFila();
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("]d'ntddv{,W", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("]d'ntddv{,W", loja0.getEmail());
      assertEquals("Loja", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertEquals(0, int0);
      assertTrue(arrayList0.contains(encomenda4));
      assertFalse(arrayList0.contains(encomenda3));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertNotNull(loja0);
      
      String string0 = loja0.toString();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertNotNull(string0);
      
      String string1 = loja0.toString();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertTrue(string1.equals((Object)string0));
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string1);
      assertNotNull(string1);
      
      System.setCurrentTimeMillis(0L);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = 0.0;
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      int int0 = (-1982487857);
      Loja loja1 = new Loja("0Y,v(:ex#j#8)", "BcS&!M;8)'", "0Y,v(:ex#j#8)", "BcS&!M;8)'", 0.0, (-1.0), 0.0, arrayList0, (-1982487857));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getPassword());
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertEquals((-1982487857), loja1.getNrPessoasEmFila());
      assertEquals("0Y,v(:ex#j#8)", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getNome());
      assertEquals("0Y,v(:ex#j#8)", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertFalse(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertFalse(encomenda0.isPreparada());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertNotNull(encomenda0);
      
      loja0.setLongitude((-1.0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      
      loja1.updateEncomenda(encomenda0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getPassword());
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertEquals((-1982487857), loja1.getNrPessoasEmFila());
      assertEquals("0Y,v(:ex#j#8)", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getNome());
      assertEquals("0Y,v(:ex#j#8)", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getVendedor());
      assertEquals(" ", encomenda0.getComprador());
      assertFalse(encomenda0.isEntregue());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getCodigo());
      assertFalse(encomenda0.isLevantada());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(arrayList0.contains(encomenda0));
      
      ArrayList<Encomenda> arrayList1 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(loja0, loja1);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertFalse(arrayList1.contains(encomenda0));
      assertNotNull(arrayList1);
      
      Loja loja2 = loja1.clone();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getPassword());
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertEquals((-1982487857), loja1.getNrPessoasEmFila());
      assertEquals("0Y,v(:ex#j#8)", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getNome());
      assertEquals("0Y,v(:ex#j#8)", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1.0), loja2.getLongitude(), 0.01);
      assertEquals((-1982487857), loja2.getNrPessoasEmFila());
      assertEquals("0Y,v(:ex#j#8)", loja2.getEmail());
      assertEquals("BcS&!M;8)'", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("BcS&!M;8)'", loja2.getNome());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals((-1.0), loja2.getLatitude(), 0.01);
      assertEquals("0Y,v(:ex#j#8)", loja2.getCodigo());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(arrayList0.contains(encomenda0));
      assertNotNull(loja2);
      
      Loja loja3 = loja1.clone();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getPassword());
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertEquals((-1982487857), loja1.getNrPessoasEmFila());
      assertEquals("0Y,v(:ex#j#8)", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getNome());
      assertEquals("0Y,v(:ex#j#8)", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("0Y,v(:ex#j#8)", loja3.getEmail());
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals((-1.0), loja3.getLatitude(), 0.01);
      assertEquals("0Y,v(:ex#j#8)", loja3.getCodigo());
      assertEquals((-1.0), loja3.getLongitude(), 0.01);
      assertEquals("BcS&!M;8)'", loja3.getNome());
      assertEquals((-1982487857), loja3.getNrPessoasEmFila());
      assertEquals("BcS&!M;8)'", loja3.getPassword());
      assertEquals("Loja", loja3.getTypeUser());
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja1.equals((Object)loja2));
      assertTrue(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertTrue(loja3.equals((Object)loja1));
      assertFalse(arrayList0.contains(encomenda0));
      assertNotNull(loja3);
      
      String string0 = loja1.toString();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getPassword());
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertEquals((-1982487857), loja1.getNrPessoasEmFila());
      assertEquals("0Y,v(:ex#j#8)", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("BcS&!M;8)'", loja1.getNome());
      assertEquals("0Y,v(:ex#j#8)", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja1.equals((Object)loja3));
      assertTrue(loja1.equals((Object)loja2));
      assertEquals("Loja: \nC\u00F3digo da loja: 0Y,v(:ex#j#8)\nNome da loja: BcS&!M;8)'\nTempo de espera: 0.0\nLatitude: -1.0\nLongitude: -1.0\nLista de encomendas recebidas: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\n <--- O utilizador \u00E9: \nLoja\n\n", string0);
      assertFalse(arrayList0.contains(encomenda0));
      assertNotNull(string0);
      
      String string1 = loja0.toString();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(string1.equals((Object)string0));
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string1);
      assertNotNull(string1);
      
      try { 
        loja3.getEnc("?");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotNull(loja0);
      
      loja0.setLatitude(0.0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      loja0.setLatitude(0.0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      double double0 = loja0.getLongitude();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, double0, 0.01);
      
      String string0 = "Loja: ";
      Loja loja1 = loja0.clone();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      loja1.setNome("Loja: ");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("Loja: ", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      
      int int0 = loja0.getNrPessoasEmFila();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0, int0);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("Loja: ", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(arrayList0);
      
      Loja loja2 = new Loja();
      assertEquals("", loja2.getEmail());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getTypeUser());
      assertTrue(loja2.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja0));
      assertNotNull(loja2);
      
      loja2.setEmail("Loja: ");
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getTypeUser());
      assertEquals("Loja: ", loja2.getEmail());
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      
      boolean boolean0 = loja0.equals(loja2);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getTypeUser());
      assertEquals("Loja: ", loja2.getEmail());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(boolean0);
      
      loja1.setCodigo("Loja: ");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("Loja: ", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("Loja: ", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      
      loja2.setLongitude(0.0);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getTypeUser());
      assertEquals("Loja: ", loja2.getEmail());
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      
      String string1 = loja0.getNome();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertNotNull(string1);
      
      boolean boolean1 = loja2.equals(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getTypeUser());
      assertEquals("Loja: ", loja2.getEmail());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      loja0.setTempo_espera(345.002377510824);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(345.002377510824, loja0.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      
      try { 
        loja1.getEnc("Loja: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      Loja loja1 = loja0.clone();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      boolean boolean0 = loja1.equals(loja0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(boolean0);
      
      loja1.setLongitude((-3336.0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      
      loja0.setNome("l&pqK!fk");
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("l&pqK!fk", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertTrue(loja1.equals((Object)loja0));
      assertNotNull(loja1);
      
      loja1.setNome("Produtos: ");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Produtos: ", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotNull(loja0);
      
      HashMap<String, LinhaEncomenda> hashMap0 = new HashMap<String, LinhaEncomenda>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      Encomenda encomenda0 = new Encomenda();
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      assertNotNull(encomenda0);
      
      loja0.addEncomenda(encomenda0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertFalse(encomenda0.isPreparada());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertFalse(encomenda0.isLevantada());
      
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      assertNotNull(localDateTime0);
      
      Encomenda encomenda1 = new Encomenda("", (String) null, "", 0.0, "", "", hashMap0, true, localDateTime0, false, true, true);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda1.isLevantada());
      assertEquals("", encomenda1.getVendedor());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertNull(encomenda1.getCodigo_user());
      assertTrue(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getComprador());
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertNotNull(encomenda1);
      
      encomenda1.setEncomendaMedica(true);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda1.isLevantada());
      assertEquals("", encomenda1.getVendedor());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertNull(encomenda1.getCodigo_user());
      assertTrue(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getComprador());
      assertNotSame(encomenda1, encomenda0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      loja0.setNome("");
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      
      String string0 = encomenda1.toString();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda1.isLevantada());
      assertEquals("", encomenda1.getVendedor());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertNull(encomenda1.getCodigo_user());
      assertTrue(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getComprador());
      assertNotSame(encomenda1, encomenda0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      assertEquals("\nEncomenda: \nC\u00F3digo: \nC\u00F3digo do utilizador: null\nC\u00F3digo da loja: \nPeso: 0.0\nComprador: \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string0);
      assertNotNull(string0);
      
      loja0.removeEncomenda(encomenda1);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda1.isLevantada());
      assertEquals("", encomenda1.getVendedor());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertNull(encomenda1.getCodigo_user());
      assertTrue(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getComprador());
      assertNotSame(encomenda1, encomenda0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      String string1 = loja0.getEncNotReady();
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertFalse(string1.equals((Object)string0));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string1);
      assertNotNull(string1);
      
      loja0.setTempo_espera(0.0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      
      String string2 = loja0.getCodigo();
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("", string2);
      assertNotNull(string2);
      
      double double0 = loja0.getLongitude();
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, double0, 0.01);
      
      loja0.addEncomenda(encomenda1);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(encomenda1.isLevantada());
      assertEquals("", encomenda1.getVendedor());
      assertEquals("", encomenda1.getCodigo());
      assertTrue(encomenda1.isEncomendaMedica());
      assertNull(encomenda1.getCodigo_user());
      assertTrue(encomenda1.isPreparada());
      assertEquals(0.0, encomenda1.getPeso(), 0.01);
      assertFalse(encomenda1.isEntregue());
      assertEquals("", encomenda1.getCodigo_loja());
      assertEquals("", encomenda1.getComprador());
      assertNotSame(encomenda1, encomenda0);
      assertFalse(encomenda1.equals((Object)encomenda0));
      
      String string3 = loja0.getEncNotReady();
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(string3.equals((Object)string1));
      assertEquals("\nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n", string3);
      assertNotNull(string3);
      
      loja0.updateEncomenda(encomenda0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertNotSame(encomenda0, encomenda1);
      assertFalse(encomenda0.equals((Object)encomenda1));
      
      String string4 = loja0.toString();
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas: \nEncomenda: \nC\u00F3digo:  \nC\u00F3digo do utilizador:  \nC\u00F3digo da loja:  \nPeso: 0.0\nComprador:  \nVendedor:  \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\n\nEncomenda: \nC\u00F3digo: \nC\u00F3digo do utilizador: null\nC\u00F3digo da loja: \nPeso: 0.0\nComprador: \nVendedor: \nData de emiss\u00E3o da encomenda: 2014-02-14T20:21:21.320\nProdutos: \n{}\n\n <--- O utilizador \u00E9: \n\n\n", string4);
      assertNotNull(string4);
      
      loja0.setNome("f?+ ! O-(s+8 ");
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("f?+ ! O-(s+8 ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      Encomenda encomenda2 = new Encomenda(encomenda0);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertEquals(" ", encomenda2.getCodigo());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getComprador());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      assertNotNull(encomenda2);
      
      loja0.addEncomenda(encomenda2);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("f?+ ! O-(s+8 ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, encomenda0.getPeso(), 0.01);
      assertEquals(" ", encomenda0.getVendedor());
      assertFalse(encomenda0.isEntregue());
      assertEquals(" ", encomenda0.getCodigo_loja());
      assertEquals(" ", encomenda0.getComprador());
      assertEquals(" ", encomenda0.getCodigo());
      assertTrue(encomenda0.isEncomendaMedica());
      assertEquals(" ", encomenda0.getCodigo_user());
      assertTrue(encomenda0.isPreparada());
      assertFalse(encomenda0.isLevantada());
      assertEquals(" ", encomenda2.getCodigo_user());
      assertEquals(" ", encomenda2.getCodigo());
      assertFalse(encomenda2.isLevantada());
      assertEquals(" ", encomenda2.getComprador());
      assertTrue(encomenda2.isEncomendaMedica());
      assertTrue(encomenda2.isPreparada());
      assertEquals(" ", encomenda2.getVendedor());
      assertEquals(0.0, encomenda2.getPeso(), 0.01);
      assertFalse(encomenda2.isEntregue());
      assertEquals(" ", encomenda2.getCodigo_loja());
      assertNotSame(encomenda0, encomenda2);
      assertNotSame(encomenda0, encomenda1);
      assertNotSame(encomenda2, encomenda0);
      assertNotSame(encomenda2, encomenda1);
      assertTrue(encomenda0.equals((Object)encomenda2));
      assertFalse(encomenda0.equals((Object)encomenda1));
      assertTrue(encomenda2.equals((Object)encomenda0));
      assertFalse(encomenda2.equals((Object)encomenda1));
      
      String string5 = loja0.getNome();
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("f?+ ! O-(s+8 ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertEquals("f?+ ! O-(s+8 ", string5);
      assertNotNull(string5);
      
      loja0.setLongitude((-399.953507));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("f?+ ! O-(s+8 ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      String string6 = loja0.getCodigo();
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("f?+ ! O-(s+8 ", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertEquals("", string6);
      assertNotNull(string6);
      
      // Undeclared exception!
      try { 
        loja0.updateEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = new Loja(loja0);
      loja0.getEncNotReady();
      Encomenda encomenda0 = new Encomenda();
      Map<String, LinhaEncomenda> map0 = encomenda0.getProdutos();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      LocalTime localTime0 = MockLocalTime.ofNanoOfDay(0L);
      LocalDateTime localDateTime0 = MockLocalDateTime.of(localDate0, localTime0);
      Encomenda encomenda1 = new Encomenda((String) null, "0", "Encomenda: ", (-709.29515957), "Encomenda: ", "", map0, true, localDateTime0, true, false, true);
      loja1.updateEncomenda(encomenda1);
      loja1.setLongitude(0.0);
      loja1.equals((Object) null);
      loja1.getEncNotReady();
      loja1.setNrPessoasEmFila((-1003));
      loja0.getTempo_espera();
      loja1.setNrPessoasEmFila((-1003));
      assertEquals((-1003), loja1.getNrPessoasEmFila());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      Loja loja0 = new Loja("o4a,42aC?z}t5s3$&", "%Gw8'/U Cx<.1883>", "C\u00F3digo do utilizador: ", "", (-447.934717644779), 1245, (-447.934717644779), arrayList0, 2147483645);
      Loja loja1 = new Loja(loja0);
      try { 
        loja1.getEnc("+%qe2SyB=Pgu$;4k");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      Loja loja0 = new Loja("", "", "", "", 1.0, 1.0, 0.0, arrayList0, 1929);
      ArrayList<Encomenda> arrayList1 = loja0.getEncomendas_recebidas();
      loja0.setEncomendas_recebidas(arrayList0);
      Loja loja1 = loja0.clone();
      assertTrue(loja1.equals((Object)loja0));
      
      loja0.setTypeUser("x9hY=ym~;'eMc}+");
      loja1.setCodigo("x9hY=ym~;'eMc}+");
      loja0.setCodigo((String) null);
      loja0.getCodigo();
      loja1.toString();
      loja1.getEncNotReady();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      MockLocalDateTime.ofEpochSecond(1929, 1929, zoneOffset0);
      boolean boolean0 = loja0.equals(arrayList1);
      assertFalse(boolean0);
      
      loja0.setCodigo((String) null);
      assertEquals(1929, loja0.getNrPessoasEmFila());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.clone();
      Loja loja1 = new Loja(loja0);
      loja1.setCodigo("miG^c&F(fBIIO0.D");
      loja1.equals(loja0);
      Loja loja2 = loja0.clone();
      loja0.setTempo_espera((-3499.51));
      loja1.getEncNotReady();
      loja1.setNrPessoasEmFila(1);
      String string0 = "";
      try { 
        loja2.getEnc("miG^c&F(fBIIO0.D");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }
}
